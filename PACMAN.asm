TITLE TESTE_PACMAN
.MODEL SMALL
.STACK 100H
.DATA
		

	; M_TITLE_ANIM 	DB		 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5	;COMECA NA LINHA 29
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,5,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,5,5,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,5,5,5,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,5,2,1,5,0,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,5,5,5,5,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,5,0,5,5,0,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,5,5,5,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,5,5,5,5,5,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,5,5,5,5,5,5,5,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,5,2,1,5,5,5,2,1,5,0,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,5,5,5,5,5,5,5,5,5,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,5,0,0,5,5,5,0,5,5,0,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,5,0,0,0,5,0,0,0,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,6,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,6,6,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,2,1,6,0,0,5,2,1,5,5,5,2,1,5,0,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,6,6,6,0,0,5,5,5,5,5,5,5,5,5,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,6,6,0,0,5,0,0,5,5,5,0,5,5,0,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,6,0,0,5,0,0,0,5,0,0,0,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,6,6,6,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,6,6,6,6,6,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,6,6,6,6,6,6,6,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,2,1,6,6,6,2,1,6,0,0,5,2,1,5,5,5,2,1,5,0,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,6,6,6,6,6,6,6,6,0,0,5,5,5,5,5,5,5,5,5,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,6,0,6,6,6,0,6,6,0,0,5,0,0,5,5,5,0,5,5,0,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,6,0,0,0,6,0,0,5,0,0,0,5,0,0,0,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,7,0,0,0,0,6,6,6,6,6,6,6,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,2,7,0,0,6,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,1,7,0,0,6,2,1,6,6,6,2,1,6,0,0,5,2,1,5,5,5,2,1,5,0,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,2,7,0,0,6,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,7,7,0,0,6,6,6,6,6,6,6,6,6,0,0,5,5,5,5,5,5,5,5,5,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,7,7,0,0,6,6,0,6,6,6,0,6,6,0,0,5,0,0,5,5,5,0,5,5,0,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,7,0,0,6,0,0,0,6,0,0,0,6,0,0,5,0,0,0,5,0,0,0,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,7,7,7,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,7,7,7,7,7,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,7,7,7,7,7,7,0,0,0,0,6,6,6,6,6,6,6,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,2,7,7,7,2,2,7,0,0,6,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,1,7,7,7,2,1,7,0,0,6,2,1,6,6,6,2,1,6,0,0,5,2,1,5,5,5,2,1,5,0,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,2,7,7,7,2,2,7,0,0,6,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,7,7,7,7,7,7,7,0,0,6,6,6,6,6,6,6,6,6,0,0,5,5,5,5,5,5,5,5,5,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,7,7,7,0,7,7,0,0,6,6,0,6,6,6,0,6,6,0,0,5,0,0,5,5,5,0,5,5,0,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,7,0,0,0,7,0,0,6,0,0,0,6,0,0,0,6,0,0,5,0,0,0,5,0,0,0,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,7,7,7,7,7,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,6,6,6,6,6,6,6,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,7,2,2,7,7,7,2,2,7,0,0,6,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,7,2,1,7,7,7,2,1,7,0,0,6,2,1,6,6,6,2,1,6,0,0,5,2,1,5,5,5,2,1,5,0,0,4,2,1,4,4,4,2,1,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,7,2,2,7,7,7,2,2,7,0,0,6,2,2,6,6,6,2,2,6,0,0,5,2,2,5,5,5,2,2,5,0,0,4,2,2,4,4,4,2,2,4,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,1
					; DB		,1,0,0,0,7,7,7,7,7,7,7,7,7,0,0,6,6,6,6,6,6,6,6,6,0,0,5,5,5,5,5,5,5,5,5,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,2,2,2,2,2,2,2,0,0,0,0,0,1
					; DB		,1,0,0,0,7,7,0,7,7,7,0,7,7,0,0,6,6,0,6,6,6,0,6,6,0,0,5,0,0,5,5,5,0,5,5,0,0,4,4,0,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,1
					; DB		,1,0,0,0,7,0,0,0,7,0,0,0,7,0,0,6,0,0,0,6,0,0,0,6,0,0,5,0,0,0,5,0,0,0,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,1
					; ;9			
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,3,3,9,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;+1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,3,3,3,3,3,0,0,0,2,2,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,3,3,3,3,3,3,3,3,3,0,2,2,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,3,3,3,3,3,3,3,3,3,0,2,0,0,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,3,3,3,3,3,3,3,3,3,0,2,2,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;9
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;+1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,3,3,3,3,3,0,0,0,2,0,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,3,3,3,3,3,3,3,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,8,9,9,9,8,9,9,0,0,3,3,3,3,3,3,3,3,3,0,2,2,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,0,0,3,3,3,3,3,3,3,3,3,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,8,9,9,0,0,3,3,3,3,3,3,3,3,3,0,0,0,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,9,8,9,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,9,0,9,9,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;+1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,9,9,8,9,9,9,8,9,9,0,0,9,9,9,9,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,9,9,8,9,8,9,8,9,9,0,0,9,9,8,9,8,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,9,8,9,8,9,8,9,8,9,0,0,9,8,9,8,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,9,9,0,9,9,9,0,9,9,0,0,9,9,0,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,9,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,2,2,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,9,9,8,9,9,9,8,9,9,0,0,3,3,3,3,3,3,3,3,3,0,0,0,2,2,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,3,3,3,3,3,3,3,3,3,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,9,9,8,9,8,9,8,9,9,0,0,3,3,3,3,3,3,3,3,3,0,0,0,2,2,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,9,8,9,8,9,8,9,8,9,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,9,9,0,9,9,9,0,9,9,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,0,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,9,9,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,9,9,8,9,9,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,9,9,9,9,9,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,9,9,8,9,8,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,9,8,9,8,9,8,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,9,9,0,9,9,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,9,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;+1
					; DB		,1,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,3,3,3,3,3,0,0,0,2,0,2,2,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,3,3,3,3,3,3,3,0,0,2,0,2,0,0,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,3,3,3,3,3,3,3,3,3,0,2,0,2,2,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,3,3,3,3,3,3,3,3,3,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,3,3,3,3,3,3,3,3,3,0,2,0,2,2,2,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;5
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; ;+1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					; DB		,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
					
					
			
	SELECTION		DB		 0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0
					DB		,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1
					DB		,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1
					DB		,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1
					DB		,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0
	
	
	
	
	MAPA			DB	   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1	;1 - parede; 2 - pacman; 3 - points; 4 - power-ups; A - redGhost; B - orangeGhost; C - pinkGhost; D - cyanGhost
					DB	  ,1,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,1	
					DB	  ,1,4,1,1,3,1,1,1,3,1,3,1,1,1,3,1,1,4,1
					DB	  ,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1
					DB	  ,1,3,1,1,3,1,3,1,1,1,1,1,3,1,3,1,1,3,1
					DB	  ,1,3,3,3,3,1,3,3,3,1,3,3,3,1,3,3,3,3,1
					DB	  ,1,1,1,1,3,1,1,1,6,1,6,1,1,1,3,1,1,1,1
					DB	  ,0,0,0,1,3,1,6,6,6,0AH,6,6,6,1,3,1,0,0,0
					DB	  ,1,1,1,1,3,1,6,1,1,1,1,1,6,1,3,1,1,1,1
					DB	  ,5,6,6,6,3,6,6,1,0DH,0CH,0BH,1,6,6,3,6,6,6,5
					DB	  ,1,1,1,1,3,1,6,1,1,1,1,1,6,1,3,1,1,1,1
					DB	  ,0,0,0,1,3,1,6,6,6,6,6,6,6,1,3,1,0,0,0
					DB	  ,1,1,1,1,3,1,6,1,1,1,1,1,6,1,3,1,1,1,1
					DB	  ,1,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,1
					DB	  ,1,3,1,1,3,1,1,1,3,1,3,1,1,1,3,1,1,3,1
					DB	  ,1,4,3,1,3,3,3,3,3,2,3,3,3,3,3,1,3,4,1
					DB	  ,1,1,3,1,3,1,3,1,1,1,1,1,3,1,3,1,3,1,1
					DB	  ,1,3,3,3,3,1,3,3,3,1,3,3,3,1,3,3,3,3,1
					DB	  ,1,3,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1,3,1
					DB	  ,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1
					DB	  ,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1
				
				
				
	MAP0			DB	   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1	;1 - parede; 2 - pacman; 3 - points; 4 - power-ups; A - redGhost; B - orangeGhost; C - pinkGhost; D - cyanGhost
					DB	  ,1,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,1
					DB	  ,1,4,1,1,3,1,1,1,3,1,3,1,1,1,3,1,1,4,1
					DB	  ,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1
					DB	  ,1,3,1,1,3,1,3,1,1,1,1,1,3,1,3,1,1,3,1
					DB	  ,1,3,3,3,3,1,3,3,3,1,3,3,3,1,3,3,3,3,1
					DB	  ,1,1,1,1,3,1,1,1,6,1,6,1,1,1,3,1,1,1,1
					DB	  ,0,0,0,1,3,1,6,6,6,0AH,6,6,6,1,3,1,0,0,0
					DB	  ,1,1,1,1,3,1,6,1,1,9,1,1,6,1,3,1,1,1,1
					DB	  ,5,6,6,6,3,6,6,1,0DH,0CH,0BH,1,6,6,3,6,6,6,5
					DB	  ,1,1,1,1,3,1,6,1,1,1,1,1,6,1,3,1,1,1,1
					DB	  ,0,0,0,1,3,1,6,6,6,8,6,6,6,1,3,1,0,0,0
					DB	  ,1,1,1,1,3,1,6,1,1,1,1,1,6,1,3,1,1,1,1
					DB	  ,1,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,1
					DB	  ,1,3,1,1,3,1,1,1,3,1,3,1,1,1,3,1,1,3,1
					DB	  ,1,4,3,1,3,3,3,3,3,2,3,3,3,3,3,1,3,4,1
					DB	  ,1,1,3,1,3,1,3,1,1,1,1,1,3,1,3,1,3,1,1
					DB	  ,1,3,3,3,3,1,3,3,3,1,3,3,3,1,3,3,3,3,1
					DB	  ,1,3,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1,3,1
					DB	  ,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1
					DB	  ,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					
					
					
	MAP1			DB	   1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1	;19x21
					DB	  ,1,4,3,3,3,3,3,1,3,3,3,1,3,3,3,3,3,4,1
					DB	  ,1,3,1,1,1,3,1,1,1,3,1,1,1,3,1,1,1,3,1
					DB	  ,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1
					DB	  ,1,3,1,3,1,1,1,1,3,1,3,1,1,1,1,3,1,3,1
					DB	  ,1,3,1,3,1,3,3,3,3,1,3,3,3,3,1,3,1,3,1
					DB	  ,1,3,1,3,1,3,1,1,6,1,6,1,1,3,1,3,1,3,1
					DB	  ,1,3,1,3,3,3,1,6,6,0AH,6,6,1,3,3,3,1,3,1
					DB	  ,1,3,1,3,1,3,1,6,1,9,1,6,1,3,1,3,1,3,1
					DB	  ,1,3,3,3,1,3,6,6,1,0CH,1,6,6,3,1,3,3,3,1
					DB	  ,5,3,1,1,1,1,6,1,1,0BH,1,1,6,1,1,1,1,3,5
					DB	  ,1,3,3,3,1,3,6,6,1,0DH,1,6,6,3,1,3,3,3,1
					DB	  ,1,3,1,3,1,3,1,6,1,1,1,6,1,3,1,3,1,3,1
					DB	  ,1,3,1,3,3,3,1,6,6,8,6,6,1,3,3,3,1,3,1
					DB	  ,1,3,1,3,1,3,1,1,6,1,6,1,1,3,1,3,1,3,1
					DB	  ,1,3,1,3,1,3,3,3,3,1,3,3,3,3,1,3,1,3,1
					DB	  ,1,3,1,3,1,1,1,1,3,1,3,1,1,1,1,3,1,3,1
					DB	  ,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,1
					DB	  ,1,3,1,1,1,3,1,1,1,3,1,1,1,3,1,1,1,3,1
					DB	  ,1,4,3,3,3,3,3,1,3,3,3,1,3,3,3,3,3,4,1
					DB	  ,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1
				
				
				
	MAP2			DB	   1,1,1,1,1,1,5,1,1,1,1,1,5,1,1,1,1,1,1
					DB	  ,1,3,3,3,3,3,3,1,3,4,3,1,3,3,3,3,3,3,1
					DB	  ,1,3,1,1,1,1,3,1,3,1,3,1,3,1,1,1,1,3,1
					DB	  ,1,3,1,3,3,3,3,3,3,1,3,3,3,3,3,3,1,3,1
					DB	  ,1,3,3,3,1,3,1,1,3,1,3,1,1,3,1,3,3,3,1
					DB	  ,1,1,1,3,1,3,3,3,3,3,3,3,3,3,1,3,1,1,1
					DB	  ,1,3,3,3,1,1,6,1,1,1,1,1,6,1,1,3,3,3,1
					DB	  ,1,3,1,3,3,6,6,6,6,0AH,6,6,6,6,3,3,1,3,1
					DB	  ,1,3,1,1,3,1,6,1,1,9,1,1,6,1,3,1,1,3,1
					DB	  ,1,3,3,4,3,1,6,1,0DH,0CH,0BH,1,6,1,3,4,3,3,1
					DB	  ,1,3,1,3,1,1,6,1,1,1,1,1,6,1,1,3,1,3,1
					DB	  ,1,3,1,3,3,6,6,6,6,8,6,6,6,6,3,3,1,3,1
					DB	  ,1,3,1,1,3,1,1,1,6,1,6,1,1,1,3,1,1,3,1
					DB	  ,1,3,3,3,3,1,3,3,3,1,3,3,3,1,3,3,3,3,1
					DB	  ,1,1,3,1,3,1,3,1,1,1,1,1,3,1,3,1,3,1,1
					DB	  ,1,3,3,1,3,3,3,3,3,2,3,3,3,3,3,1,3,3,1
					DB	  ,1,3,1,1,3,1,1,1,3,1,3,1,1,1,3,1,1,3,1
					DB	  ,1,3,3,3,3,1,3,3,3,1,3,3,3,1,3,3,3,3,1
					DB	  ,1,3,1,1,3,1,3,1,1,1,1,1,3,1,3,1,1,3,1
					DB	  ,1,3,3,3,3,1,3,3,3,4,3,3,3,1,3,3,3,3,1
					DB	  ,1,1,1,1,1,1,5,1,1,1,1,1,5,1,1,1,1,1,1
					
					
					
	MAPA_CMP		DB	   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	  ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					
					
	DIFFICULTY		DB		 0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0 ;34x(5+5+5) = 34x15
					DB		,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,1,0,1,0,0,0,1,1,1,0,1,1,1,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0
					DB		,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0
					DB		,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0
					DB		,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0
					DB		,0,0,0,1,0,0,0,1,0,0,1,1,1,0,1,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,1,0,0,0
					DB		,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0
					
	MENU_TXT    	DB       1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1
                    DB      ,1,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,0,0,0,0,1,1,0,1,1,0,0,1,1,1,0,0,1,1,0,1,1
                    DB      ,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1
                    DB      ,1,1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1
                    DB      ,1,1,0,0,0,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1
					
	MAPS_TXT		DB		 1,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1
					DB		,1,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0
					DB		,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0
					DB		,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1
					DB		,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,1,1,0
					
	QUIT_TXT		DB		 1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1
					DB		,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0
					DB		,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0
					DB		,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0
					DB		,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,0
					
	CREDITS_TXT		DB		 1,1,1,1,0,0,1,1,1,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1
					DB		,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,1,0,0,0,0
					DB		,1,1,1,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1
					DB		,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1
					DB		,1,0,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,1,0,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1
					
	CONTROLS_TXT	DB		 1,1,1,1,1,0,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1
					DB		,1,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0
					DB		,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,1,1,0
					DB		,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1
					DB		,1,1,1,1,1,0,1,1,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0
					
	SCORE_TXT		DB		 0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1
					DB		,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0
					DB		,0,1,1,1,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,0,0,1,1,1,0,0
					DB		,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0
					DB		,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,0,1,1,0,1,1,1,1,1
					
	LIVES_TXT		DB		 1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,0,0,1,1,1,1
					DB		,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0
					DB		,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,1,1,0,0,0,0,1,1,1,0
					DB		,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1
					DB		,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0
					
					
	QUIT_GAME_TXT	DB		 1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0
					DB		,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1
					DB		,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0
					DB		,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0
					DB		,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0	
					DB		,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0
					DB		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0
					DB		,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,0
					DB		,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0
					DB		,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0
					DB		,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0
					
	GET_READY_TXT	DB		 0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,1,0,0,1,1,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
					
					DB		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB		,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,0,1,0,1
					DB		,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1
					DB		,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1
					DB		,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0
					DB		,1,0,0,1,1,0,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,0,0,1
					
	YOUWIN_TXT		DB	 1,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,1	
					DB	,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1
					DB	,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1
					DB	,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,1
					DB	,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,1,1
					DB	,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1
					DB	,0,0,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,1,0,0,1,1,1,1,1,0,1,0,0,0,1
					
	YOULOSE_TXT		DB	 0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0
					DB	,2,1,2,2,2,1,2,1,1,1,1,1,2,1,2,2,2,1,2,2,1,2,2,2,2,2,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,2,2
					DB	,2,1,3,2,2,1,3,1,3,3,3,1,3,1,3,2,2,1,3,2,1,3,2,2,2,2,1,3,3,3,1,3,1,3,3,3,3,3,1,3,3,3,3,3,2
					DB	,2,2,1,3,1,3,2,1,3,2,2,1,3,1,3,2,2,1,3,2,1,3,2,2,2,2,1,3,2,2,1,3,1,3,2,2,2,2,1,3,2,2,2,2,2
					DB	,2,2,2,1,3,2,2,1,3,2,2,1,3,1,3,2,2,1,3,2,1,3,2,2,2,2,1,3,2,2,1,3,1,1,1,1,1,2,1,1,1,1,2,2,2
					DB	,2,2,2,1,3,2,2,1,3,2,2,1,3,1,3,2,2,1,3,2,1,3,2,2,2,2,1,3,2,2,1,3,2,3,3,3,1,3,1,3,3,3,3,2,2
					DB	,2,2,2,1,3,2,2,1,3,2,2,1,3,1,3,2,2,1,3,2,1,3,2,2,2,2,1,3,2,2,1,3,2,2,2,2,1,3,1,3,2,2,2,2,2
					DB	,2,2,2,1,3,2,2,1,1,1,1,1,3,1,1,1,1,1,3,2,1,1,1,1,1,2,1,1,1,1,1,3,1,1,1,1,1,3,1,1,1,1,1,2,2
					DB	,2,2,2,2,3,2,2,2,3,3,3,3,3,2,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,3,3,2
					DB	,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0
							
			
			
	NUM0			DB		0,1,1,1,1,1,0
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		0,1,1,1,1,1,0
					
					
					
	NUM1			DB		0,0,0,1,0,0,0
					DB		0,0,1,1,0,0,0
					DB		0,1,0,1,0,0,0
					DB		1,0,0,1,0,0,0
					DB		0,0,0,1,0,0,0
					DB		0,0,0,1,0,0,0
					DB		0,0,0,1,0,0,0
					DB		0,0,0,1,0,0,0
					DB		0,0,0,1,0,0,0
					DB		1,1,1,1,1,1,1
					
					
					
	NUM2			DB		1,1,1,1,1,1,0
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,1,0
					DB		0,0,0,0,1,0,0
					DB		0,0,0,1,0,0,0
					DB		0,0,1,0,0,0,0
					DB		0,1,0,0,0,0,0
					DB		1,0,0,0,0,0,0
					DB		1,1,1,1,1,1,1
					
					
					
	NUM3			DB		1,1,1,1,1,1,0
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,1,1
					DB		0,0,0,1,1,1,0
					DB		0,0,0,0,0,1,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		1,1,1,1,1,1,0
			
			
			
	NUM4			DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		0,1,1,1,1,1,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
			
			
			
	NUM5			DB		1,1,1,1,1,1,1
					DB		1,0,0,0,0,0,0
					DB		1,0,0,0,0,0,0
					DB		1,0,0,0,0,0,0
					DB		1,1,1,1,1,1,0
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		1,1,1,1,1,1,0
			
			
			
	NUM6			DB		0,1,1,1,1,1,0
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,0
					DB		1,0,0,0,0,0,0
					DB		1,1,1,1,1,1,0
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		0,1,1,1,1,1,0
					
					
					
	NUM7			DB		1,1,1,1,1,1,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,1,0
					DB		0,0,0,0,0,1,0
					DB		0,0,0,0,1,0,0
					DB		0,0,0,0,1,0,0
					DB		0,0,0,1,0,0,0
					DB		0,0,0,1,0,0,0
					DB		0,0,0,1,0,0,0
					
					
					
	NUM8			DB		0,1,1,1,1,1,0
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		0,1,1,1,1,1,0
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		0,1,1,1,1,1,0
					
					
					
	NUM9			DB		0,1,1,1,1,1,0
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		0,1,1,1,1,1,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		0,0,0,0,0,0,1
					DB		1,0,0,0,0,0,1
					DB		0,1,1,1,1,1,0
	
	
			
	PAC_RGT			DB	    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC SERIO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOCAO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
			
			
			
	PAC_UP			DB	    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC SERIO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOCAO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
					DB	   ,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	
	
	
	PAC_LFT			DB	    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC SERIO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOCAO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

					
	
	PAC_DWN			DB	    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;27x27, PAC SERIO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOCÃO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0
					DB	   ,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC BOQUINHA
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

					

	PAC_UP_DEAD		DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC SENTIU UMA FLECHADA NO JOELHO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC MORRENDO
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
					DB	   ,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;PAC NO BICO DO CORVO 
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0


					
	PONTOS			DB	    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;pontos
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0


					
	POWERUP			DB	    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;pontos
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					
		
	FRUTA			DB	    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;pontos
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,2,2,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,2,2,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,2,2,1,1,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,2,2,1,1,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,1,1,3,3,1,1,1,1,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,1,1,3,3,1,1,1,1,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,1,1,1,1,1,1,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	   ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		

		
	FANTASMA_LEFT	DB	 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;fantasma
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	,0,0,0,1,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,0,0,0
					DB	,0,0,0,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,1,1,1,1,0,0,0
					DB	,0,0,3,3,3,3,2,2,2,1,1,1,1,1,3,3,3,2,2,2,1,1,1,1,1,0,0
					DB	,0,0,3,3,3,3,3,2,2,1,1,1,1,1,3,3,3,3,2,2,1,1,1,1,1,0,0
					DB	,0,0,1,3,3,3,3,2,2,1,1,1,1,1,3,3,3,3,2,2,1,1,1,1,1,0,0
					DB	,0,0,1,3,3,3,3,2,2,1,1,1,1,1,3,3,3,3,2,2,1,1,1,1,1,0,0
					DB	,0,0,1,3,3,3,2,2,2,1,1,1,1,1,3,3,3,2,2,2,1,1,1,1,1,0,0
					DB	,0,0,1,1,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0
					DB	,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0
					DB	,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
	FANTASMA_RIGHT	DB	 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;fantasma
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	,0,0,0,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,1,0,0,0
					DB	,0,0,0,1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,0,0,0
					DB	,0,0,1,1,1,1,1,2,2,2,3,3,3,1,1,1,1,1,2,2,2,3,3,3,0,0,0
					DB	,0,0,1,1,1,1,1,2,2,3,3,3,3,1,1,1,1,1,2,2,3,3,3,3,0,0,0
					DB	,0,0,1,1,1,1,1,2,2,3,3,3,3,1,1,1,1,1,2,2,3,3,3,3,1,0,0
					DB	,0,0,1,1,1,1,1,2,2,3,3,3,3,1,1,1,1,1,2,2,3,3,3,3,1,0,0
					DB	,0,0,1,1,1,1,1,2,2,2,3,3,3,1,1,1,1,1,2,2,2,3,3,3,1,0,0
					DB	,0,0,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0
					DB	,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0
					DB	,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
	FANTASMA_UP		DB	 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;fantasma
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	,0,0,0,1,1,1,3,3,3,3,1,1,1,1,1,1,1,3,3,3,3,1,1,1,0,0,0
					DB	,0,0,0,1,1,3,3,3,3,3,3,1,1,1,1,1,3,3,3,3,3,3,1,1,0,0,0
					DB	,0,0,1,1,1,2,3,3,3,3,2,1,1,1,1,1,2,3,3,3,3,2,1,1,1,0,0
					DB	,0,0,1,1,1,2,2,3,3,2,2,1,1,1,1,1,2,2,3,3,2,2,1,1,1,0,0
					DB	,0,0,1,1,1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,1,1,1,0,0
					DB	,0,0,1,1,1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,1,1,1,0,0
					DB	,0,0,1,1,1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,1,1,1,0,0
					DB	,0,0,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0
					DB	,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0
					DB	,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
	FANTASMA_DOWN	DB	 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;fantasma
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	,0,0,0,1,1,1,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,1,1,1,0,0,0
					DB	,0,0,0,1,1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,1,1,0,0,0
					DB	,0,0,1,1,1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,1,1,1,0,0
					DB	,0,0,1,1,1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,1,1,1,0,0
					DB	,0,0,1,1,1,2,2,3,3,2,2,1,1,1,1,1,2,2,3,3,2,2,1,1,1,0,0
					DB	,0,0,1,1,1,2,3,3,3,3,2,1,1,1,1,1,2,3,3,3,3,2,1,1,1,0,0
					DB	,0,0,1,1,1,3,3,3,3,3,3,1,1,1,1,1,3,3,3,3,3,3,1,1,1,0,0
					DB	,0,0,1,1,1,1,3,3,3,3,1,1,1,1,1,1,1,3,3,3,3,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0
					DB	,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0
					DB	,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					
					
	SCARED_GHOST	DB	 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;fantasma
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
					DB	,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
					DB	,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,2,2,2,1,1,1,1,1,2,2,2,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,2,2,2,1,1,1,1,1,2,2,2,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,2,2,2,1,1,1,1,1,2,2,2,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,2,2,1,1,2,2,2,1,1,2,2,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,2,2,1,1,2,2,1,1,1,2,2,1,1,2,2,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
					DB	,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0
					DB	,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0
					DB	,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
					DB	,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				
				
				
	PAC_LIVE_MAT	DB		 0,0,1,1,1,1,1,0,0,0
					DB		,0,1,1,1,1,1,1,1,0,0
					DB		,1,1,1,1,1,1,1,1,1,0
					DB		,0,0,1,1,1,1,1,1,1,1
					DB		,0,0,0,0,1,1,1,1,1,1
					DB		,0,0,0,0,0,1,1,1,1,1
					DB		,0,0,0,0,1,1,1,1,1,1
					DB		,0,0,1,1,1,1,1,1,1,1
					DB		,1,1,1,1,1,1,1,1,1,0
					DB		,0,1,1,1,1,1,1,1,0,0
					DB		,0,0,1,1,1,1,1,0,0,0
					
					
					
	LINHA					DW	17
	LINHAAUX				DW	0;NOVOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
	COLUNA					DW	17
	
	COLMAIS					DW	0
	LINMAIS					DW	0
	MATRIZ					DW	0
	QUADCOL					DW	0
	QUADLIN					DW	0
	QUADSIZE				DW	?
	
	TITLE_ANIM_COUNT		DB	0
	TITLE_ANIM_STOP_FLAG	DB	0
	
	QUADSIZE_X				DW	?
	QUADSIZE_Y				DW	?
	STARTX					DW	?
	STARTY					DW	?
	
	MATRIZ_LIFE				DW	0
	QUADCOL_LIFE			DW	0
	QUADLIN_LIFE			DW	0
	
	LIMPACY					DW	0
	LIMPACX					DW	0
	
	MATPAC					DW	0
	BUFFERMAT				DW	0
	MATDEADPAC				DW	0
	
	WHICH_GHOST				DB	?
	WHICH_EYE				DB	?	;NOVO
	
	WHERE_IS_RED_GHOST		DW	0
	WHAT_WAS_HERE_RED		DB	6
	REDGHOST_POS_AUXILIAR	DW	0
	CAN_RED_GHOST_MOVE		DB	1
	SPAWN_RED_GHOST			DW	0
	TESTE_DIRECTION_RED		DB	0
	LAST_TRY_RED			DB	?
	RED_DIED_FLAG			DB	0
	RED_FLAG_MINI_STOP		DB	0
	RED_GHOST_LOOKING_AT	DB	0
	RED_DEAD_FLAG			DB	?	;NOVO
	RED_EYE_LOOKING_AT		DB	?	;NOVO
	WHERE_IS_RED_EYE		DW	?	;NOVO
	RED_EYE_HERE_BEF		DB	?	;NOVO
	RED_EYE_CAME_FROM		DW	?	;NOVO
	
	WHERE_IS_PINK_GHOST		DW	0
	WHAT_WAS_HERE_PINK		DB	6
	PINKGHOST_POS_AUXILIAR	DW	0
	CAN_PINK_GHOST_MOVE		DB	1
	SPAWN_PINK_GHOST		DW	0
	TESTE_DIRECTION_PINK	DB	0
	LAST_TRY_PINK			DB	?
	PINK_DIED_FLAG			DB	0
	PINK_FLAG_MINI_STOP		DB	0
	PINK_E_PORTA			DB	0
	PINK_GHOST_LOOKING_AT	DB	0
	PINK_DEAD_FLAG			DB	?	;NOVO
	PINK_EYE_LOOKING_AT		DB	?	;NOVO
	WHERE_IS_PINK_EYE		DW	?	;NOVO
	PINK_EYE_HERE_BEF		DB	?	;NOVO
	PINK_EYE_CAME_FROM		DW	?	;NOVO
	
	WHERE_IS_ORAN_GHOST		DW	0
	WHAT_WAS_HERE_ORAN		DB	6
	ORANGHOST_POS_AUXILIAR	DW	0
	CAN_ORAN_GHOST_MOVE		DB	1
	SPAWN_ORAN_GHOST		DW	0
	TESTE_DIRECTION_ORAN	DB	0
	LAST_TRY_ORAN			DB	?
	ORAN_DIED_FLAG			DB	0
	ORAN_FLAG_MINI_STOP		DB	0
	ORAN_E_PORTA			DB	0
	ORAN_GHOST_LOOKING_AT	DB	0
	ORAN_DEAD_FLAG			DB	?	;NOVO
	ORAN_EYE_LOOKING_AT		DB	?	;NOVO
	WHERE_IS_ORAN_EYE		DW	?	;NOVO
	ORAN_EYE_HERE_BEF		DB	?	;NOVO
	ORAN_EYE_CAME_FROM		DW	?	;NOVO
	
	WHERE_IS_CYAN_GHOST		DW	0
	WHAT_WAS_HERE_CYAN		DB	6
	CYANGHOST_POS_AUXILIAR	DW	0
	CAN_CYAN_GHOST_MOVE		DB	1
	SPAWN_CYAN_GHOST		DW	0
	TESTE_DIRECTION_CYAN	DB	0
	LAST_TRY_CYAN			DB	?
	CYAN_DIED_FLAG			DB	0
	CYAN_FLAG_MINI_STOP		DB	0
	CYAN_E_PORTA			DB	0
	CYAN_GHOST_LOOKING_AT	DB	0
	CYAN_DEAD_FLAG			DB	?	;NOVO
	CYAN_EYE_LOOKING_AT		DB	?	;NOVO
	WHERE_IS_CYAN_EYE		DW	?	;NOVO
	CYAN_EYE_HERE_BEF		DB	?	;NOVO
	CYAN_EYE_CAME_FROM		DW	?	;NOVO
	
	WHERE_IS_PACMAN			DW	0
	SPAWN_PACMAN			DW	0
	PACMAN_LOOKING_AT		DW	0 	;1-cima; 2-direita; 3-baixo; 4-esquerda
	PACMAN_POS_AUXILIAR		DW	0
	
	SCORE_NUM				DW	0 	;variável da pontuação
	PAC_LIVES				DB	2 	;variavel das vidas
	LOSS_LIFE_FLAG			DB	0
	HOW_MANY_POINTS			DB	0
	
	BIRL					DB	0	;flag para saber se o pacman virou monstro
	IS_ON_POWERUP			DB	0
	POWERUP_FINAL_TIME		DB	?
	POWERUP_SECONDS_TIME	DB	7
	
	MENU_CONTROL			DW	0 ;<-para a escolha do menu 
	VARLINHA				DW	0 ;<-para salvar linha atual 
	VARLINHAAUX				DW	0 ;<-para salvar linha passada 
	FLAG_MENU_CONTROL		DW	0;<-para printar a linha passada
	
	WALLC					DB	020H
	DOORC					DB	04FH
	
	COR						DB	0
	COR_AUX					DB	0
	
	WHICH_MAP				DW	0
	COUNTING_MAP			DW	0
	
	MSB						DW	0
    SMSB					DW	0
    SLSB					DW	0
    LSB						DW	0
	
	VALOR_X_ALG				DW	0
	
	QUIT_FLAG				DB	0	;1-SIM/0-NÃO
	
	DELAY_TIME				DW	0
	
	DEAD_FLAG				DB	0
	
	CAN_PAC_MOVE			DB	0
	
	TECLA					DB	?
	LAST_KEY				DB	?
	DESIRED_KEY				DB	0
	
	TEXT_X					DB	0
	TEXT_Y					DB	0
	
	MSG_RANK_EASY			DB	"---------------------RANK EASY----------------------$"	
	MSG_RANK_MEDIUM			DB	"--------------------RANK MEDIUM---------------------$"	
	MSG_RANK_HARD			DB	"---------------------RANK HARD----------------------$"	
	
	MSG_LINHA_MAIOR			DB	"---------------------------------------$"
	MSG_YOURSCORE_LIST		DB	"|    YOUR SCORE    |       NAME       |$"
	;MSG_LINHA_MAIOR		DB	"---------------------------------------$"
	MSG_BLANK_YOUR_LIST		DB	"|                  |                  |$"
	;MSG_LINHA_MAIOR		DB	"---------------------------------------$"
	
	MSG_LINHA_MAIOR_AINDA	DB	"----------------------------------------------------$"
	MSG_SCORES_LIST			DB	"|     POS      |       SCORE      |      NAME      |$"
	;MSG_LINHA_MAIOR_AINDA	DB	"----------------------------------------------------$"
	MSG_FIRST_LIST			DB	"|     1ST      |                  |                |$"
	;MSG_LINHA_MAIOR_AINDA	DB	"----------------------------------------------------$"
	MSG_SECOND_LIST			DB	"|     2ND      |                  |                |$"
	;MSG_LINHA_MAIOR_AINDA	DB	"----------------------------------------------------$"
	MSG_THIRD_LIST			DB	"|     3RD      |                  |                |$"
	;MSG_LINHA_MAIOR_AINDA	DB	"----------------------------------------------------$"
	
	NOMES_TOP3				DB	6 DUP('-'),'$'
							DB	6 DUP('-'),'$'
							DB	6 DUP('-'),'$'
							
	SCORE_ALG_TOP3			DB	4 DUP('0'),'$'
							DB	4 DUP('0'),'$'
							DB	4 DUP('0'),'$'
	
	SCORE_TEMP1             DB	4 DUP(' '),'$'
	
	VAULT_NUM1				DW	0
	VAULT_NUM2				DW	0
	VAULT_NUM3				DW	0
	VAULT_NUM_AUX			DW	?
	
	WHICH_RANK				DW	0	
	
	MSG_LINHA				DB	"-------------------------------$"
	MSG_CONTROLS_LIST		DB	"|    ACTION     |     KEY     |$"
	;MSG_LINHA				DB	"-------------------------------$"
	MSG_W_CONTROLE			DB	"|  MOVE UP      |     'W'     |$"
	MSG_S_CONTROLE			DB	"|  MOVE DOWN    |     'S'     |$"
	MSG_D_CONTROLE			DB	"|  MOVE RIGHT   |     'D'     |$"
	MSG_A_CONTROLE			DB	"|  MOVE LEFT    |     'A'     |$"
	MSG_ESC_CONTROLE		DB	"|  GAME PAUSE   |    'ESC'    |$"
	;MSG_LINHA				DB	"-------------------------------$"
	
	;MSG_LINHA				DB	"-------------------------------$"
	MSG_CREDITS_LIST		DB	"|          DEVELOPERS         |$"
	;MSG_LINHA				DB	"-------------------------------$"
	MSG_CREDITS_NAME1		DB	"|         BRUNO MARINI        |$"
	MSG_CREDITS_NAME2		DB	"|        MARCOS AURELIO       |$"
	MSG_CREDITS_NAME3		DB	"|       AUGUSTO ZAMBELLO      |$"
	;MSG_LINHA				DB	"-------------------------------$"
	
	MSG_RETURN				DB	"PRESS ANY KEY TO RETURN$"
	
	MSG_INS_NAME            DB    'INSIRA SEU NICK$'
    MSG_MAX_CARAC           DB    '(MAX 6 CARACTERES)$'
    
	FILENAME_EASY           DB    'RANK1.txt', 0
	
	FILENAME_MEDI			DB    'RANK2.txt', 0
	
	FILENAME_HARD			DB    'RANK3.txt', 0
	
	BARRA					DB	  '-'
	
    NOME                    DB    10
							DB	  ?
							DB	  10 DUP(0)
	
    HANDLE                  DW    ?
	
	SCORE_ALG				DB		5 DUP(?)
	
	GAME_STARTED			DB		0
	LAST_CHECK_GAME_TIME	DB		?
	GAME_TIME				DB		0
	
	FIRST_MAP_PRINT			DB		0
	
	WHERE_IS_FRUIT			DW		?
	FRUIT_SCORE				DB		0
	MAX_FRUIT_SCORE			DB		25
	HOW_MANY_FRUITS			DB		0
	
	
	POINT_A_X				DW		?			;NOVO
	POINT_A_Y				DW		?			;NOVO
	POINT_B_X				DW		?			;NOVO
	POINT_B_Y				DW		?			;NOVO
	
	DISTANCIAS				DB		4 DUP(?)	;NOVO
	DIS_ORD					DB		4 DUP(0)	;NOVO
	Y_DIS					DB		4 DUP(?)	;NOVO
	POS_AUX_LEFT			DW		?
	POS_AUX_RIGHT			DW		?
	POS_AUX_DOWN			DW		?
	POS_AUX_UP				DW		?
	
	
.CODE
	MOV AX, @DATA
	MOV DS, AX
	
;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#############################################################################---------MAIN---------##################################################################################;
;#####################################################################################################################################################################################;

;-----------------------------------------------------------------------------START GAME-----------------------------------------------------------------------;
	CALL LIMPA_TELA
RETURN_MENU_SCREEN:
	CALL MENU_SCREEN
	CMP MENU_CONTROL,1
	JE CONTROLS
	CMP MENU_CONTROL,2
	JE CREDITS
	CMP MENU_CONTROL,0
	JE MAPS
	
	MOV AX, 0003H
	INT 10H
	MOV AH, 4CH
	INT 21H ;QUIT
	
CONTROLS:
	CALL CONTROLS_SCREEN
	JMP RETURN_MENU_SCREEN
CREDITS:
	CALL CREDITS_SCREEN
	JMP RETURN_MENU_SCREEN
MAPS:
	CALL MAP_SELECTION
	CMP QUIT_FLAG, 1
	JE RETURN_MENU_SCREEN
	
	MOV QUADSIZE_X, 72		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 99
	MOV COLUNA, 560
	MOV LINHA, 20
	MOV COR, 23H
	MOV QUADSIZE, 2
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
	MOV QUADSIZE_X, 72		;INICIO DOS PARAMETROS DO QUADRADO SCORE
	MOV QUADSIZE_Y, 41
	MOV COLUNA, 560
	MOV LINHA, 20
	MOV COR, 23H
	MOV QUADSIZE, 2
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO SCORE
	MOV QUADSIZE_X, 72		;INICIO DOS PARAMETROS DO QUADRADO LIVES
	MOV QUADSIZE_Y, 44
	MOV COLUNA, 560
	MOV LINHA, 185
	MOV COR, 23H
	MOV QUADSIZE, 2
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO LIVES
	CALL SIDEMENU_SCORE
	CALL SIDEMENU_LIVES
	
	CALL RESET_TO_LOOP_GAME ;zera as variáveis necessárias
	
	CALL GAME_LOOP
	CMP QUIT_FLAG, 1
	JE RETORNA_MENU

	CMP HOW_MANY_POINTS, 0
	JE VICTORY
	;VOCE PERDEU
	CALL YOULOSE_TXT_PRINT
	JMP RETORNA_MENU
VICTORY:
	;VOCE GANHOU
	CALL YOUWIN_SCREEN
	
RETORNA_MENU:
	JMP RETURN_MENU_SCREEN
;------------------------------------------------------------------------------END GAME------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#############################################################################---------MAIN---------##################################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#############################################################################------ESSENTIALS------##################################################################################;
;#####################################################################################################################################################################################;

;-----------------------------------------------------------------------------GAME LOOP------------------------------------------------------------------------;
GAME_LOOP PROC	
	CALL LIMPA_BUFFER

INICIO_JOGO:
	CMP QUIT_FLAG, 1
	JNE COMPARE_FIM_JOGO
	RET
	
COMPARE_FIM_JOGO:
	CMP DEAD_FLAG, 1
	JNZ COMPARE_GAME_LOOP
	RET
	
COMPARE_GAME_LOOP:
	MOV BX, MATRIZ
	CMP [MAPA_CMP + BX], 0
	JE MAPA_PRINT_BLOCK
	JMP COMPARA_FIM_MAPA
	
MAPA_PRINT_BLOCK:
	CMP [MAPA + BX], 6
	JE PRINT_BLACK_HERE_JMP
	CMP BX, WHERE_IS_PACMAN
	JE PRINT_PAC_HERE_JMP
	CMP [MAPA + BX], 3
	JE PRINT_POINT_HERE_JMP
	CMP [MAPA + BX], 4
	JE PRINT_POWERUP_HERE_JMP
	CMP [MAPA + BX], 7
	JE PRINT_FRUIT_HERE_JMP
	CMP [MAPA + BX], 8			;NOVO
	JE PRINT_EYE_HERE_JMP		;NOVO
	CMP [MAPA +BX], 9
	JE PRINT_DOOR_MAP_HERE_JMP
	CMP [MAPA + BX], 0AH
	JE PRINT_RED_GHOST_HERE_JMP
	CMP [MAPA + BX], 0CH
	JE PRINT_PINK_GHOST_HERE_JMP
	CMP [MAPA + BX], 0BH
	JE PRINT_ORAN_GHOST_HERE_JMP
	CMP [MAPA + BX], 0DH
	JE PRINT_CYAN_GHOST_HERE_JMP
	
COMPARA_FIM_MAPA:
	CMP QUADCOL,19
	JNZ SEGUE_COLUNA_JMP
	CMP QUADLIN,21
	JE ZERA_QUADLIN_JMP
	INC QUADLIN
	INC MATRIZ
RETORNO_ZERA_QUADLIN:
	MOV QUADCOL, 0
	JMP RESETA_INICIO_JOGO
	
SEGUE_COLUNA_JMP:
	JMP SEGUE_COLUNA
	
ZERA_QUADLIN_JMP:
	JMP ZERA_QUADLIN
	
PRINT_BLACK_HERE_JMP:
	JMP PRINT_BLACK_HERE
	
PRINT_PAC_HERE_JMP:
	JMP PRINT_PAC_HERE
	
PRINT_POINT_HERE_JMP:
	JMP PRINT_POINT_HERE
	
PRINT_POWERUP_HERE_JMP:
	JMP PRINT_POWERUP_HERE
	
PRINT_FRUIT_HERE_JMP:
	JMP PRINT_FRUIT_HERE
	
PRINT_EYE_HERE_JMP:		;NOVO
	JMP PRINT_EYE_HERE	;NOVO
	
PRINT_DOOR_MAP_HERE_JMP:
	JMP PRINT_DOOR_MAP_HERE
	
PRINT_RED_GHOST_HERE_JMP:
	JMP PRINT_RED_GHOST_HERE
	
PRINT_PINK_GHOST_HERE_JMP:
	JMP PRINT_PINK_GHOST_HERE
	
PRINT_ORAN_GHOST_HERE_JMP:
	JMP PRINT_ORAN_GHOST_HERE
	
PRINT_CYAN_GHOST_HERE_JMP:
	JMP PRINT_CYAN_GHOST_HERE
	
ZERA_QUADLIN:
	MOV QUADLIN, 0
	MOV MATRIZ,0
	
	XOR CX, CX
	MOV BX, 0
COUNT_POINT:
	CMP [MAPA + BX], 3
	JNZ CHECK_POINTS_LOOP
	INC CX
CHECK_POINTS_LOOP:
	INC BX
	CMP BX, 399
	JL COUNT_POINT
	
	MOV HOW_MANY_POINTS, CL
	
	CMP FIRST_MAP_PRINT, 1
	JE GAME_MOVES
	CALL PRINT_GET_READY_SM
	MOV DELAY_TIME, 100
	CALL DELAY
	CALL ERASE_GET_READY_SM
	MOV FIRST_MAP_PRINT, 1
;----------------------------------Move Game------------------;
GAME_MOVES:
	CMP LOSS_LIFE_FLAG, 1
	JNZ CHECK_SCORE
	CALL RETURN_ALL_GHOSTS
	MOV LOSS_LIFE_FLAG, 0
	CALL DEC_LIFE
	CMP DEAD_FLAG, 1			;compara se ta morto
	JNZ	NAO_MORREU	;se nao estiver continua o jogo
	MOV DELAY_TIME, 10
	CALL DELAY
	RET		

NAO_MORREU:
	JMP RETORNO_ZERA_QUADLIN

CHECK_SCORE:
	CMP HOW_MANY_POINTS, 0
	JNE	NOT_YET
	MOV DELAY_TIME, 10
	CALL DELAY
	RET
	
NOT_YET:
	CALL GET_INPUT_CONTROLS
	CMP BIRL, 1					;esta com power up?
	JNZ	KEEP_RUNNING_THE_GAME			;se nao estiver pula o check time
	CALL POWERUP_TIMER			;caso contrario verifica o tempo do power up

KEEP_RUNNING_THE_GAME:
	CALL GAME_TIMER
	CALL MOVES
	CALL GHOSTS_FREEDOM
	CALL CHECK_FRUIT
;-----------------------Move Game------------------;	

	JMP RETORNO_ZERA_QUADLIN

SEGUE_COLUNA:	
	INC MATRIZ
	INC QUADCOL
RESETA_INICIO_JOGO:
	CALL RESET_PIX
	JMP INICIO_JOGO
	
PRINT_BLACK_HERE:
	MOV COR, 0
	MOV QUADSIZE, 26
	CALL PRINT_QUAD
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_PAC_HERE:
	CALL PRINT_PAC_ESTAT
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_POINT_HERE:	
	CALL PRINT_POINT
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_POWERUP_HERE:	
	CALL PRINT_POWERUP
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_FRUIT_HERE:
	CALL PRINT_FRUIT
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_EYE_HERE:				;NOVO
	CALL PRINT_EYE
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_RED_GHOST_HERE:
	MOV WHICH_GHOST, 0AH
	CMP BIRL, 1
	JE RUN_RED_GHOST
NORMAL_RED_GHOST:
	MOV COR,28H
	CALL PRINT_GHOST
	JMP RESETNEXT_PIXELBLOCK	
RUN_RED_GHOST:
	CMP RED_DIED_FLAG, 1
	JE NORMAL_RED_GHOST
	CALL PRINT_SCARED_GHOST
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_PINK_GHOST_HERE:
	MOV WHICH_GHOST, 0CH
	CMP BIRL, 1
	JE RUN_PINK_GHOST
NORMAL_PINK_GHOST:
	MOV COR,3CH
	CALL PRINT_GHOST
	JMP RESETNEXT_PIXELBLOCK
RUN_PINK_GHOST:
	CMP PINK_DIED_FLAG, 1
	JE NORMAL_PINK_GHOST
	CALL PRINT_SCARED_GHOST
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_ORAN_GHOST_HERE:
	MOV WHICH_GHOST, 0BH
	CMP BIRL, 1
	JE RUN_ORAN_GHOST
NORMAL_ORAN_GHOST:
	MOV COR,2BH
	CALL PRINT_GHOST
	JMP RESETNEXT_PIXELBLOCK
RUN_ORAN_GHOST:
	CMP ORAN_DIED_FLAG, 1
	JE NORMAL_ORAN_GHOST
	CALL PRINT_SCARED_GHOST
	JMP RESETNEXT_PIXELBLOCK
	
PRINT_CYAN_GHOST_HERE:
	MOV WHICH_GHOST, 0DH
	CMP BIRL, 1
	JE RUN_CYAN_GHOST
NORMAL_CYAN_GHOST:
	MOV COR,0BH
	CALL PRINT_GHOST
	JMP RESETNEXT_PIXELBLOCK
RUN_CYAN_GHOST:
	CMP CYAN_DIED_FLAG, 1
	JE NORMAL_CYAN_GHOST
	CALL PRINT_SCARED_GHOST
	JMP RESETNEXT_PIXELBLOCK

	
PRINT_DOOR_MAP_HERE:
	MOV QUADSIZE, 26
	MOV AL,DOORC
	MOV COR, AL
	CALL PRINT_QUAD
	
RESETNEXT_PIXELBLOCK:
	MOV BX, MATRIZ
	MOV [MAPA_CMP + BX], 1
	INC QUADCOL
	INC MATRIZ
	JMP SAVE_MAP_CONTS
SAFE_PRINT:
	CALL SIDEMENU_SCORENUM
	JMP LOAD_MAP_CONTS
RESET_HERE:
	CALL RESET_PIX
	JMP INICIO_JOGO
SAVE_MAP_CONTS:
	MOV DX, QUADLIN
	MOV CX, QUADCOL
	MOV AX, MATRIZ
	PUSH DX
	PUSH CX
	PUSH AX
	JMP SAFE_PRINT
LOAD_MAP_CONTS:
	POP AX
	POP CX
	POP DX
	MOV QUADLIN, DX
	MOV QUADCOL, CX
	MOV MATRIZ, AX
	JMP RESET_HERE
GAME_LOOP ENDP
;-----------------------------------------------------------------------------GAME LOOP------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GHOSTS FREEDOM-------------------------------------------------------------------;
GHOSTS_FREEDOM PROC			;NOVO
	CMP ORAN_DEAD_FLAG, 1
	JE CAN_CYAN_MOVE
	CMP GAME_TIME, 5
	JL RETURN_FREEDOM
	MOV CAN_ORAN_GHOST_MOVE, 1
	
	
CAN_CYAN_MOVE:
	CMP CYAN_DEAD_FLAG, 1
	JE RETURN_FREEDOM
	CMP GAME_TIME, 10
	JL RETURN_FREEDOM
	MOV CAN_CYAN_GHOST_MOVE, 1
	
RETURN_FREEDOM:
	RET
GHOSTS_FREEDOM ENDP
;-----------------------------------------------------------------------------GHOSTS FREEDOM-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------CHECK FRUIT----------------------------------------------------------------------;
CHECK_FRUIT PROC
	MOV AL, MAX_FRUIT_SCORE
	CMP FRUIT_SCORE, AL
	JL	RETURN_FRUIT_CHECK
	
	MOV BX, WHERE_IS_FRUIT
	MOV [MAPA + BX], 7
	MOV [MAPA_CMP + BX], 0
	MOV FRUIT_SCORE, 0
	MOV CX, 3
	XOR DX, DX
	DIV CX
	ADD MAX_FRUIT_SCORE, AL
	
RETURN_FRUIT_CHECK:
	RET

CHECK_FRUIT ENDP
;-----------------------------------------------------------------------------CHECK FRUIT----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------RETURN ALL GHOSTS----------------------------------------------------------------;
RETURN_ALL_GHOSTS PROC

	MOV WHICH_GHOST, 0AH
	CALL KILL_GHOST
	MOV BX, SPAWN_RED_GHOST		;NOVO
	MOV [MAPA + BX], 0AH
	MOV [MAPA_CMP + BX], 0
	MOV WHERE_IS_RED_GHOST, BX
	MOV CAN_RED_GHOST_MOVE, 1
	MOV RED_DEAD_FLAG, 0
	
	MOV WHICH_GHOST, 0CH
	CALL KILL_GHOST
	MOV BX, SPAWN_PINK_GHOST		;NOVO
	MOV [MAPA + BX], 0CH
	MOV [MAPA_CMP + BX], 0
	MOV WHERE_IS_PINK_GHOST, BX
	MOV CAN_PINK_GHOST_MOVE, 1
	MOV PINK_DEAD_FLAG, 0
	
	MOV WHICH_GHOST, 0BH
	CALL KILL_GHOST
	MOV BX, SPAWN_ORAN_GHOST		;NOVO
	MOV [MAPA + BX], 0BH
	MOV [MAPA_CMP + BX], 0
	MOV WHERE_IS_ORAN_GHOST, BX
	MOV ORAN_DEAD_FLAG, 0
	
	MOV WHICH_GHOST, 0DH
	CALL KILL_GHOST
	MOV BX, SPAWN_CYAN_GHOST		;NOVO
	MOV [MAPA + BX], 0DH
	MOV [MAPA_CMP + BX], 0
	MOV WHERE_IS_CYAN_GHOST, BX
	MOV CYAN_DEAD_FLAG, 0
	
	MOV BX, WHERE_IS_RED_EYE
	MOV CL, RED_EYE_HERE_BEF
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	
	MOV BX, WHERE_IS_PINK_EYE
	MOV CL, PINK_EYE_HERE_BEF
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	
	MOV BX, WHERE_IS_ORAN_EYE
	MOV CL, ORAN_EYE_HERE_BEF
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	
	MOV BX, WHERE_IS_CYAN_EYE
	MOV CL, CYAN_EYE_HERE_BEF
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	
	RET

RETURN_ALL_GHOSTS ENDP
;-----------------------------------------------------------------------------RETURN ALL GHOSTS----------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GET A COORDS---------------------------------------------------------------------;
GET_A_COORDS PROC		;PARAMETERS (AX = MAP COORD)
	MOV CX, 20
	XOR DX, DX
	DIV CX
	MOV POINT_A_X, AX
	MOV POINT_A_Y, DX
	RET
GET_A_COORDS ENDP		;RETURN POINT (A.X, A.Y) --> POINT_A_X , POINT_A_Y
;-----------------------------------------------------------------------------GET A COORDS---------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GET B COORDS---------------------------------------------------------------------;
GET_B_COORDS PROC		;PARAMETERS (BX = MAP COORD)
	MOV CX, 20
	XOR DX, DX
	DIV CX
	MOV POINT_B_X, AX
	MOV POINT_B_Y, DX
	RET
GET_B_COORDS ENDP		;RETURN POINT (B.X, B.Y) --> POINT_B_X , POINT_B_Y
;-----------------------------------------------------------------------------GET B COORDS---------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------H_CALC---------------------------------------------------------------------------;
H_CALC PROC
	MOV DX, POINT_A_X
	SUB DX, POINT_B_X
	CMP DX, 0
	JGE	GO_GET_Y
	NOT DX
	
GO_GET_Y:
	MOV CX, POINT_A_Y
	SUB CX, POINT_B_Y
	CMP CX, 0
	JGE GO_GET_H
	NOT CX
GO_GET_H:

	ADD DX, CX
	
	RET
H_CALC ENDP
;-----------------------------------------------------------------------------H_CALC---------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GET ORDERED MOVES----------------------------------------------------------------;
GET_ORDERED_MOVES PROC
	
	MOV AX, BX	;BX TEM A POSIÇÃO DO SPAWN
	CALL GET_B_COORDS
	
;------------------------GET UP DISTANCE
	MOV AX, POS_AUX_UP
	CALL GET_A_COORDS
	CALL H_CALC
	MOV [Y_DIS], CL
	MOV [DISTANCIAS], DL
	MOV [DIS_ORD], 0
;------------------------GET RIGHT DISTANCE
	MOV AX, POS_AUX_RIGHT
	CALL GET_A_COORDS
	CALL H_CALC
	MOV [Y_DIS], CL
	MOV [DISTANCIAS + 1], DL
	MOV [DIS_ORD + 1], 1
;------------------------GET DOWN DISTANCE
	MOV AX, POS_AUX_DOWN
	CALL GET_A_COORDS
	CALL H_CALC
	MOV [Y_DIS], CL
	MOV [DISTANCIAS + 2], DL
	MOV [DIS_ORD + 2], 2
;------------------------GET LEFT DISTANCE
	MOV AX, POS_AUX_LEFT
	CALL GET_A_COORDS
	CALL H_CALC
	MOV [Y_DIS], CL
	MOV [DISTANCIAS + 3], DL
	MOV [DIS_ORD + 3], 3
	
;----------------------BOBBLE SORT
	XOR SI, SI	;i
	MOV BX, SI	;j
BOBBLE_LOOP:
	INC BX
	CMP BX, 4					
	JE INC_SI					

	MOV AL, [DISTANCIAS + SI]
	MOV DL, [DISTANCIAS + BX]
	CMP AL, DL
	JL BOBBLE_LOOP
	JE CMP_Y
CHANGE_DIS:
	MOV AL, [DISTANCIAS + SI]
	MOV DL, [DISTANCIAS + BX]
	MOV [DISTANCIAS + SI], DL
	MOV [DISTANCIAS + BX], AL
	
	MOV AL, [DIS_ORD + SI]
	MOV DL, [DIS_ORD + BX]
	MOV [DIS_ORD + SI], DL
	MOV [DIS_ORD + BX], AL
	
	MOV AL, [Y_DIS + SI]
	MOV DL, [Y_DIS + BX]
	MOV [Y_DIS + SI], DL
	MOV [Y_DIS + BX], AL
	JMP BOBBLE_LOOP
	
CMP_Y:
	MOV AL, [Y_DIS + SI]
	MOV DL, [Y_DIS + BX]
	CMP AL, DL
	JLE BOBBLE_LOOP
	JMP CHANGE_DIS
	
INC_SI:
	INC SI
	CMP SI, 3
	JE END_BOOBLE
	MOV BX, SI
	JMP BOBBLE_LOOP

END_BOOBLE:
	MOV SI, 2
	MOV BX, 3
	MOV AL, [DISTANCIAS + SI]
	MOV DL, [DISTANCIAS + BX]
	CMP AL, DL
	JL RETURN_COORDS
	MOV [Y_DIS + SI], DL
	MOV [Y_DIS + BX], AL
	
	MOV AL, [DISTANCIAS + SI]
	MOV DL, [DISTANCIAS + BX]
	MOV [DISTANCIAS + SI], DL
	MOV [DISTANCIAS + BX], AL
	
	MOV AL, [DIS_ORD + SI]
	MOV DL, [DIS_ORD + BX]
	MOV [DIS_ORD + SI], DL
	MOV [DIS_ORD + BX], AL
	
RETURN_COORDS:
	RET
	
GET_ORDERED_MOVES ENDP
;-----------------------------------------------------------------------------GET ORDERED MOVES----------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GHOST DIRECTION------------------------------------------------------------------;
GHOST_DIRECTION PROC

	MOV AH, 2CH
	INT 21H
	
	XOR AX, AX
	MOV AL, DL
	
	CMP WHICH_GHOST, 0AH
	JE	RED_DIRECTION
	CMP WHICH_GHOST, 0CH
	JE	PINK_DIRECTION
	CMP	WHICH_GHOST, 0BH
	JE	ORAN_DIRECTION
	CMP WHICH_GHOST, 0DH
	JE CYAN_DIRECTION
	
	
RED_DIRECTION:
	MOV CX, 5
	MUL CX
	
	MOV CX, 2
	XOR DX, DX
	DIV CX
	
	MOV CX, 3
	MUL CX
	
	MOV CX, 4
	XOR DX, DX
	DIV CX
	
	MOV AX, DX
	RET
	
PINK_DIRECTION:
	MOV CX, 5
	MUL CX
	
	MOV CX, 4
	XOR DX, DX
	DIV CX
	
	MOV AX, DX
	RET

ORAN_DIRECTION:
	MOV CX, 5
	MUL CX
	
	MOV CX, 2
	XOR DX, DX
	DIV CX
	
	MOV CX, 4
	XOR DX, DX
	DIV CX
	
	MOV AX, DX
	RET

CYAN_DIRECTION:
	MOV CX, 5
	MUL CX
	
	MOV CX, 3
	MUL CX
	
	MOV CX, 4
	XOR DX, DX
	DIV CX
	
	MOV AX, DX
	RET
	
GHOST_DIRECTION ENDP
;-----------------------------------------------------------------------------GHOST DIRECTION------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------KILL GHOST-----------------------------------------------------------------------;
KILL_GHOST PROC
	
	CMP WHICH_GHOST, 0AH
	JE RED_GHOST_DEAD_JMP
	CMP WHICH_GHOST, 0CH
	JE PINK_GHOST_DEAD_JMP
	CMP WHICH_GHOST, 0BH
	JE ORAN_GHOST_DEAD_JMP
	CMP WHICH_GHOST, 0DH
	JE CYAN_GHOST_DEAD_JMP
	
RED_GHOST_DEAD_JMP:
	JMP RED_GHOST_DEAD

PINK_GHOST_DEAD_JMP:
	JMP PINK_GHOST_DEAD

ORAN_GHOST_DEAD_JMP:
	JMP ORAN_GHOST_DEAD

CYAN_GHOST_DEAD_JMP:
	JMP CYAN_GHOST_DEAD
	
	
RED_GHOST_DEAD:
	MOV RED_DIED_FLAG, 1
	MOV CAN_RED_GHOST_MOVE, 0
	MOV BX, WHERE_IS_RED_GHOST
	MOV CL, WHAT_WAS_HERE_RED
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	
	MOV WHAT_WAS_HERE_RED, 6
	RET
	
PINK_GHOST_DEAD:
	MOV PINK_DIED_FLAG, 1
	MOV CAN_PINK_GHOST_MOVE, 0
	MOV PINK_E_PORTA, 0
	MOV BX, WHERE_IS_PINK_GHOST
	MOV CL, WHAT_WAS_HERE_PINK
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0

	MOV WHAT_WAS_HERE_PINK, 6
	RET
	
ORAN_GHOST_DEAD:
	MOV ORAN_DIED_FLAG, 1
	MOV CAN_ORAN_GHOST_MOVE, 0
	MOV ORAN_E_PORTA, 0
	MOV BX, WHERE_IS_ORAN_GHOST
	MOV CL, WHAT_WAS_HERE_ORAN
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0

	MOV WHAT_WAS_HERE_ORAN, 6
	RET
	
CYAN_GHOST_DEAD:
	MOV CYAN_DIED_FLAG, 1
	MOV CAN_CYAN_GHOST_MOVE, 0
	MOV CYAN_E_PORTA, 0
	MOV BX, WHERE_IS_CYAN_GHOST
	MOV CL, WHAT_WAS_HERE_CYAN
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0

	MOV WHAT_WAS_HERE_CYAN, 6
	RET
KILL_GHOST ENDP
;-----------------------------------------------------------------------------KILL GHOST-----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GET INPUTS----------------------------------------------------------------------;
GET_INPUT_CONTROLS PROC
	MOV AH, 6
	MOV DL, 255
	INT 21h
	JZ END_GET_INPUT
	CMP AL, 1BH
	JE GO_TO_QUIT_MENU
	CMP AL,77H	;CIMA - w
	JE VALID_INPUT
	CMP AL,64H	;DIREITA - d
	JE VALID_INPUT
	CMP AL,73H	;BAIXO - s
	JE VALID_INPUT
	CMP AL,61H	;ESQUERDA - a
	JE VALID_INPUT
	JMP END_GET_INPUT
	
VALID_INPUT:
	MOV DESIRED_KEY, AL
	MOV CAN_PAC_MOVE, 1
	RET
	
GO_TO_QUIT_MENU:
	CALL GAME_PAUSE
	RET
	
END_GET_INPUT:
	MOV AL, LAST_KEY
	MOV TECLA, AL
	RET
GET_INPUT_CONTROLS ENDP
;-----------------------------------------------------------------------------GET INPUTS----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------DEC LIFE-------------------------------------------------------------------------;
DEC_LIFE PROC
;-------PRINTA ANIMAÇÃO PAC MORTO------;
	MOV DELAY_TIME, 5				;26			;DELAY INICIAL DE MORTE
	CALL DELAY
	CALL PRINT_PAC_DEAD
	MOV DI, WHERE_IS_PACMAN
	MOV [MAPA + DI], 6
	MOV [MAPA_CMP + DI], 0
	
;-------MODIFICA VIDAS SIDE MENU-------;
	CMP PAC_LIVES, 0
	JE	FIM_DEC_LIFE
	DEC PAC_LIVES
	CALL SIDEMENU_LIVESCOUNT
	MOV DELAY_TIME, 10		;150				;DELAY RESPAWN
	CALL DELAY
	
;-------SETA O PACMAN NO SPAWN POINT---;
	MOV BX, SPAWN_PACMAN
	MOV WHERE_IS_PACMAN, BX
	MOV [MAPA + BX], 2
	MOV [MAPA_CMP + BX], 0
	MOV PACMAN_LOOKING_AT,4
	MOV MATPAC, 0
	
;-------RESETA ALGUNS VALORES----------;
	MOV TECLA, 0
	MOV CAN_PAC_MOVE, 0
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV IS_ON_POWERUP, 0
	MOV GAME_STARTED, 0
	RET
	
;--------ACABOU AS VIDAS---------------;
FIM_DEC_LIFE:
	MOV DELAY_TIME, 7		;150				;DELAY DE MORTE
	CALL DELAY
	;CALL GAME_OVER
	;CALL LIMPA_TELA
	MOV DEAD_FLAG, 1
	RET
DEC_LIFE ENDP
;-----------------------------------------------------------------------------DEC LIFE-------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GAME PAUSE-----------------------------------------------------------------------;
GAME_PAUSE PROC
	CALL PRINT_QUIT_SM
PAUSE_LOOP:
	MOV AH, 1H
	INT 21H
	CMP AL, 'Y'
	JE QUIT_NOW
	CMP AL, 'y'
	JE QUIT_NOW
	CMP AL, 'N'
	JE CONTINUE_NOW
	CMP AL, 'n'
	JE CONTINUE_NOW
	CMP AL,1BH
	JE CONTINUE_NOW
	MOV AH, 2H		;caso não seja nenhuma das opções retornar
	MOV DL, 08H		;apagar o character (backspace)
	INT 21H
	MOV DL, ' '		;apagar o digito anterior
	INT 21H
	MOV DL, 08H		;voltar o ponteiro para a posiçao correta
	INT 21H
	JMP PAUSE_LOOP
QUIT_NOW:
	MOV QUIT_FLAG, 1
CONTINUE_NOW:
	MOV AH, 2H		;caso não seja nenhuma das opções retornar
	MOV DL, 08H		;apagar o character (backspace)
	INT 21H
	MOV DL, ' '		;apagar o digito anterior
	INT 21H
	MOV DL, 08H		;voltar o ponteiro para a posiçao correta
	INT 21H
	CALL ERASE_QUIT_SM
	
	RET
GAME_PAUSE ENDP
;-----------------------------------------------------------------------------GAME PAUSE-----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------RESET TO LOOP GAME---------------------------------------------------------------;
RESET_TO_LOOP_GAME PROC
	
	MOV GAME_STARTED, 0
	MOV QUIT_FLAG, 0
	MOV FIRST_MAP_PRINT, 0
	MOV SCORE_NUM, 0
	MOV FRUIT_SCORE, 0
	MOV MAX_FRUIT_SCORE, 50
	MOV HOW_MANY_FRUITS, 0
	MOV PAC_LIVES, 2
	MOV TECLA, 0
	MOV BIRL, 0
	MOV IS_ON_POWERUP, 0
	
	MOV DEAD_FLAG, 0
	MOV PACMAN_LOOKING_AT,4
	MOV CAN_PAC_MOVE, 0
	
	MOV CAN_RED_GHOST_MOVE, 1
	MOV CAN_PINK_GHOST_MOVE, 1
	MOV CAN_ORAN_GHOST_MOVE, 0
	MOV CAN_CYAN_GHOST_MOVE, 0
	MOV WHAT_WAS_HERE_RED, 6
	MOV WHAT_WAS_HERE_PINK, 6
	MOV WHAT_WAS_HERE_ORAN, 6
	MOV WHAT_WAS_HERE_CYAN, 6
	MOV RED_DEAD_FLAG, 0
	MOV PINK_DEAD_FLAG, 0
	MOV ORAN_DEAD_FLAG, 0
	MOV CYAN_DEAD_FLAG, 0
	MOV PINK_E_PORTA, 0
	MOV ORAN_E_PORTA, 0
	MOV CYAN_E_PORTA, 0
	
	CALL SIDEMENU_LIVESCOUNT
	
	MOV MATRIZ,0
	MOV QUADLIN, 0
	MOV QUADCOL,0
	MOV MATPAC, 0

	RET
RESET_TO_LOOP_GAME ENDP
;-----------------------------------------------------------------------------RESET TO LOOP GAME---------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------DELAY----------------------------------------------------------------------------;
DELAY PROC 
	MOV BP, DELAY_TIME
	MOV SI, DELAY_TIME
DELAY_LOOP:
	DEC BP
	NOP
	JNZ DELAY_LOOP

	DEC SI
	CMP SI,0
	JNZ DELAY_LOOP
	RET
DELAY ENDP
;-----------------------------------------------------------------------------DELAY----------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------POWER UP TIMER-------------------------------------------------------------------;
POWERUP_TIMER PROC
	CMP IS_ON_POWERUP, 1
	JE COMPARE_TIME
	MOV AH, 2CH
	INT 21H
	MOV IS_ON_POWERUP, 1
	ADD DH, POWERUP_SECONDS_TIME
	CMP DH, 60
	JL CONTINUE_FIRST_TIME
	SUB DH, 60
CONTINUE_FIRST_TIME:	
	MOV POWERUP_FINAL_TIME, DH
	RET
COMPARE_TIME:
	MOV AH, 2CH
	INT 21H
	CMP DH, POWERUP_FINAL_TIME
	JE END_POWERUP
	RET
END_POWERUP:
	MOV IS_ON_POWERUP, 0
	MOV BIRL, 0
	RET
POWERUP_TIMER ENDP
;-----------------------------------------------------------------------------POWER UP TIMER-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------GAME TIMER-----------------------------------------------------------------------;
GAME_TIMER PROC
	MOV AH, 2CH
	INT 21H
	CMP GAME_STARTED, 1
	JE KEEP_GOING_GAME_TIME
	
	MOV GAME_STARTED, 1
	MOV GAME_TIME, 0
	
	MOV LAST_CHECK_GAME_TIME, DH
	JMP RETURN_GAME_TIMER
	
KEEP_GOING_GAME_TIME:
	CMP DH, LAST_CHECK_GAME_TIME
	JE	RETURN_GAME_TIMER
	MOV CL, DH
	SUB DH, LAST_CHECK_GAME_TIME
	CMP DH, 0
	JGE SET_GAME_TIMER
	ADD DH, 60
	
SET_GAME_TIMER:
	ADD GAME_TIME, DH
	MOV LAST_CHECK_GAME_TIME, CL
	
RETURN_GAME_TIMER:
	RET

GAME_TIMER ENDP
;-----------------------------------------------------------------------------GAME TIMER-----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------LIMPA TELA-----------------------------------------------------------------------;
LIMPA_TELA PROC
	MOV AX, 4F02H   ; set display mode function.
	MOV BX, 103H	;video mode 800X600
	INT 10H     	; set it!
	RET
LIMPA_TELA ENDP
;-----------------------------------------------------------------------------LIMPA TELA-----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------LIMPA BUFFER---------------------------------------------------------------------;
LIMPA_BUFFER PROC


LIMPAR_BUFFER:
	MOV AH, 6
	MOV DL, 255
	INT 21h
	JNZ LIMPAR_BUFFER

	RET
LIMPA_BUFFER ENDP
;-----------------------------------------------------------------------------LIMPA BUFFER---------------------------------------------------------------------;
;#####################################################################################################################################################################################;
;#############################################################################------ESSENTIALS------##################################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#############################################################################-----MOVIMENTAÇÕES----##################################################################################;
;#####################################################################################################################################################################################;
;-----------------------------------------------------------------------------MOVES----------------------------------------------------------------------------;
MOVES PROC
	CALL MOVE_PACMAN

	CMP LOSS_LIFE_FLAG, 1
	JE RETURN_MOVES
	
	CALL MOVE_RED_GHOST
	CALL MOVE_PINK_GHOST
	CALL MOVE_ORAN_GHOST
	CALL MOVE_CYAN_GHOST	
	
	
RETURN_MOVES:
	MOV DELAY_TIME, 3
	CALL DELAY
	MOV BX, WHERE_IS_PACMAN
	MOV [MAPA + BX], 2
	
	RET
MOVES ENDP
;-----------------------------------------------------------------------------MOVES----------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE PACMAN----------------------------------------------------------------------;
MOVE_PACMAN PROC
	CMP CAN_PAC_MOVE, 1
	JNZ	RETORNO_MOVE_PACMAN
	
	CMP DESIRED_KEY, 0
	JE	INICIO_DA_IMPRESSAO_DO_MOVIMENTO
	MOV AL, DESIRED_KEY
	MOV TECLA, AL

INICIO_DA_IMPRESSAO_DO_MOVIMENTO:
	MOV AX, WHERE_IS_PACMAN
	MOV PACMAN_POS_AUXILIAR, AX
	
	
	MOV AL, TECLA
	CMP AL,77H	;CIMA - w
	JE TO_UP_JMP
	CMP AL,64H	;DIREITA - d
	JE TO_RGT_JMP
	CMP AL,73H	;BAIXO - s
	JE TO_DWN_JMP
	CMP AL,61H	;ESQUERDA - a
	JE TO_LFT_JMP

RETORNO_MOVE_PACMAN:
	RET

TO_UP_JMP:
	JMP TO_UP

TO_RGT_JMP:
	JMP TO_RGT
	
TO_DWN_JMP:
	JMP TO_DWN
	
TO_LFT_JMP:
	JMP TO_LFT
	
WALLHACK_REPORTED_JMP:
	JMP WALLHACK_REPORTED
	
TO_UP:
	SUB PACMAN_POS_AUXILIAR, 20
	MOV SI,PACMAN_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PACMAN		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5 ;é TP1?
	JE TP_UP
	CMP [MAPA + SI], 1;posição futura é parede?
	JE WALLHACK_REPORTED_JMP
	CMP [MAPA + SI], 9;posição futura é parede?
	JE WALLHACK_REPORTED_JMP
	MOV PACMAN_LOOKING_AT,1
	JMP CMP_NEXT_POSITION_PAC
TP_UP:
	ADD SI, 380
	JMP MOVED
	
TO_RGT:
	ADD PACMAN_POS_AUXILIAR, 1
	MOV SI,PACMAN_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PACMAN		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5 ;é TP1?
	JE TP_RGT
	CMP [MAPA + SI], 1;posição futura é parede?
	JE WALLHACK_REPORTED_JMP
	CMP [MAPA + SI], 9;posição futura é parede?
	JE WALLHACK_REPORTED_JMP
	MOV PACMAN_LOOKING_AT,2
	JMP CMP_NEXT_POSITION_PAC
TP_RGT:
	SUB SI, 17
	JMP MOVED
	
TO_DWN:
	ADD PACMAN_POS_AUXILIAR, 20
	MOV SI,PACMAN_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PACMAN		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5 ;é TP1?
	JE TP_DWN
	CMP [MAPA + SI], 1;posição futura é parede?
	JE WALLHACK_REPORTED
	CMP [MAPA + SI], 9;posição futura é parede?
	JE WALLHACK_REPORTED
	MOV PACMAN_LOOKING_AT,3
	JMP CMP_NEXT_POSITION_PAC
TP_DWN:
	SUB SI, 380
	JMP MOVED
	
TO_LFT:
	SUB PACMAN_POS_AUXILIAR, 1
	MOV SI,PACMAN_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PACMAN		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5 ;é TP1?
	JE TP_LFT
	CMP [MAPA + SI], 1;posição futura é parede?
	JE WALLHACK_REPORTED
	CMP [MAPA + SI], 9;posição futura é parede?
	JE WALLHACK_REPORTED
	MOV PACMAN_LOOKING_AT,4
	JMP CMP_NEXT_POSITION_PAC
TP_LFT:
	ADD SI, 17
	JMP MOVED

WALLHACK_REPORTED:
	MOV AL, LAST_KEY
	CMP TECLA, AL
	JE RETORNO_MOVE_PACMAN_JMP
	MOV TECLA, AL
	JMP INICIO_DA_IMPRESSAO_DO_MOVIMENTO
	
RETORNO_MOVE_PACMAN_JMP:
	JMP RETORNO_MOVE_PACMAN
	
CMP_NEXT_POSITION_PAC:
	MOV AL, TECLA
	CMP AL, DESIRED_KEY
	JNE NOT_DESIRED_KEY
	MOV DESIRED_KEY, 0
	
NOT_DESIRED_KEY:
	MOV LAST_KEY, AL
	
	CMP [MAPA + SI], 9 ;é fantasma?
	JG DEAD
	
	CMP [MAPA + SI], 3 ;é ponto?
	JE EAT_POINT_JMP
	CMP [MAPA + SI], 4 ;é powerup?
	JE EAT_POWERUP_JMP
	CMP [MAPA + SI], 7 ;é fruta?
	JE EAT_FRUIT_JMP
	JMP MOVED
	
EAT_POINT_JMP:
	JMP EAT_POINT
	
EAT_POWERUP_JMP:
	JMP EAT_POWERUP

EAT_FRUIT_JMP:
	JMP EAT_FRUIT
	
DEAD:
	CMP BIRL, 1
	JNE PAC_LOSS_LIFE
	
	;GANHA PONTOS
	INC FRUIT_SCORE
	MOV CL, [MAPA + SI]
	MOV WHICH_GHOST, CL
	
	CMP WHICH_GHOST, 0AH
	JE	RED_GHOST_MUST_DIE
	CMP WHICH_GHOST, 0CH
	JE PINK_GHOST_MUST_DIE
	CMP WHICH_GHOST, 0BH
	JE ORAN_GHOST_MUST_DIE
	CMP WHICH_GHOST, 0DH
	JE CYAN_GHOST_MUST_DIE_JMP
	
PAC_LOSS_LIFE:
	MOV LOSS_LIFE_FLAG, 1
	RET
	
CYAN_GHOST_MUST_DIE_JMP:
	JMP CYAN_GHOST_MUST_DIE
	
RED_GHOST_MUST_DIE:
	CMP RED_DIED_FLAG, 1
	JE PAC_LOSS_LIFE
	ADD SCORE_NUM, 75
	MOV RED_DEAD_FLAG, 1	;NOVO
	CALL KILL_GHOST
	MOV SI,PACMAN_POS_AUXILIAR	
	MOV DI,	WHERE_IS_PACMAN		
	MOV WHERE_IS_RED_EYE, SI		;NOVO
	MOV RED_EYE_CAME_FROM, SI		;NOVO
	MOV RED_EYE_HERE_BEF, 6	;NOVO
	JMP CMP_NEXT_POSITION_PAC
	
PINK_GHOST_MUST_DIE:
	CMP PINK_DIED_FLAG, 1
	JE PAC_LOSS_LIFE
	ADD SCORE_NUM, 75
	MOV PINK_DEAD_FLAG, 1	;NOVO
	CALL KILL_GHOST
	MOV SI,PACMAN_POS_AUXILIAR	
	MOV DI,	WHERE_IS_PACMAN	
	MOV WHERE_IS_PINK_EYE, SI		;NOVO
	MOV PINK_EYE_CAME_FROM, SI		;NOVO
	MOV PINK_EYE_HERE_BEF, 6	;NOVO
	JMP CMP_NEXT_POSITION_PAC
	
ORAN_GHOST_MUST_DIE:
	CMP ORAN_DIED_FLAG, 1
	JE PAC_LOSS_LIFE
	ADD SCORE_NUM, 75
	MOV ORAN_DEAD_FLAG, 1	;NOVO
	CALL KILL_GHOST
	MOV SI,PACMAN_POS_AUXILIAR	
	MOV DI,	WHERE_IS_PACMAN	
	MOV WHERE_IS_ORAN_EYE, SI		;NOVO	
	MOV ORAN_EYE_CAME_FROM, SI		;NOVO
	MOV ORAN_EYE_HERE_BEF, 6	;NOVO
	JMP CMP_NEXT_POSITION_PAC
	
PAC_LOSS_LIFE_JMP:
	JMP PAC_LOSS_LIFE
	
CYAN_GHOST_MUST_DIE:
	CMP CYAN_DIED_FLAG, 1
	JE PAC_LOSS_LIFE_JMP
	ADD SCORE_NUM, 75
	MOV CYAN_DEAD_FLAG, 1	;NOVO
	CALL KILL_GHOST
	MOV SI,PACMAN_POS_AUXILIAR	
	MOV DI,	WHERE_IS_PACMAN	
	MOV WHERE_IS_CYAN_EYE, SI		;NOVO
	MOV CYAN_EYE_CAME_FROM, SI		;NOVO
	MOV CYAN_EYE_HERE_BEF, 6	;NOVO
	JMP CMP_NEXT_POSITION_PAC
	
EAT_POINT:
	INC FRUIT_SCORE
	ADD SCORE_NUM, 15
	DEC HOW_MANY_POINTS
	JMP MOVED
	
EAT_POWERUP:
	INC FRUIT_SCORE
	ADD SCORE_NUM, 83
	MOV RED_DIED_FLAG , 0
	MOV PINK_DIED_FLAG, 0
	MOV ORAN_DIED_FLAG, 0
	MOV CYAN_DIED_FLAG, 0
	MOV BIRL, 1
	CMP IS_ON_POWERUP, 1
	JNZ	MOVED
	MOV CL, POWERUP_SECONDS_TIME
	ADD POWERUP_FINAL_TIME, CL
	CMP POWERUP_FINAL_TIME, 60
	JL	MOVED
	SUB POWERUP_FINAL_TIME, 60
	JMP MOVED
	
EAT_FRUIT:
	ADD SCORE_NUM, 200
	INC HOW_MANY_FRUITS
	CALL SIDEMENU_FRUIT
	JMP MOVED
	
MOVED:
	MOV WHERE_IS_PACMAN, SI
	MOV [MAPA_CMP + SI], 0
	MOV [MAPA_CMP + DI], 0
	MOV [MAPA + SI], 2
	MOV [MAPA + DI], 6	;se nao, já zeramos a posição passada

	MOV AL, LAST_KEY
	MOV TECLA, AL
	RET
MOVE_PACMAN ENDP
;-----------------------------------------------------------------------------MOVE PACMAN----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE RED GHOST-------------------------------------------------------------------;
MOVE_RED_GHOST PROC		;NOVO
	CMP RED_DEAD_FLAG, 1
	JNE	CHECK_MOVE_RED
	CALL MOVE_RED_EYE
	RET
CHECK_MOVE_RED:
	CMP CAN_RED_GHOST_MOVE, 1
	JNZ RETORNO_MOVE_RED_GHOST_JMP
	
	CMP BIRL,1
	JNE RED_QUICKER
	CMP RED_DIED_FLAG, 1
	JE RED_QUICKER
	CMP RED_FLAG_MINI_STOP,0
	JNE RED_QUICKER
	MOV RED_FLAG_MINI_STOP,1
	JMP RETORNO_MOVE_RED_GHOST_JMP
	
RETORNO_MOVE_RED_GHOST_JMP:
	JMP RETORNO_MOVE_RED_GHOST
	
RED_QUICKER:
	MOV RED_FLAG_MINI_STOP,0
	MOV TESTE_DIRECTION_RED, 0
	MOV WHICH_GHOST, 0AH
	CALL GHOST_DIRECTION
	
	ADD LAST_TRY_RED, 2
	CMP LAST_TRY_RED, 4
	JL	CONTINUE_RED_GET_DIRECTION
	SUB LAST_TRY_RED, 4
	
CONTINUE_RED_GET_DIRECTION:
	CMP AL, LAST_TRY_RED
	JNZ	RED_GHOST_GET_DIRECTION
	INC AL
	CMP AL, 4
	JNZ RED_GHOST_GET_DIRECTION
	MOV AL, 0
	
RED_GHOST_GET_DIRECTION:
	INC TESTE_DIRECTION_RED
	
	CMP TESTE_DIRECTION_RED, 1
	JE	CONTINUE_RED_TRY
	
	CMP TESTE_DIRECTION_RED, 5
	JE	RETORNO_MOVE_RED_GHOST
	
	INC AL
	CMP AL, 4
	JNE	CONTINUE_RED_TRY
	MOV AL, 0
	
CONTINUE_RED_TRY:
	MOV LAST_TRY_RED, AL
	MOV CX, WHERE_IS_RED_GHOST
	MOV REDGHOST_POS_AUXILIAR, CX
	
	CMP AL, 0
	JE RED_MOV_UP_JMP
	CMP AL, 1
	JE RED_MOV_RGT_JMP
	CMP AL, 2
	JE RED_MOV_DWN_JMP
	CMP AL, 3
	JE RED_MOV_LFT_JMP
	
RED_MOV_UP_JMP:
	JMP RED_MOV_UP
RED_MOV_RGT_JMP:
	JMP RED_MOV_RGT
RED_MOV_DWN_JMP:
	JMP RED_MOV_DWN
RED_MOV_LFT_JMP:
	JMP RED_MOV_LFT
	
RETORNO_MOVE_RED_GHOST:
	RET

COMPARE_WALL_RED:
	CMP [MAPA + SI], 1				;verifica se é parede
	JE 	RED_GHOST_GET_DIRECTION
	CMP [MAPA + SI], 8
	JE	RED_GHOST_GET_DIRECTION
	CMP [MAPA +SI], 9
	JGE RED_GHOST_GET_DIRECTION
	JMP RED_MOVE
	
RED_MOV_UP:
	SUB REDGHOST_POS_AUXILIAR, 20
	MOV SI, REDGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_RED_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNE COMPARE_WALL_RED_UP
	ADD SI, 380
COMPARE_WALL_RED_UP:
	MOV RED_GHOST_LOOKING_AT, 0
	JMP COMPARE_WALL_RED
	
RED_MOV_RGT:
	ADD REDGHOST_POS_AUXILIAR, 1
	MOV SI, REDGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_RED_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_RED_RGT
	SUB SI, 17
COMPARE_WALL_RED_RGT:
	MOV RED_GHOST_LOOKING_AT, 1
	JMP COMPARE_WALL_RED
	
RED_MOV_DWN:
	ADD REDGHOST_POS_AUXILIAR, 20
	MOV SI, REDGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_RED_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_RED_DWN
	SUB SI, 380
COMPARE_WALL_RED_DWN:
	MOV RED_GHOST_LOOKING_AT, 2
	JMP COMPARE_WALL_RED

	
RED_MOV_LFT:
	SUB REDGHOST_POS_AUXILIAR, 1
	MOV SI, REDGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_RED_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_RED_LFT
	ADD SI, 17
COMPARE_WALL_RED_LFT:
	MOV RED_GHOST_LOOKING_AT, 3
	JMP COMPARE_WALL_RED
	
RED_MOVE:
	CMP [MAPA + SI], 2
	JNZ MOVIMENTA_RED
	CMP BIRL, 1
	JE RED_DEAD
RED_KILL_PAC:
	MOV LOSS_LIFE_FLAG, 1
	;VOLTAR PARA O SPAWN
	JMP RETORNO_MOVE_RED_GHOST
	
RED_DEAD:
	CMP RED_DIED_FLAG, 1
	JE RED_KILL_PAC
	INC FRUIT_SCORE
	ADD SCORE_NUM, 75
	MOV RED_DEAD_FLAG, 1		;NOVO
	MOV WHERE_IS_RED_EYE, DI 	;NOVO
	MOV RED_EYE_CAME_FROM, DI	;NOVO
	MOV RED_EYE_HERE_BEF, 6	;NOVO
	CALL KILL_GHOST
	JMP RETORNO_MOVE_RED_GHOST
	
;----------MOVIMENTAÇÃO-----------;
MOVIMENTA_RED:
	MOV CL, WHAT_WAS_HERE_RED
	MOV [MAPA + DI], CL
	MOV [MAPA_CMP + DI], 0
	
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_RED, CL
	
	MOV [MAPA + SI], 0AH
	MOV [MAPA_CMP + SI], 0
	
	MOV WHERE_IS_RED_GHOST, SI
	
	CMP AL, LAST_TRY_RED
	JMP RETORNO_MOVE_RED_GHOST
;----------MOVIMENTAÇÃO-----------;
MOVE_RED_GHOST ENDP
;-----------------------------------------------------------------------------MOVE RED GHOST-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE PINK GHOST------------------------------------------------------------------;
MOVE_PINK_GHOST PROC	;NOVO
	CMP PINK_DEAD_FLAG, 1
	JNE	CHECK_MOVE_PINK
	CALL MOVE_PINK_EYE
	
CHECK_MOVE_PINK:
	CMP CAN_PINK_GHOST_MOVE, 1
	JNZ RETORNO_MOVE_PINK_GHOST_JMP
	
	CMP BIRL,1
	JNE PINK_QUICKER
	CMP PINK_DIED_FLAG, 1
	JE PINK_QUICKER
	CMP PINK_FLAG_MINI_STOP,0
	JNE PINK_QUICKER
	MOV PINK_FLAG_MINI_STOP,1
	JMP RETORNO_MOVE_PINK_GHOST_JMP
	
RETORNO_MOVE_PINK_GHOST_JMP:
	JMP RETORNO_MOVE_PINK_GHOST
	
PINK_QUICKER:
	MOV PINK_FLAG_MINI_STOP,0	
	MOV TESTE_DIRECTION_PINK, 0
	MOV WHICH_GHOST, 0CH
	CALL GHOST_DIRECTION
	
	ADD LAST_TRY_PINK, 2
	CMP LAST_TRY_PINK, 4
	JL	CONTINUE_PINK_GET_DIRECTION
	SUB LAST_TRY_PINK, 4
	
CONTINUE_PINK_GET_DIRECTION:
	CMP AL, LAST_TRY_PINK
	JNZ	PINK_GHOST_GET_DIRECTION
	INC AL
	CMP AL, 4
	JNZ PINK_GHOST_GET_DIRECTION
	MOV AL, 0
	
PINK_GHOST_GET_DIRECTION:
	INC TESTE_DIRECTION_PINK
	
	CMP TESTE_DIRECTION_PINK, 1
	JE	CONTINUE_PINK_TRY
	
	CMP TESTE_DIRECTION_PINK, 5
	JE	RETORNO_MOVE_PINK_GHOST
	
	INC AL
	CMP AL, 4
	JNE	CONTINUE_PINK_TRY
	MOV AL, 0
	
	
CONTINUE_PINK_TRY:
	CMP WHAT_WAS_HERE_PINK, 9
	JNZ CHECK_PINK_DIRECTION
	MOV AL, 0
CHECK_PINK_DIRECTION:
	
	MOV CX, WHERE_IS_PINK_GHOST
	MOV PINKGHOST_POS_AUXILIAR, CX
	CMP AL, 0
	JE PINK_MOV_UP_JMP
	CMP AL, 1
	JE PINK_MOV_RGT_JMP
	CMP AL, 2
	JE PINK_MOV_DWN_JMP
	CMP AL, 3
	JE PINK_MOV_LFT_JMP
	
PINK_MOV_UP_JMP:
	JMP PINK_MOV_UP
PINK_MOV_RGT_JMP:
	JMP PINK_MOV_RGT
PINK_MOV_DWN_JMP:
	JMP PINK_MOV_DWN
PINK_MOV_LFT_JMP:
	JMP PINK_MOV_LFT


RETORNO_MOVE_PINK_GHOST:
	RET

COMPARE_WALL_PINK:
	CMP [MAPA + SI], 1				;verifica se é paPINKe
	JE 	PINK_GHOST_GET_DIRECTION
	CMP [MAPA + SI], 8
	JE	PINK_GHOST_GET_DIRECTION
	CMP [MAPA +SI], 9
	JG FANTASMA_EM_CIMA_PINK
	JE OUTDOOR_PINK
	JMP PINK_MOVE
	
FANTASMA_EM_CIMA_PINK:
	CMP WHAT_WAS_HERE_PINK, 9
	JE RETORNO_MOVE_PINK_GHOST
	JMP PINK_GHOST_GET_DIRECTION
	
	
OUTDOOR_PINK:
	CMP PINK_E_PORTA, 1
	JE PINK_GHOST_GET_DIRECTION
	MOV PINK_E_PORTA, 1
	JMP PINK_MOVE
	
	
PINK_MOV_UP:
	SUB PINKGHOST_POS_AUXILIAR, 20
	MOV SI, PINKGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PINK_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNE COMPARE_WALL_PINK_UP
	ADD SI, 380
COMPARE_WALL_PINK_UP:
	MOV PINK_GHOST_LOOKING_AT, 0
	JMP COMPARE_WALL_PINK
	
PINK_MOV_RGT:
	ADD PINKGHOST_POS_AUXILIAR, 1
	MOV SI, PINKGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PINK_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_PINK_RGT
	SUB SI, 17
COMPARE_WALL_PINK_RGT:
	MOV PINK_GHOST_LOOKING_AT, 1
	JMP COMPARE_WALL_PINK
	
PINK_MOV_DWN:
	ADD PINKGHOST_POS_AUXILIAR, 20
	MOV SI, PINKGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PINK_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_PINK_DWN
	SUB SI, 380
COMPARE_WALL_PINK_DWN:
	MOV PINK_GHOST_LOOKING_AT, 2
	JMP COMPARE_WALL_PINK

	
PINK_MOV_LFT:
	SUB PINKGHOST_POS_AUXILIAR, 1
	MOV SI, PINKGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_PINK_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_PINK_LFT
	ADD SI, 17
COMPARE_WALL_PINK_LFT:
	MOV PINK_GHOST_LOOKING_AT, 3
	JMP COMPARE_WALL_PINK
	
PINK_MOVE:
	CMP [MAPA + SI], 2
	JNZ MOVIMENTA_PINK
	CMP BIRL, 1
	JE PINK_DEAD
PINK_KILL_PAC:
	MOV LOSS_LIFE_FLAG, 1
	;VOLTAR PARA O SPAWN
	JMP RETORNO_MOVE_PINK_GHOST
	
PINK_DEAD:
	CMP PINK_DIED_FLAG, 1
	JE PINK_KILL_PAC
	INC FRUIT_SCORE
	ADD SCORE_NUM, 75
	MOV PINK_DEAD_FLAG, 1 		;NOVO
	MOV WHERE_IS_PINK_EYE, DI 	;NOVO
	MOV PINK_EYE_CAME_FROM, DI	;NOVO
	MOV PINK_EYE_HERE_BEF, 6	;NOVO
	CALL KILL_GHOST
	JMP RETORNO_MOVE_PINK_GHOST
	
;----------MOVIMENTAÇÃO-----------;
MOVIMENTA_PINK:
	MOV CL, WHAT_WAS_HERE_PINK
	MOV [MAPA + DI], CL
	MOV [MAPA_CMP + DI], 0
	
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_PINK, CL
	
	MOV [MAPA + SI], 0CH
	MOV [MAPA_CMP + SI], 0
	
	MOV WHERE_IS_PINK_GHOST, SI
	
	MOV LAST_TRY_PINK, AL
	JMP RETORNO_MOVE_PINK_GHOST
;----------MOVIMENTAÇÃO-----------;
MOVE_PINK_GHOST ENDP
;-----------------------------------------------------------------------------MOVE PINK GHOST------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE ORAN GHOST------------------------------------------------------------------;
MOVE_ORAN_GHOST PROC	;NOVO
	CMP ORAN_DEAD_FLAG, 1
	JNE	CHECK_MOVE_ORAN
	CALL MOVE_ORAN_EYE
	
CHECK_MOVE_ORAN:
	CMP CAN_ORAN_GHOST_MOVE, 1
	JNZ RETORNO_MOVE_ORAN_GHOST_JMP
	
	CMP BIRL,1
	JNE ORAN_QUICKER
	CMP ORAN_DIED_FLAG, 1
	JE ORAN_QUICKER
	CMP ORAN_FLAG_MINI_STOP,0
	JNE ORAN_QUICKER
	MOV ORAN_FLAG_MINI_STOP,1
	JMP RETORNO_MOVE_ORAN_GHOST_JMP
	
RETORNO_MOVE_ORAN_GHOST_JMP:
	JMP RETORNO_MOVE_ORAN_GHOST
	
ORAN_QUICKER:
	MOV ORAN_FLAG_MINI_STOP,0	
	MOV TESTE_DIRECTION_ORAN, 0
	MOV WHICH_GHOST, 0BH
	CALL GHOST_DIRECTION
	
	ADD LAST_TRY_ORAN, 2
	CMP LAST_TRY_ORAN, 4
	JL	CONTINUE_ORAN_GET_DIRECTION
	SUB LAST_TRY_ORAN, 4
	
CONTINUE_ORAN_GET_DIRECTION:
	CMP AL, LAST_TRY_ORAN
	JNZ	ORAN_GHOST_GET_DIRECTION
	INC AL
	CMP AL, 4
	JNZ ORAN_GHOST_GET_DIRECTION
	MOV AL, 0
	
ORAN_GHOST_GET_DIRECTION:
	INC TESTE_DIRECTION_ORAN
	
	CMP TESTE_DIRECTION_ORAN ,1
	JE CONTINUE_ORAN_TRY
	
	CMP TESTE_DIRECTION_ORAN,5
	JE RETORNO_MOVE_ORAN_GHOST
	
	INC AL
	CMP AL, 4
	JNE CONTINUE_ORAN_TRY
	MOV AL,0
	
CONTINUE_ORAN_TRY:
	CMP WHAT_WAS_HERE_ORAN, 9
	JNZ CHECK_ORAN_DIRECTION
	MOV AL, 0
CHECK_ORAN_DIRECTION:
	MOV CX, WHERE_IS_ORAN_GHOST
	MOV ORANGHOST_POS_AUXILIAR, CX
	CMP AL, 0
	JE ORAN_MOV_UP_JMP
	CMP AL, 1
	JE ORAN_MOV_RGT_JMP
	CMP AL, 2
	JE ORAN_MOV_DWN_JMP
	CMP AL, 3
	JE ORAN_MOV_LFT_JMP
	
ORAN_MOV_UP_JMP:
	JMP ORAN_MOV_UP
ORAN_MOV_RGT_JMP:
	JMP ORAN_MOV_RGT
ORAN_MOV_DWN_JMP:
	JMP ORAN_MOV_DWN
ORAN_MOV_LFT_JMP:
	JMP ORAN_MOV_LFT
	
RETORNO_MOVE_ORAN_GHOST:
	RET

COMPARE_WALL_ORAN:
	CMP [MAPA + SI], 1				;verifica se é paORANe
	JE 	ORAN_GHOST_GET_DIRECTION
	CMP [MAPA + SI], 8
	JE	ORAN_GHOST_GET_DIRECTION
	CMP [MAPA +SI], 9
	JG FANTASMA_EM_CIMA_ORAN
	JE OUTDOOR_ORAN
	JMP ORAN_MOVE
	
FANTASMA_EM_CIMA_ORAN:
	CMP WHAT_WAS_HERE_ORAN, 9
	JE RETORNO_MOVE_ORAN_GHOST
	JMP ORAN_GHOST_GET_DIRECTION
	
	
OUTDOOR_ORAN:
	CMP ORAN_E_PORTA, 1
	JE ORAN_GHOST_GET_DIRECTION
	MOV ORAN_E_PORTA, 1
	JMP ORAN_MOVE
	
ORAN_MOV_UP:
	SUB ORANGHOST_POS_AUXILIAR, 20
	MOV SI, ORANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_ORAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNE COMPARE_WALL_ORAN_UP
	ADD SI, 380
COMPARE_WALL_ORAN_UP:
	MOV ORAN_GHOST_LOOKING_AT, 0
	JMP COMPARE_WALL_ORAN
	
ORAN_MOV_RGT:
	ADD ORANGHOST_POS_AUXILIAR, 1
	MOV SI, ORANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_ORAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_ORAN_RGT
	SUB SI, 17
COMPARE_WALL_ORAN_RGT:
	MOV ORAN_GHOST_LOOKING_AT, 1
	JMP COMPARE_WALL_ORAN
	
ORAN_MOV_DWN:
	ADD ORANGHOST_POS_AUXILIAR, 20
	MOV SI, ORANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_ORAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_ORAN_DWN
	SUB SI, 380
COMPARE_WALL_ORAN_DWN:
	MOV ORAN_GHOST_LOOKING_AT, 2
	JMP COMPARE_WALL_ORAN

	
ORAN_MOV_LFT:
	SUB ORANGHOST_POS_AUXILIAR, 1
	MOV SI, ORANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_ORAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_ORAN_LFT
	ADD SI, 17
COMPARE_WALL_ORAN_LFT:
	MOV ORAN_GHOST_LOOKING_AT, 3
	JMP COMPARE_WALL_ORAN
	
ORAN_MOVE:
	CMP [MAPA + SI], 2
	JNZ MOVIMENTA_ORAN
	CMP BIRL, 1
	JE ORAN_DEAD
ORAN_KILL_PAC:
	MOV LOSS_LIFE_FLAG, 1
	;VOLTAR PARA O SPAWN
	JMP RETORNO_MOVE_ORAN_GHOST
	
ORAN_DEAD:
	CMP ORAN_DIED_FLAG, 1
	JE ORAN_KILL_PAC
	INC FRUIT_SCORE
	ADD SCORE_NUM, 75
	MOV ORAN_DEAD_FLAG, 1	;NOVO
	MOV WHERE_IS_ORAN_EYE, DI 	;NOVO
	MOV ORAN_EYE_CAME_FROM, DI	;NOVO
	MOV ORAN_EYE_HERE_BEF, 6	;NOVO
	CALL KILL_GHOST
	
	JMP RETORNO_MOVE_ORAN_GHOST
	
;----------MOVIMENTAÇÃO-----------;
MOVIMENTA_ORAN:
	MOV CL, WHAT_WAS_HERE_ORAN
	MOV [MAPA + DI], CL
	MOV [MAPA_CMP + DI], 0
	
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_ORAN, CL
	
	MOV [MAPA + SI], 0BH
	MOV [MAPA_CMP + SI], 0
	
	MOV WHERE_IS_ORAN_GHOST, SI
	MOV LAST_TRY_ORAN, AL
	JMP RETORNO_MOVE_ORAN_GHOST
;----------MOVIMENTAÇÃO-----------;
MOVE_ORAN_GHOST ENDP
;-----------------------------------------------------------------------------MOVE ORAN GHOST------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE CYAN GHOST------------------------------------------------------------------;
MOVE_CYAN_GHOST PROC		;NOVO
	CMP CYAN_DEAD_FLAG, 1
	JNE	CHECK_MOVE_CYAN
	CALL MOVE_CYAN_EYE
	
CHECK_MOVE_CYAN:
	CMP CAN_CYAN_GHOST_MOVE, 1
	JNZ RETORNO_MOVE_CYAN_GHOST_JMP
	
	CMP BIRL,1
	JNE CYAN_QUICKER
	CMP CYAN_DIED_FLAG, 1
	JE CYAN_QUICKER
	CMP CYAN_FLAG_MINI_STOP,0
	JNE CYAN_QUICKER
	MOV CYAN_FLAG_MINI_STOP,1
	JMP RETORNO_MOVE_CYAN_GHOST_JMP
	
RETORNO_MOVE_CYAN_GHOST_JMP:
	JMP RETORNO_MOVE_CYAN_GHOST
	
CYAN_QUICKER:
	MOV CYAN_FLAG_MINI_STOP,0	
	MOV TESTE_DIRECTION_CYAN, 0
	MOV WHICH_GHOST, 0DH
	CALL GHOST_DIRECTION
	
	ADD LAST_TRY_CYAN, 2
	CMP LAST_TRY_CYAN, 4
	JL	CONTINUE_CYAN_GET_DIRECTION
	SUB LAST_TRY_CYAN, 4
	
CONTINUE_CYAN_GET_DIRECTION:
	CMP AL, LAST_TRY_CYAN
	JNZ	CYAN_GHOST_GET_DIRECTION
	INC AL
	CMP AL, 4
	JNZ CYAN_GHOST_GET_DIRECTION
	MOV AL, 0

CYAN_GHOST_GET_DIRECTION:
	INC TESTE_DIRECTION_CYAN
	
	CMP TESTE_DIRECTION_CYAN, 1
	JE	CONTINUE_CYAN_TRY
	
	CMP TESTE_DIRECTION_CYAN, 5
	JE	RETORNO_MOVE_CYAN_GHOST
	
	INC AL
	CMP AL, 4
	JNE	CONTINUE_CYAN_TRY
	MOV AL, 0
	
CONTINUE_CYAN_TRY:
	CMP WHAT_WAS_HERE_CYAN, 9
	JNZ CHECK_CYAN_DIRECTION
	MOV AL, 0
CHECK_CYAN_DIRECTION:
	MOV CX, WHERE_IS_CYAN_GHOST
	MOV CYANGHOST_POS_AUXILIAR, CX
	CMP AL, 0
	JE CYAN_MOV_UP_JMP
	CMP AL, 1
	JE CYAN_MOV_RGT_JMP
	CMP AL, 2
	JE CYAN_MOV_DWN_JMP
	CMP AL, 3
	JE CYAN_MOV_LFT_JMP
	
CYAN_MOV_UP_JMP:
	JMP CYAN_MOV_UP
CYAN_MOV_RGT_JMP:
	JMP CYAN_MOV_RGT
CYAN_MOV_DWN_JMP:
	JMP CYAN_MOV_DWN
CYAN_MOV_LFT_JMP:
	JMP CYAN_MOV_LFT
	
RETORNO_MOVE_CYAN_GHOST:
	RET

COMPARE_WALL_CYAN:
	CMP [MAPA + SI], 1				;verifica se é paCYANe
	JE 	CYAN_GHOST_GET_DIRECTION
	CMP [MAPA + SI], 8
	JE	CYAN_GHOST_GET_DIRECTION
	CMP [MAPA +SI], 9
	JG FANTASMA_EM_CIMA_CYAN
	JE OUTDOOR_CYAN
	JMP CYAN_MOVE
	
FANTASMA_EM_CIMA_CYAN:
	CMP WHAT_WAS_HERE_CYAN, 9
	JE RETORNO_MOVE_CYAN_GHOST
	JMP CYAN_GHOST_GET_DIRECTION
	
	
OUTDOOR_CYAN:
	CMP CYAN_E_PORTA, 1
	JE CYAN_GHOST_GET_DIRECTION
	MOV CYAN_E_PORTA, 1
	JMP CYAN_MOVE
	
CYAN_MOV_UP:
	SUB CYANGHOST_POS_AUXILIAR, 20
	MOV SI, CYANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_CYAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNE COMPARE_WALL_CYAN_UP
	ADD SI, 380
COMPARE_WALL_CYAN_UP:
	MOV CYAN_GHOST_LOOKING_AT, 0
	JMP COMPARE_WALL_CYAN
	
CYAN_MOV_RGT:
	ADD CYANGHOST_POS_AUXILIAR, 1
	MOV SI, CYANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_CYAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_CYAN_RGT
	SUB SI, 17
COMPARE_WALL_CYAN_RGT:
	MOV CYAN_GHOST_LOOKING_AT, 1
	JMP COMPARE_WALL_CYAN
	
CYAN_MOV_DWN:
	ADD CYANGHOST_POS_AUXILIAR, 20
	MOV SI, CYANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_CYAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_CYAN_DWN
	SUB SI, 380
COMPARE_WALL_CYAN_DWN:
	MOV CYAN_GHOST_LOOKING_AT, 2
	JMP COMPARE_WALL_CYAN

	
CYAN_MOV_LFT:
	SUB CYANGHOST_POS_AUXILIAR, 1
	MOV SI, CYANGHOST_POS_AUXILIAR	;guarda a possível futura posição do pacman
	MOV DI,	WHERE_IS_CYAN_GHOST		;guarda a posição antes do movimento do pacman
	
	CMP [MAPA + SI], 5
	JNZ COMPARE_WALL_CYAN_LFT
	ADD SI, 17
COMPARE_WALL_CYAN_LFT:
	MOV CYAN_GHOST_LOOKING_AT, 3
	JMP COMPARE_WALL_CYAN
	
CYAN_MOVE:
	CMP [MAPA + SI], 2
	JNZ MOVIMENTA_CYAN
	CMP BIRL, 1
	JE CYAN_DEAD
CYAN_KILL_PAC:
	MOV LOSS_LIFE_FLAG, 1
	;VOLTAR PARA O SPAWN
	JMP RETORNO_MOVE_CYAN_GHOST
	
CYAN_DEAD:
	CMP CYAN_DIED_FLAG, 1
	JE CYAN_KILL_PAC
	INC FRUIT_SCORE
	ADD SCORE_NUM, 75
	MOV CYAN_DEAD_FLAG, 1	;NOVO
	MOV WHERE_IS_CYAN_EYE, DI 	;NOVO
	MOV CYAN_EYE_CAME_FROM, DI	;NOVO
	MOV CYAN_EYE_HERE_BEF, 6	;NOVO
	CALL KILL_GHOST
	JMP RETORNO_MOVE_CYAN_GHOST
	
;----------MOVIMENTAÇÃO-----------;
MOVIMENTA_CYAN:
	MOV CL, WHAT_WAS_HERE_CYAN
	MOV [MAPA + DI], CL
	MOV [MAPA_CMP + DI], 0
	
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_CYAN, CL
	
	MOV [MAPA + SI], 0DH
	MOV [MAPA_CMP + SI], 0
	
	MOV WHERE_IS_CYAN_GHOST, SI
	
	MOV LAST_TRY_CYAN, AL
	JMP RETORNO_MOVE_CYAN_GHOST
;----------MOVIMENTAÇÃO-----------;
MOVE_CYAN_GHOST ENDP
;-----------------------------------------------------------------------------MOVE CYAN GHOST------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE RED EYE---------------------------------------------------------------------;
MOVE_RED_EYE PROC
	MOV WHICH_EYE, 0AH
	MOV AX, WHERE_IS_RED_EYE
	MOV BX, SPAWN_RED_GHOST
	MOV POS_AUX_UP, AX
	MOV POS_AUX_RIGHT, AX
	MOV POS_AUX_DOWN, AX
	MOV POS_AUX_LEFT, AX
	
	SUB POS_AUX_UP, 20
	ADD POS_AUX_RIGHT, 1
	ADD POS_AUX_DOWN, 20
	SUB POS_AUX_LEFT, 1
	
	CMP POS_AUX_UP, BX
	JE RED_END_UP
	CMP POS_AUX_RIGHT, BX
	JE RED_END_RIGHT
	CMP POS_AUX_DOWN, BX
	JE RED_END_DOWN
	CMP POS_AUX_LEFT, BX
	JE RED_END_LEFT
	
	JMP RED_EYE_GET_GRID

RED_END_UP:
	MOV SI, POS_AUX_UP
	JMP END_RED_EYE
RED_END_RIGHT:
	MOV SI, POS_AUX_RIGHT
	JMP END_RED_EYE
RED_END_DOWN:
	MOV SI, POS_AUX_DOWN
	JMP END_RED_EYE
RED_END_LEFT:
	MOV SI, POS_AUX_LEFT
	JMP END_RED_EYE

END_RED_EYE:
	MOV BX, AX
	MOV CL, RED_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_RED_HOLDING
	MOV CL, 6
PUT_RED_HOLDING:
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_RED, CL
	MOV CL, WHICH_EYE
	MOV [MAPA + SI], CL
	MOV [MAPA_CMP + SI], 0
	MOV RED_DEAD_FLAG, 0
	MOV CAN_RED_GHOST_MOVE, 1
	MOV WHERE_IS_RED_GHOST, SI
	RET

RED_EYE_GET_GRID:
	MOV BX, SPAWN_RED_GHOST
	CALL GET_ORDERED_MOVES			;RETURN DIS_ORD ---> VECTOR4 (0,1,2,3) ---> A PRIMEIRA POSIÇÃO TEM A MELHOR OPÇÃO PARA MOVER O OLHO
	
	XOR BX, BX
CHECK_RED_EYE_DIR:
	MOV AL, [DIS_ORD + BX]
	CMP AL, 0
	JE RED_EYE_TO_UP_JMP
	CMP AL, 1
	JE RED_EYE_TO_RIGHT_JMP
	CMP AL, 2
	JE RED_EYE_TO_DOWN_JMP
	CMP AL, 3
	JE RED_EYE_TO_LEFT_JMP
	JMP FIM_RED_EYE_MOVMENT
	

RED_EYE_TO_UP_JMP:
	JMP RED_EYE_TO_UP
RED_EYE_TO_RIGHT_JMP:
	JMP RED_EYE_TO_RIGHT
RED_EYE_TO_DOWN_JMP:
	JMP RED_EYE_TO_DOWN
RED_EYE_TO_LEFT_JMP:
	JMP RED_EYE_TO_LEFT
	
FIM_RED_EYE_MOVMENT:
	RET
	
RED_EYE_TO_UP:
	MOV SI, POS_AUX_UP
	MOV RED_EYE_LOOKING_AT, 0
	CMP SI, RED_EYE_CAME_FROM
	JE CHECK_RED_EYE_DIR_JMP
	JMP CMP_RED_EYE_POS
	
RED_EYE_TO_RIGHT:
	MOV SI, POS_AUX_RIGHT
	MOV RED_EYE_LOOKING_AT, 1
	CMP SI, RED_EYE_CAME_FROM
	JE CHECK_RED_EYE_DIR_JMP
	JMP CMP_RED_EYE_POS

CHECK_RED_EYE_DIR_JMP:
	INC BX
	CMP BX, 4
	JE CHECK_LAST_TRY_RED
	CMP BX, 5
	JE FIM_RED_EYE_MOVMENT
	JMP CHECK_RED_EYE_DIR
	
CHECK_LAST_TRY_RED:
	MOV SI, RED_EYE_CAME_FROM
	JMP CMP_RED_EYE_POS
	
RED_EYE_TO_DOWN:
	MOV SI, POS_AUX_DOWN
	CMP SI, RED_EYE_CAME_FROM
	MOV RED_EYE_LOOKING_AT, 2
	JE CHECK_RED_EYE_DIR_JMP
	JMP CMP_RED_EYE_POS

RED_EYE_TO_LEFT:
	MOV SI, POS_AUX_LEFT
	CMP SI, RED_EYE_CAME_FROM
	MOV RED_EYE_LOOKING_AT, 3
	JE CHECK_RED_EYE_DIR_JMP
	JMP CMP_RED_EYE_POS
	
CMP_RED_EYE_POS:
	CMP [MAPA + SI], 1
	JE CHECK_RED_EYE_DIR_JMP
	CMP [MAPA + SI], 2
	JE CHECK_RED_EYE_DIR_JMP
	CMP [MAPA + SI], 5
	JE CHECK_RED_EYE_DIR_JMP
	CMP [MAPA + SI], 8
	JE CHECK_RED_EYE_DIR_JMP
	JMP CAN_RED_EYE_MOVE

CAN_RED_EYE_MOVE:
	MOV BX, WHERE_IS_RED_EYE
	MOV CL, RED_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_RED_HOLDING1
	MOV CL, 6
PUT_RED_HOLDING1:
	MOV [MAPA + BX], CL
	MOV CL, [MAPA + SI]
	MOV RED_EYE_HERE_BEF, CL
	MOV [MAPA + SI], 8
	MOV [MAPA_CMP + BX], 0
	MOV [MAPA_CMP + SI], 0
	MOV WHERE_IS_RED_EYE, SI
	MOV RED_EYE_CAME_FROM, BX
	RET

MOVE_RED_EYE ENDP
;-----------------------------------------------------------------------------MOVE RED EYE---------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE PINK EYE--------------------------------------------------------------------;
MOVE_PINK_EYE PROC
	MOV WHICH_EYE, 0CH
	MOV AX, WHERE_IS_PINK_EYE
	MOV BX, SPAWN_PINK_GHOST
	MOV POS_AUX_UP, AX
	MOV POS_AUX_RIGHT, AX
	MOV POS_AUX_DOWN, AX
	MOV POS_AUX_LEFT, AX
	
	SUB POS_AUX_UP, 20
	ADD POS_AUX_RIGHT, 1
	ADD POS_AUX_DOWN, 20
	SUB POS_AUX_LEFT, 1
	
	CMP POS_AUX_UP, BX
	JE PINK_END_UP
	CMP POS_AUX_RIGHT, BX
	JE PINK_END_RIGHT
	CMP POS_AUX_DOWN, BX
	JE PINK_END_DOWN
	CMP POS_AUX_LEFT, BX
	JE PINK_END_LEFT
	
	JMP PINK_EYE_GET_GRID

PINK_END_UP:
	MOV SI, POS_AUX_UP
	JMP END_PINK_EYE
PINK_END_RIGHT:
	MOV SI, POS_AUX_RIGHT
	JMP END_PINK_EYE
PINK_END_DOWN:
	MOV SI, POS_AUX_DOWN
	JMP END_PINK_EYE
PINK_END_LEFT:
	MOV SI, POS_AUX_LEFT
	JMP END_PINK_EYE

END_PINK_EYE:
	MOV BX, AX
	MOV CL, PINK_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_PINK_HOLDING
	MOV CL, 6
PUT_PINK_HOLDING:
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_PINK, CL
	MOV CL, WHICH_EYE
	MOV [MAPA + SI], CL
	MOV [MAPA_CMP + SI], 0
	MOV PINK_DEAD_FLAG, 0
	MOV CAN_PINK_GHOST_MOVE, 1
	MOV WHERE_IS_PINK_GHOST, SI
	RET

PINK_EYE_GET_GRID:
	MOV BX, SPAWN_PINK_GHOST
	CALL GET_ORDERED_MOVES			;RETURN DIS_ORD ---> VECTOR4 (0,1,2,3) ---> A PRIMEIRA POSIÇÃO TEM A MELHOR OPÇÃO PARA MOVER O OLHO
	
	XOR BX, BX
CHECK_PINK_EYE_DIR:
	MOV AL, [DIS_ORD + BX]
	CMP AL, 0
	JE PINK_EYE_TO_UP_JMP
	CMP AL, 1
	JE PINK_EYE_TO_RIGHT_JMP
	CMP AL, 2
	JE PINK_EYE_TO_DOWN_JMP
	CMP AL, 3
	JE PINK_EYE_TO_LEFT_JMP
	JMP FIM_PINK_EYE_MOVMENT
	

PINK_EYE_TO_UP_JMP:
	JMP PINK_EYE_TO_UP
PINK_EYE_TO_RIGHT_JMP:
	JMP PINK_EYE_TO_RIGHT
PINK_EYE_TO_DOWN_JMP:
	JMP PINK_EYE_TO_DOWN
PINK_EYE_TO_LEFT_JMP:
	JMP PINK_EYE_TO_LEFT
	
FIM_PINK_EYE_MOVMENT:
	RET
	
PINK_EYE_TO_UP:
	MOV SI, POS_AUX_UP
	MOV PINK_EYE_LOOKING_AT, 0
	CMP SI, PINK_EYE_CAME_FROM
	JE CHECK_PINK_EYE_DIR_JMP
	JMP CMP_PINK_EYE_POS
	
PINK_EYE_TO_RIGHT:
	MOV SI, POS_AUX_RIGHT
	MOV PINK_EYE_LOOKING_AT, 1
	CMP SI, PINK_EYE_CAME_FROM
	JE CHECK_PINK_EYE_DIR_JMP
	JMP CMP_PINK_EYE_POS

CHECK_PINK_EYE_DIR_JMP:
	INC BX
	CMP BX, 4
	JE CHECK_LAST_TRY_PINK
	CMP BX, 5
	JE FIM_PINK_EYE_MOVMENT
	JMP CHECK_PINK_EYE_DIR
	
CHECK_LAST_TRY_PINK:
	MOV SI, PINK_EYE_CAME_FROM
	JMP CMP_PINK_EYE_POS
	
PINK_EYE_TO_DOWN:
	MOV SI, POS_AUX_DOWN
	CMP SI, PINK_EYE_CAME_FROM
	MOV PINK_EYE_LOOKING_AT, 2
	JE CHECK_PINK_EYE_DIR_JMP
	JMP CMP_PINK_EYE_POS

PINK_EYE_TO_LEFT:
	MOV SI, POS_AUX_LEFT
	CMP SI, PINK_EYE_CAME_FROM
	MOV PINK_EYE_LOOKING_AT, 3
	JE CHECK_PINK_EYE_DIR_JMP
	JMP CMP_PINK_EYE_POS
	
CMP_PINK_EYE_POS:
	CMP [MAPA + SI], 1
	JE CHECK_PINK_EYE_DIR_JMP
	CMP [MAPA + SI], 2
	JE CHECK_PINK_EYE_DIR_JMP
	CMP [MAPA + SI], 5
	JE CHECK_PINK_EYE_DIR_JMP
	CMP [MAPA + SI], 8
	JE CHECK_PINK_EYE_DIR_JMP
	JMP CAN_PINK_EYE_MOVE

CAN_PINK_EYE_MOVE:
	MOV BX, WHERE_IS_PINK_EYE
	MOV CL, PINK_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_PINK_HOLDING1
	MOV CL, 6
PUT_PINK_HOLDING1:
	MOV [MAPA + BX], CL
	MOV CL, [MAPA + SI]
	MOV PINK_EYE_HERE_BEF, CL
	MOV [MAPA + SI], 8
	MOV [MAPA_CMP + BX], 0
	MOV [MAPA_CMP + SI], 0
	MOV WHERE_IS_PINK_EYE, SI
	MOV PINK_EYE_CAME_FROM, BX
	RET

MOVE_PINK_EYE ENDP
;-----------------------------------------------------------------------------MOVE PINK EYE--------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE ORAN EYE--------------------------------------------------------------------;
MOVE_ORAN_EYE PROC
	MOV WHICH_EYE, 0BH
	MOV AX, WHERE_IS_ORAN_EYE
	MOV BX, SPAWN_ORAN_GHOST
	MOV POS_AUX_UP, AX
	MOV POS_AUX_RIGHT, AX
	MOV POS_AUX_DOWN, AX
	MOV POS_AUX_LEFT, AX
	
	SUB POS_AUX_UP, 20
	ADD POS_AUX_RIGHT, 1
	ADD POS_AUX_DOWN, 20
	SUB POS_AUX_LEFT, 1
	
	CMP POS_AUX_UP, BX
	JE ORAN_END_UP
	CMP POS_AUX_RIGHT, BX
	JE ORAN_END_RIGHT
	CMP POS_AUX_DOWN, BX
	JE ORAN_END_DOWN
	CMP POS_AUX_LEFT, BX
	JE ORAN_END_LEFT
	
	JMP ORAN_EYE_GET_GRID

ORAN_END_UP:
	MOV SI, POS_AUX_UP
	JMP END_ORAN_EYE
ORAN_END_RIGHT:
	MOV SI, POS_AUX_RIGHT
	JMP END_ORAN_EYE
ORAN_END_DOWN:
	MOV SI, POS_AUX_DOWN
	JMP END_ORAN_EYE
ORAN_END_LEFT:
	MOV SI, POS_AUX_LEFT
	JMP END_ORAN_EYE

END_ORAN_EYE:
	MOV BX, AX
	MOV CL, ORAN_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_ORAN_HOLDING
	MOV CL, 6
PUT_ORAN_HOLDING:
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_ORAN, CL
	MOV CL, WHICH_EYE
	MOV [MAPA + SI], CL
	MOV [MAPA_CMP + SI], 0
	MOV ORAN_DEAD_FLAG, 0
	MOV CAN_ORAN_GHOST_MOVE, 1
	MOV WHERE_IS_ORAN_GHOST, SI
	RET

ORAN_EYE_GET_GRID:
	MOV BX, SPAWN_ORAN_GHOST
	CALL GET_ORDERED_MOVES			;RETURN DIS_ORD ---> VECTOR4 (0,1,2,3) ---> A PRIMEIRA POSIÇÃO TEM A MELHOR OPÇÃO PARA MOVER O OLHO
	
	XOR BX, BX
CHECK_ORAN_EYE_DIR:
	MOV AL, [DIS_ORD + BX]
	CMP AL, 0
	JE ORAN_EYE_TO_UP_JMP
	CMP AL, 1
	JE ORAN_EYE_TO_RIGHT_JMP
	CMP AL, 2
	JE ORAN_EYE_TO_DOWN_JMP
	CMP AL, 3
	JE ORAN_EYE_TO_LEFT_JMP
	JMP FIM_ORAN_EYE_MOVMENT
	

ORAN_EYE_TO_UP_JMP:
	JMP ORAN_EYE_TO_UP
ORAN_EYE_TO_RIGHT_JMP:
	JMP ORAN_EYE_TO_RIGHT
ORAN_EYE_TO_DOWN_JMP:
	JMP ORAN_EYE_TO_DOWN
ORAN_EYE_TO_LEFT_JMP:
	JMP ORAN_EYE_TO_LEFT
	
FIM_ORAN_EYE_MOVMENT:
	RET
	
ORAN_EYE_TO_UP:
	MOV SI, POS_AUX_UP
	MOV ORAN_EYE_LOOKING_AT, 0
	CMP SI, ORAN_EYE_CAME_FROM
	JE CHECK_ORAN_EYE_DIR_JMP
	JMP CMP_ORAN_EYE_POS
	
ORAN_EYE_TO_RIGHT:
	MOV SI, POS_AUX_RIGHT
	MOV ORAN_EYE_LOOKING_AT, 1
	CMP SI, ORAN_EYE_CAME_FROM
	JE CHECK_ORAN_EYE_DIR_JMP
	JMP CMP_ORAN_EYE_POS

CHECK_ORAN_EYE_DIR_JMP:
	INC BX
	CMP BX, 4
	JE CHECK_LAST_TRY_ORAN
	CMP BX, 5
	JE FIM_ORAN_EYE_MOVMENT
	JMP CHECK_ORAN_EYE_DIR
	
CHECK_LAST_TRY_ORAN:
	MOV SI, ORAN_EYE_CAME_FROM
	JMP CMP_ORAN_EYE_POS
	
ORAN_EYE_TO_DOWN:
	MOV SI, POS_AUX_DOWN
	CMP SI, ORAN_EYE_CAME_FROM
	MOV ORAN_EYE_LOOKING_AT, 2
	JE CHECK_ORAN_EYE_DIR_JMP
	JMP CMP_ORAN_EYE_POS

ORAN_EYE_TO_LEFT:
	MOV SI, POS_AUX_LEFT
	CMP SI, ORAN_EYE_CAME_FROM
	MOV ORAN_EYE_LOOKING_AT, 3
	JE CHECK_ORAN_EYE_DIR_JMP
	JMP CMP_ORAN_EYE_POS
	
CMP_ORAN_EYE_POS:
	CMP [MAPA + SI], 1
	JE CHECK_ORAN_EYE_DIR_JMP
	CMP [MAPA + SI], 2
	JE CHECK_ORAN_EYE_DIR_JMP
	CMP [MAPA + SI], 5
	JE CHECK_ORAN_EYE_DIR_JMP
	CMP [MAPA + SI], 8
	JE CHECK_ORAN_EYE_DIR_JMP
	JMP CAN_ORAN_EYE_MOVE

CAN_ORAN_EYE_MOVE:
	MOV BX, WHERE_IS_ORAN_EYE
	MOV CL, ORAN_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_ORAN_HOLDING1
	MOV CL, 6
PUT_ORAN_HOLDING1:
	MOV [MAPA + BX], CL
	MOV CL, [MAPA + SI]
	MOV ORAN_EYE_HERE_BEF, CL
	MOV [MAPA + SI], 8
	MOV [MAPA_CMP + BX], 0
	MOV [MAPA_CMP + SI], 0
	MOV WHERE_IS_ORAN_EYE, SI
	MOV ORAN_EYE_CAME_FROM, BX
	RET

MOVE_ORAN_EYE ENDP
;-----------------------------------------------------------------------------MOVE ORAN EYE--------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MOVE CYAN EYE--------------------------------------------------------------------;
MOVE_CYAN_EYE PROC	
	MOV WHICH_EYE, 0DH
	MOV AX, WHERE_IS_CYAN_EYE
	MOV BX, SPAWN_CYAN_GHOST
	MOV POS_AUX_UP, AX
	MOV POS_AUX_RIGHT, AX
	MOV POS_AUX_DOWN, AX
	MOV POS_AUX_LEFT, AX
	
	SUB POS_AUX_UP, 20
	ADD POS_AUX_RIGHT, 1
	ADD POS_AUX_DOWN, 20
	SUB POS_AUX_LEFT, 1
	
	CMP POS_AUX_UP, BX
	JE CYAN_END_UP
	CMP POS_AUX_RIGHT, BX
	JE CYAN_END_RIGHT
	CMP POS_AUX_DOWN, BX
	JE CYAN_END_DOWN
	CMP POS_AUX_LEFT, BX
	JE CYAN_END_LEFT
	
	JMP CYAN_EYE_GET_GRID

CYAN_END_UP:
	MOV SI, POS_AUX_UP
	JMP END_CYAN_EYE
CYAN_END_RIGHT:
	MOV SI, POS_AUX_RIGHT
	JMP END_CYAN_EYE
CYAN_END_DOWN:
	MOV SI, POS_AUX_DOWN
	JMP END_CYAN_EYE
CYAN_END_LEFT:
	MOV SI, POS_AUX_LEFT
	JMP END_CYAN_EYE

END_CYAN_EYE:
	MOV BX, AX
	MOV CL, CYAN_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_CYAN_HOLDING
	MOV CL, 6
PUT_CYAN_HOLDING:
	MOV [MAPA + BX], CL
	MOV [MAPA_CMP + BX], 0
	MOV CL, [MAPA + SI]
	MOV WHAT_WAS_HERE_CYAN, CL
	MOV CL, WHICH_EYE
	MOV [MAPA + SI], CL
	MOV [MAPA_CMP + SI], 0
	MOV CYAN_DEAD_FLAG, 0
	MOV CAN_CYAN_GHOST_MOVE, 1
	MOV WHERE_IS_CYAN_GHOST, SI
	RET

CYAN_EYE_GET_GRID:
	MOV BX, SPAWN_CYAN_GHOST
	CALL GET_ORDERED_MOVES			;RETURN DIS_ORD ---> VECTOR4 (0,1,2,3) ---> A PRIMEIRA POSIÇÃO TEM A MELHOR OPÇÃO PARA MOVER O OLHO
	
	XOR BX, BX
CHECK_CYAN_EYE_DIR:
	MOV AL, [DIS_ORD + BX]
	CMP AL, 0
	JE CYAN_EYE_TO_UP_JMP
	CMP AL, 1
	JE CYAN_EYE_TO_RIGHT_JMP
	CMP AL, 2
	JE CYAN_EYE_TO_DOWN_JMP
	CMP AL, 3
	JE CYAN_EYE_TO_LEFT_JMP
	JMP FIM_CYAN_EYE_MOVMENT
	

CYAN_EYE_TO_UP_JMP:
	JMP CYAN_EYE_TO_UP
CYAN_EYE_TO_RIGHT_JMP:
	JMP CYAN_EYE_TO_RIGHT
CYAN_EYE_TO_DOWN_JMP:
	JMP CYAN_EYE_TO_DOWN
CYAN_EYE_TO_LEFT_JMP:
	JMP CYAN_EYE_TO_LEFT
	
FIM_CYAN_EYE_MOVMENT:
	RET
	
CYAN_EYE_TO_UP:
	MOV SI, POS_AUX_UP
	MOV CYAN_EYE_LOOKING_AT, 0
	CMP SI, CYAN_EYE_CAME_FROM
	JE CHECK_CYAN_EYE_DIR_JMP
	JMP CMP_CYAN_EYE_POS
	
CYAN_EYE_TO_RIGHT:
	MOV SI, POS_AUX_RIGHT
	MOV CYAN_EYE_LOOKING_AT, 1
	CMP SI, CYAN_EYE_CAME_FROM
	JE CHECK_CYAN_EYE_DIR_JMP
	JMP CMP_CYAN_EYE_POS

CHECK_CYAN_EYE_DIR_JMP:
	INC BX
	CMP BX, 4
	JE CHECK_LAST_TRY_CYAN
	CMP BX, 5
	JE FIM_CYAN_EYE_MOVMENT
	JMP CHECK_CYAN_EYE_DIR
	
CHECK_LAST_TRY_CYAN:
	MOV SI, CYAN_EYE_CAME_FROM
	JMP CMP_CYAN_EYE_POS
	
CYAN_EYE_TO_DOWN:
	MOV SI, POS_AUX_DOWN
	CMP SI, CYAN_EYE_CAME_FROM
	MOV CYAN_EYE_LOOKING_AT, 2
	JE CHECK_CYAN_EYE_DIR_JMP
	JMP CMP_CYAN_EYE_POS

CYAN_EYE_TO_LEFT:
	MOV SI, POS_AUX_LEFT
	CMP SI, CYAN_EYE_CAME_FROM
	MOV CYAN_EYE_LOOKING_AT, 3
	JE CHECK_CYAN_EYE_DIR_JMP
	JMP CMP_CYAN_EYE_POS
	
CMP_CYAN_EYE_POS:
	CMP [MAPA + SI], 1
	JE CHECK_CYAN_EYE_DIR_JMP
	CMP [MAPA + SI], 2
	JE CHECK_CYAN_EYE_DIR_JMP
	CMP [MAPA + SI], 5
	JE CHECK_CYAN_EYE_DIR_JMP
	CMP [MAPA + SI], 8
	JE CHECK_CYAN_EYE_DIR_JMP
	JMP CAN_CYAN_EYE_MOVE

CAN_CYAN_EYE_MOVE:
	MOV BX, WHERE_IS_CYAN_EYE
	MOV CL, CYAN_EYE_HERE_BEF
	CMP CL, 9
	JLE	PUT_CYAN_HOLDING1
	MOV CL, 6
PUT_CYAN_HOLDING1:
	MOV [MAPA + BX], CL
	MOV CL, [MAPA + SI]
	MOV CYAN_EYE_HERE_BEF, CL
	MOV [MAPA + SI], 8
	MOV [MAPA_CMP + BX], 0
	MOV [MAPA_CMP + SI], 0
	MOV WHERE_IS_CYAN_EYE, SI
	MOV CYAN_EYE_CAME_FROM, BX
	RET

MOVE_CYAN_EYE ENDP
;-----------------------------------------------------------------------------MOVE CYAN EYE--------------------------------------------------------------------;
;#####################################################################################################################################################################################;
;#############################################################################-----MOVIMENTAÇÕES----##################################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#############################################################################---------MAPA---------##################################################################################;
;#####################################################################################################################################################################################;
;-----------------------------------------------------------------------------PRINT MAP------------------------------------------------------------------------;
PRINT_MAP PROC	;PARAMETROS: (QUADSIZE_X = QUADSIZE; STARTX = X INICIAL; STARTY = Y INICIAL)
	MOV HOW_MANY_POINTS, 0
	MOV AX, STARTY
	MOV LINHA, AX
	MOV AX, STARTX
	MOV COLUNA, AX
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
	MOV AX, QUADSIZE_X
	DEC	AX
	MOV QUADSIZE, AX
	
MAT_VERIFIC_MAP:
	MOV BX, MATRIZ
	CMP [MAPA + BX], 1
	JE PRINT_PIXEL_MAP_JMP
	CMP [MAPA + BX], 2
	JE THERE_IS_THE_PACMAN_JMP
	CMP [MAPA + BX], 9
	JE PRINT_DOOR_MAP_JMP
	CMP [MAPA + BX], 3
	JE THERE_IS_ONE_MORE_POINT_JMP
	CMP [MAPA + BX], 0AH
	JE THERE_IS_THE_RED_GHOST_JMP
	CMP [MAPA + BX], 0CH
	JE THERE_IS_THE_PINK_GHOST_JMP
	CMP [MAPA + BX], 0BH
	JE THERE_IS_THE_ORAN_GHOST_JMP
	CMP [MAPA + BX], 0DH
	JE THERE_IS_THE_CYAN_GHOST_JMP
	CMP [MAPA + BX], 8
	JE THERE_IS_THE_FUIT_JMP
	CMP QUADCOL, 19
	JE DESCE_MAP_JMP
	INC MATRIZ
	INC QUADCOL
	JMP RESETA_INICIO_MAPA
	
PRINT_PIXEL_MAP_JMP:
	JMP PRINT_PIXEL_MAP

THERE_IS_THE_PACMAN_JMP:
	JMP THERE_IS_THE_PACMAN

PRINT_DOOR_MAP_JMP:
	JMP PRINT_DOOR_MAP

THERE_IS_ONE_MORE_POINT_JMP:
	JMP THERE_IS_ONE_MORE_POINT

THERE_IS_THE_RED_GHOST_JMP:
	JMP THERE_IS_THE_RED_GHOST
	
THERE_IS_THE_PINK_GHOST_JMP:
	JMP THERE_IS_THE_PINK_GHOST
	
THERE_IS_THE_ORAN_GHOST_JMP:
	JMP THERE_IS_THE_ORAN_GHOST
	
THERE_IS_THE_CYAN_GHOST_JMP:
	JMP THERE_IS_THE_CYAN_GHOST
	
THERE_IS_THE_FUIT_JMP:
	JMP THERE_IS_THE_FUIT
	
THERE_IS_THE_PACMAN:
	MOV WHERE_IS_PACMAN, BX
	MOV SPAWN_PACMAN, BX
	CMP QUADCOL, 19
	JE DESCE_MAP_JMP
	INC QUADCOL
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
PRINT_PIXEL_MAP:
	CMP QUADCOL, 19
	JE DESCE_MAP_JMP
	MOV AL, WALLC
	MOV COR, AL
	JMP CALL_PRINT_PIXEL_MAP
	
THERE_IS_ONE_MORE_POINT:
	INC HOW_MANY_POINTS
	CMP QUADCOL, 19
	JE DESCE_MAP_JMP
	INC QUADCOL
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
DESCE_MAP_JMP:
	JMP DESCE_MAP
	
THERE_IS_THE_RED_GHOST:
	MOV WHERE_IS_RED_GHOST, BX
	MOV SPAWN_RED_GHOST, BX
	CMP QUADCOL, 19
	JE DESCE_MAP_JMP
	INC QUADCOL
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
THERE_IS_THE_PINK_GHOST:
	MOV WHERE_IS_PINK_GHOST, BX
	MOV SPAWN_PINK_GHOST, BX
	CMP QUADCOL, 19
	JE DESCE_MAP_JMP
	INC QUADCOL
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
THERE_IS_THE_ORAN_GHOST:
	MOV WHERE_IS_ORAN_GHOST, BX
	MOV SPAWN_ORAN_GHOST, BX
	CMP QUADCOL, 19
	JE DESCE_MAP
	INC QUADCOL
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
THERE_IS_THE_CYAN_GHOST:
	MOV WHERE_IS_CYAN_GHOST, BX
	MOV SPAWN_CYAN_GHOST, BX
	CMP QUADCOL, 19
	JE DESCE_MAP
	INC QUADCOL
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
THERE_IS_THE_FUIT:
	MOV WHERE_IS_FRUIT, BX
	MOV [MAPA + BX], 6
	CMP QUADCOL, 19
	JE DESCE_MAP
	INC QUADCOL
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
PRINT_DOOR_MAP:
	MOV AL,DOORC
	MOV COR, AL
	
CALL_PRINT_PIXEL_MAP:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
	
RESETA_INICIO_MAPA:
	MOV AX, STARTY
	MOV LINHA, AX
	MOV AX, STARTX
	MOV COLUNA, AX
	MOV AX, QUADSIZE_X
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, QUADSIZE_X
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_MAP
	
DESCE_MAP:
	CMP QUADLIN, 20
	JE CABO_MAP
	INC QUADLIN
	MOV QUADCOL, 0
	INC MATRIZ
	JMP RESETA_INICIO_MAPA
	
CABO_MAP:
	RET
	
PRINT_MAP ENDP
;-----------------------------------------------------------------------------PRINT MAP------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MAP COPY-------------------------------------------------------------------------;
COPY_MAP0 PROC
	;MOV CX, 419
	MOV BX, 0
COPY_LOOP_MAP0:
	MOV AL, [MAP0 + BX]
	MOV [MAPA + BX], AL
	MOV [MAPA_CMP + BX], 0
	;DEC CX
	INC BX
	CMP BX, 417
	JNE COPY_LOOP_MAP0
	RET
COPY_MAP0 ENDP

COPY_MAP1 PROC
	;MOV CX, 419
	MOV BX, 0
COPY_LOOP_MAP1:
	MOV AL, [MAP1 + BX]
	MOV [MAPA + BX], AL
	MOV [MAPA_CMP + BX], 0
	;DEC CX
	INC BX
	CMP BX, 417
	JNE COPY_LOOP_MAP1
	RET
COPY_MAP1 ENDP

COPY_MAP2 PROC
	;MOV CX, 419
	MOV BX, 0
COPY_LOOP_MAP2:
	MOV AL, [MAP2 + BX]
	MOV [MAPA + BX], AL
	MOV [MAPA_CMP + BX], 0
	;DEC CX
	INC BX
	CMP BX, 417
	JNE COPY_LOOP_MAP2
	RET
COPY_MAP2 ENDP
;-----------------------------------------------------------------------------MAP COPY-------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MAP SELECTION--------------------------------------------------------------------;
MAP_SELECTION PROC
	MOV WHICH_MAP, 0
RESET_MAP_SELECTION:
	CMP WHICH_MAP, 0
	JE	IS_MAP0
	CMP WHICH_MAP, 1
	JE	IS_MAP1
	CMP WHICH_MAP, 2
	JE	IS_MAP2
	
IS_MAP0:
	CALL COPY_MAP0
	MOV COR, 020H
	MOV WALLC, 020H
	MOV DOORC, 04FH
	JMP PRINT_MAP_HERE
IS_MAP1:
	CALL COPY_MAP1
	MOV COR, 033H
	MOV WALLC, 033H
	MOV DOORC, 07AH
	JMP PRINT_MAP_HERE
IS_MAP2:
	CALL COPY_MAP2
	MOV COR, 028H
	MOV WALLC, 028H
	MOV DOORC, 0B8H
	JMP PRINT_MAP_HERE
PRINT_MAP_HERE:
	CALL LIMPA_TELA
	
	;---------------------------BORDA
	MOV QUADSIZE_X, 79		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 0
	MOV LINHA, 0
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
	
	;---------------------------BORDA
	MOV QUADSIZE_X, 0		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 537
	MOV LINHA, 0
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
	
	CALL MINIMAP_SCREEN
	
	MOV QUADSIZE_X, 27
	MOV STARTX, 17
	MOV STARTY, 17
	CALL PRINT_MAP
	
PRINT_MAP_HERE2:
	MOV AH, 6H
	MOV DL, 255
	INT 21H
	JZ	PRINT_MAP_HERE2
	CMP AL, 1BH
	JE QUIT_MAP_SELECTION
	CMP AL,77H;CIMA - w
	JE CHOOSE_MAP_SELECTION_CIMA
	CMP AL,73H;BAIXO - s
	JE CHOOSE_MAP_SELECTION_BAIXO
	CMP AL,0DH
	JNZ	PRINT_MAP_HERE2
;--------START THE GAME----------;
	CALL LIMPA_TELA
;---------------------------BORDA
	MOV QUADSIZE_X, 79		
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 0
	MOV LINHA, 0
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	
	
;---------------------------BORDA
	MOV QUADSIZE_X, 0		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 537
	MOV LINHA, 0
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
;---------------------------MAPA
	MOV QUADSIZE_X, 27
	MOV STARTX, 17
	MOV STARTY, 17
	CALL PRINT_MAP
	RET
;--------START THE GAME----------;
QUIT_MAP_SELECTION:
	MOV QUIT_FLAG, 1
	RET
CHOOSE_MAP_SELECTION_CIMA:
	CMP WHICH_MAP,0
	JE PRINT_MAP_HERE2_JMP
	DEC WHICH_MAP
	JMP RESET_MAP_SELECTION
CHOOSE_MAP_SELECTION_BAIXO:
	CMP WHICH_MAP,2
	JE PRINT_MAP_HERE2_JMP
	INC WHICH_MAP
	JMP RESET_MAP_SELECTION
	
PRINT_MAP_HERE2_JMP:
	JMP PRINT_MAP_HERE2
MAP_SELECTION ENDP
;-----------------------------------------------------------------------------MAP SELECTION--------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MINI MAP SCREEN------------------------------------------------------------------;
MINIMAP_SCREEN PROC
	MOV COUNTING_MAP, 0
	MOV QUADSIZE_X, 5
	MOV STARTX, 625

CMP_COUNTING_MAP:
	CMP COUNTING_MAP, 0
	JNE CMP_MAP1
	CALL COPY_MAP0
	MOV COR, 020H
	MOV WALLC, 020H
	MOV DOORC, 04FH
	MOV STARTY, 30
	JMP PRINT_MINI_MAP
CMP_MAP1:
	CMP COUNTING_MAP, 1
	JNE CMP_MAP2
	CALL COPY_MAP1
	MOV COR, 033H
	MOV WALLC, 033H
	MOV DOORC, 07AH
	MOV STARTY, 230
	JMP PRINT_MINI_MAP
CMP_MAP2:
	CMP COUNTING_MAP, 2
	JNE FIM_PRINT_MINI_MAP
	CALL COPY_MAP2
	MOV COR, 028H
	MOV WALLC, 028H
	MOV DOORC, 0B8H
	MOV STARTY, 430
	JMP PRINT_MINI_MAP
	
PRINT_MINI_MAP:
	MOV AX, COUNTING_MAP
	CMP WHICH_MAP, AX
	JE MINI_MAP_PRINT
	MOV COR, 0FH
	MOV WALLC, 0FH
	MOV DOORC, 0FH
	
MINI_MAP_PRINT:
	CALL PRINT_MAP
	MOV AX, STARTY
	MOV LINHAAUX, AX
	ADD LINHAAUX, 125
	CALL PRINT_DIFFICULTY
	INC COUNTING_MAP
	JMP CMP_COUNTING_MAP
	
FIM_PRINT_MINI_MAP:
	CMP WHICH_MAP, 0
	JNZ CHECK_FINAL_MAP1
	MOV COR, 020H
	MOV WALLC, 020H
	MOV DOORC, 04FH
	CALL COPY_MAP0
	RET
CHECK_FINAL_MAP1:
	CMP WHICH_MAP, 1
	JNZ CHECK_FINAL_MAP2
	MOV COR, 033H
	MOV WALLC, 033H
	MOV DOORC, 07AH
	CALL COPY_MAP1
	RET
CHECK_FINAL_MAP2:
	MOV COR, 028H
	MOV WALLC, 028H
	MOV DOORC, 0B8H
	CALL COPY_MAP2
	RET

MINIMAP_SCREEN ENDP
;-----------------------------------------------------------------------------MINI MAP SCREEN------------------------------------------------------------------;
;#####################################################################################################################################################################################;
;#############################################################################---------MAPA---------##################################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;############################################################################---------PRINTS---------#################################################################################;
;#####################################################################################################################################################################################;
;-----------------------------------------------------------------------------PRINT QUAD-----------------------------------------------------------------------;
PRINT_QUAD PROC		;PARAMETERS (MOV COR, NUMERO; MOV QUADSIZE, SIZE - 1; MOV LINHA, NUMERO; MOV COLUNA, NUMERO)
	MOV CX, COLUNA
	ADD CX, QUADSIZE
	MOV COLMAIS, CX
	MOV DX, LINHA
	ADD DX, QUADSIZE
	MOV LINMAIS, DX

PRINT:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV AL, cor
	MOV AH, 0CH
	INT 10H
	
	CMP CX, COLMAIS
	JE 	DESCELINHA
	INC COLUNA
	JMP PRINT
DESCELINHA:
	CMP DX, LINMAIS
	JE PRINTOU
	INC LINHA
	MOV BX, QUADSIZE
	SUB COLUNA, BX
	JMP PRINT
PRINTOU:
	RET
PRINT_QUAD ENDP
;-----------------------------------------------------------------------------PRINT QUAD-----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT WIRE QUAD------------------------------------------------------------------;
PRINT_WIRE_QUAD PROC		;PARAMETERS (QUADSIZE_X = XSIZE; QUADSIZE_Y = YSIZE - 1; COLUNA = INICIAL PIX X; LINHA = INICIAL PIX Y; COR)

	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV STARTX, CX
	MOV STARTY, DX
	
UP_COLUMN:
	MOV BX, STARTX
	MOV COLUNA, BX
	MOV AX, QUADCOL
	MOV BX, QUADSIZE
	INC BX
	MUL BX
	ADD COLUNA, AX
	CALL PRINT_QUAD
	MOV BX, QUADSIZE_X
	CMP QUADCOL, BX
	JE GOTO_RGT_LINE
	INC QUADCOL
	MOV BX, STARTY
	MOV LINHA, BX
	JMP UP_COLUMN
	
GOTO_RGT_LINE:
	MOV BX, STARTX
	MOV COLUNA, BX
	MOV BX, STARTY
	MOV LINHA, BX
	MOV BX, QUADSIZE
	INC BX
	MOV AX, QUADCOL
	MUL BX
	ADD COLUNA, AX
	MOV AX, QUADLIN
	MUL BX
	ADD LINHA, AX
	CALL PRINT_QUAD
	MOV BX, QUADSIZE_Y
	CMP QUADLIN, BX
	JE GOTO_DWN_COLUMN
	INC QUADLIN
	JMP GOTO_RGT_LINE
	
GOTO_DWN_COLUMN:
	MOV BX, STARTX
	MOV COLUNA, BX
	MOV BX, STARTY
	MOV LINHA, BX
	MOV BX, QUADSIZE
	INC BX
	MOV AX, QUADCOL
	MUL BX
	ADD COLUNA, AX
	MOV AX, QUADLIN
	MUL BX
	ADD LINHA, AX
	CALL PRINT_QUAD
	CMP QUADCOL, 0
	JE GOTO_LFT_LINE
	DEC QUADCOL
	JMP GOTO_DWN_COLUMN
	
GOTO_LFT_LINE:
	MOV BX, STARTX
	MOV COLUNA, BX
	MOV BX, STARTY
	MOV LINHA, BX
	MOV BX, QUADSIZE
	INC BX
	MOV AX, QUADCOL
	MUL BX
	ADD COLUNA, AX
	MOV AX, QUADLIN
	MUL BX
	ADD LINHA, AX
	CALL PRINT_QUAD
	CMP QUADLIN, 0
	JE FIM_WIRE_QUAD
	DEC QUADLIN
	JMP GOTO_LFT_LINE
	
FIM_WIRE_QUAD:
	RET
PRINT_WIRE_QUAD ENDP
;-----------------------------------------------------------------------------PRINT WIRE QUAD------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------RESET PIX------------------------------------------------------------------------;
RESET_PIX PROC
	MOV COLUNA, 17
	MOV LINHA, 17
	MOV AX, 27
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 27
	MUL QUADCOL
	ADD COLUNA, AX
	RET
RESET_PIX ENDP
;-----------------------------------------------------------------------------RESET PIX------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT PAC------------------------------------------------------------------------;
PRINT_PAC_ESTAT PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	MOV COR, 0EH
	CMP PACMAN_LOOKING_AT,1
	JE P_PAC_E_UP
	CMP PACMAN_LOOKING_AT,2
	JE P_PAC_E_RGT
	CMP PACMAN_LOOKING_AT,3
	JE P_PAC_E_DWN_AUX
	CMP PACMAN_LOOKING_AT,4
	JE P_PAC_E_LFT_AUX
	
;----------------------------------------------------------------------------------UP
P_PAC_E_UP:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, MATPAC
	CMP PAC_UP[BX], 1
	JE PAC_PIXEL_UP
	MOV AL, 0
	MOV AH, 0CH ; put pixel
	INT 10H
    JMP CHECK_EOL_PACMAN_UP
	
PAC_PIXEL_UP:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H
	
CHECK_EOL_PACMAN_UP:
	CMP CX, LIMPACX
	JE 	PAC_JLINE_UP
	INC COLUNA
	INC MATPAC
	JMP P_PAC_E_UP
	
PAC_JLINE_UP:
	CMP DX, LIMPACY
	JE	PAC_E_FIM_UP
	SUB COLUNA, 26
	INC LINHA
	INC MATPAC
	INC MATPAC
	JMP P_PAC_E_UP
	
PAC_E_FIM_UP:
	CMP MATPAC, 2915
	JL	RETORNA1
	MOV MATPAC, 0
	RET
	
P_PAC_E_DWN_AUX:
	JMP P_PAC_E_DWN
P_PAC_E_LFT_AUX:
	JMP P_PAC_E_LFT
	
;----------------------------------------------------------------------------------RIGHT
P_PAC_E_RGT:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, MATPAC
	CMP PAC_RGT[BX], 1
	JE PAC_PIXEL_RGT
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
    JMP CHECK_EOL_PACMAN_RGT
	
PAC_PIXEL_RGT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H
	
CHECK_EOL_PACMAN_RGT:
	CMP CX, LIMPACX
	JE 	PAC_JLINE_RGT
	INC COLUNA
	INC MATPAC
	JMP P_PAC_E_RGT
	
PAC_JLINE_RGT:
	CMP DX, LIMPACY
	JE	PAC_E_FIM_RGT
	SUB COLUNA, 26
	INC LINHA
	INC MATPAC
	INC MATPAC
	JMP P_PAC_E_RGT
	
PAC_E_FIM_RGT:
	CMP MATPAC, 2915
	JL	RETORNA1
	MOV MATPAC, 0
	RET
	
RETORNA1:
	JMP RETORNA

;----------------------------------------------------------------------------------DOWN
P_PAC_E_DWN:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, MATPAC
	CMP PAC_DWN[BX], 1
	JE PAC_PIXEL_DWN
	MOV AL, 0
	MOV AH, 0CH ; put pixel
	INT 10H
    JMP CHECK_EOL_PACMAN_DWN
	
PAC_PIXEL_DWN:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H
	
CHECK_EOL_PACMAN_DWN:
	CMP CX, LIMPACX
	JE 	PAC_JLINE_DWN
	INC COLUNA
	INC MATPAC
	JMP P_PAC_E_DWN
	
PAC_JLINE_DWN:
	CMP DX, LIMPACY
	JE	PAC_E_FIM_DWN
	SUB COLUNA, 26
	INC LINHA
	INC MATPAC
	INC MATPAC
	JMP P_PAC_E_DWN
	
PAC_E_FIM_DWN:
	CMP MATPAC, 2915
	JL	RETORNA
	MOV MATPAC, 0
	RET

;----------------------------------------------------------------------------------LEFT
P_PAC_E_LFT:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, MATPAC
	CMP PAC_LFT[BX], 1
	JE PAC_PIXEL_LFT
	MOV AL, 0
	MOV AH, 0CH ; put pixel
	INT 10H
    JMP CHECK_EOL_PACMAN_LFT
	
PAC_PIXEL_LFT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H
	
CHECK_EOL_PACMAN_LFT:
	CMP CX, LIMPACX
	JE 	PAC_JLINE_LFT
	INC COLUNA
	INC MATPAC
	JMP P_PAC_E_LFT
	
PAC_JLINE_LFT:
	CMP DX, LIMPACY
	JE	PAC_E_FIM_LFT
	SUB COLUNA, 26
	INC LINHA
	INC MATPAC
	INC MATPAC
	JMP P_PAC_E_LFT
	
PAC_E_FIM_LFT:
	CMP MATPAC, 2915
	JL	RETORNA
	MOV MATPAC, 0
	RET
	
RETORNA:
	INC MATPAC
	INC MATPAC
	RET
PRINT_PAC_ESTAT ENDP
;-----------------------------------------------------------------------------PRINT PAC------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT PAC DEAD-------------------------------------------------------------------;
PRINT_PAC_DEAD PROC
	MOV CX, COLUNA
	MOV DX, LINHA
	PUSH CX
	PUSH DX
	MOV MATPAC, 0
	MOV MATDEADPAC, 0
	MOV QUADCOL_LIFE, 0
	MOV QUADLIN_LIFE, 0
DEAD_PAC_COMPARE:
	MOV BX, MATPAC
	CMP BX, WHERE_IS_PACMAN
	JE DEAD_PAC
	CMP QUADCOL_LIFE, 19
	JE DESCE_DEAD_PAC
	INC MATPAC
	INC QUADCOL_LIFE
	JMP DEAD_PAC_COMPARE
	
DESCE_DEAD_PAC:
	CMP QUADLIN_LIFE, 19
	JE FIM_DEAD_PAC_MAT
	MOV QUADCOL_LIFE, 0
	INC QUADLIN_LIFE
	INC MATPAC
	JMP DEAD_PAC_COMPARE

FIM_DEAD_PAC_MAT:
	MOV MATPAC, 0
	MOV QUADCOL_LIFE, 0
	MOV QUADLIN_LIFE, 0
	MOV DELAY_TIME, 3	;30
	CALL DELAY
	CMP MATDEADPAC, 2186;2915
	JL DEAD_PAC_COMPARE
	SUB COLUNA, 26
	SUB LINHA, 26
	MOV QUADSIZE, 26
	MOV COR, 0H
	CALL PRINT_QUAD
	MOV DELAY_TIME, 3	;30
	CALL DELAY
	POP DX
	POP CX
	MOV LINHA, DX
	MOV COLUNA, CX
	RET
	
DEAD_PAC:
	MOV LINHA, 17
	MOV COLUNA, 17
	MOV AX, QUADCOL_LIFE
	MOV CX, 27
	MUL CX
	ADD COLUNA, AX
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV AX, QUADLIN_LIFE
	MOV DX, 27
	MUL DX
	ADD LINHA, AX
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
MAT_DEAD_PAC_COMPARE:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, MATDEADPAC
	CMP [PAC_UP_DEAD + BX], 1
	JE PRINT_PAC_DEAD_PIX
	MOV AL, 0H
	MOV AH, 0CH
	INT 10H
	CMP CX, LIMPACX
	JE DESCE_PIX_PAC_DEAD
	INC COLUNA
	INC MATDEADPAC
	JMP MAT_DEAD_PAC_COMPARE

RETURN_DEAD_PAC_COMPARE1:
	JMP FIM_DEAD_PAC_MAT
	
PRINT_PAC_DEAD_PIX:
	MOV AL, 0EH
	MOV AH, 0CH
	INT 10H
	INC MATDEADPAC
	CMP CX, LIMPACX
	JE DESCE_PIX_PAC_DEAD
	INC COLUNA
	JMP MAT_DEAD_PAC_COMPARE
	
DESCE_PIX_PAC_DEAD:
	CMP DX, LIMPACY
	JE FIM_PIX_DEAD_PAC_MAT
	SUB COLUNA, 26
	INC LINHA
	INC MATDEADPAC
	INC MATDEADPAC
	JMP MAT_DEAD_PAC_COMPARE
	
FIM_PIX_DEAD_PAC_MAT:
	INC MATDEADPAC
	JMP RETURN_DEAD_PAC_COMPARE1
	
PRINT_PAC_DEAD ENDP
;-----------------------------------------------------------------------------PRINT PAC DEAD-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT POINT----------------------------------------------------------------------;
PRINT_POINT PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	MOV COR, 59H
	
PONTOS_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP PONTOS[BX], 1
	JE PONTOS_PIX_PRINT
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_PONTO
	
PONTOS_PIX_PRINT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H

CHECK_EOL_PONTO:
	CMP CX, LIMPACX
	JE 	PONTO_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP PONTOS_PIX_PRINT_CHECK

PONTO_NXL:
	CMP DX, LIMPACY
	JE	PONTOS_FIM
	SUB COLUNA, 26
	INC LINHA
	INC BUFFERMAT
	INC BUFFERMAT
	JMP PONTOS_PIX_PRINT_CHECK
	
PONTOS_FIM:
	MOV BUFFERMAT,0
	RET
	
PRINT_POINT ENDP
;-----------------------------------------------------------------------------PRINT POINT----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT POINT----------------------------------------------------------------------;
PRINT_FRUIT PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
FRUIT_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP [FRUTA + BX], 1
	JE PRINT_FRUIT_RED
	CMP [FRUTA + BX], 2
	JE PRINT_FUIT_BROWN
	CMP [FRUTA + BX], 3
	JE PRINT_FRUIT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_FRUIT
	
PRINT_FRUIT_RED:
	MOV AL, 28H
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_FRUIT

PRINT_FUIT_BROWN:
	MOV AL, 0BBH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_FRUIT

PRINT_FRUIT_WHITE:
	MOV AL, 1FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_FRUIT

CHECK_EOL_FRUIT:
	CMP CX, LIMPACX
	JE 	FRUIT_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP FRUIT_PIX_PRINT_CHECK
	
FRUIT_NXL:
	CMP DX, LIMPACY
	JE	FRUIT_FIM
	SUB COLUNA, 26
	INC LINHA
	INC BUFFERMAT
	INC BUFFERMAT
	JMP FRUIT_PIX_PRINT_CHECK
	
FRUIT_FIM:
	MOV BUFFERMAT,0
	RET
	
PRINT_FRUIT ENDP
;-----------------------------------------------------------------------------PRINT POINT----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT POWERUP--------------------------------------------------------------------;
PRINT_POWERUP PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	MOV COR, 0FH
	
POWERUP_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP POWERUP[BX], 1
	JE POWERUP_PIX_PRINT
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_POWERUP
	
POWERUP_PIX_PRINT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H

CHECK_EOL_POWERUP:
	CMP CX, LIMPACX
	JE 	POWERUP_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP POWERUP_PIX_PRINT_CHECK

POWERUP_NXL:
	CMP DX, LIMPACY
	JE	POWERUP_FIM
	SUB COLUNA, 26
	INC LINHA
	INC BUFFERMAT
	INC BUFFERMAT
	JMP POWERUP_PIX_PRINT_CHECK
POWERUP_FIM:
	MOV BUFFERMAT,0
	RET
PRINT_POWERUP ENDP
;-----------------------------------------------------------------------------PRINT POWERUP--------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT GHOST----------------------------------------------------------------------;
PRINT_GHOST PROC
	CMP WHICH_GHOST, 0AH
	JE PRINT_RED_GHOST_JMP
	CMP WHICH_GHOST, 0CH
	JE PRINT_PINK_GHOST_JMP
	CMP WHICH_GHOST, 0BH
	JE PRINT_ORAN_GHOST_JMP
	CMP WHICH_GHOST, 0DH
	JE PRINT_CYAN_GHOST_JMP
	
PRINT_RED_GHOST_JMP:
	JMP PRINT_RED_GHOST
	
PRINT_PINK_GHOST_JMP:
	JMP PRINT_PINK_GHOST
	
PRINT_ORAN_GHOST_JMP:
	JMP PRINT_ORAN_GHOST
	
PRINT_CYAN_GHOST_JMP:
	JMP PRINT_CYAN_GHOST
	
PRINT_RED_GHOST:
	CMP RED_GHOST_LOOKING_AT, 0
	JE GHOST_LOOKING_UP
	CMP RED_GHOST_LOOKING_AT, 1
	JE GHOST_LOOKING_RGT
	CMP RED_GHOST_LOOKING_AT, 2
	JE GHOST_LOOKING_DWN
	CMP RED_GHOST_LOOKING_AT, 3
	JE GHOST_LOOKING_LFT
	
PRINT_PINK_GHOST:
	CMP PINK_GHOST_LOOKING_AT, 0
	JE GHOST_LOOKING_UP
	CMP PINK_GHOST_LOOKING_AT, 1
	JE GHOST_LOOKING_RGT
	CMP PINK_GHOST_LOOKING_AT, 2
	JE GHOST_LOOKING_DWN
	CMP PINK_GHOST_LOOKING_AT, 3
	JE GHOST_LOOKING_LFT
	
PRINT_ORAN_GHOST:
	CMP ORAN_GHOST_LOOKING_AT, 0
	JE GHOST_LOOKING_UP
	CMP ORAN_GHOST_LOOKING_AT, 1
	JE GHOST_LOOKING_RGT
	CMP ORAN_GHOST_LOOKING_AT, 2
	JE GHOST_LOOKING_DWN
	CMP ORAN_GHOST_LOOKING_AT, 3
	JE GHOST_LOOKING_LFT
	
	
PRINT_CYAN_GHOST:
	CMP CYAN_GHOST_LOOKING_AT, 0
	JE GHOST_LOOKING_UP
	CMP CYAN_GHOST_LOOKING_AT, 1
	JE GHOST_LOOKING_RGT
	CMP CYAN_GHOST_LOOKING_AT, 2
	JE GHOST_LOOKING_DWN
	CMP CYAN_GHOST_LOOKING_AT, 3
	JE GHOST_LOOKING_LFT
	
GHOST_LOOKING_UP:
	CALL PRINT_GHOST_UP
	RET
GHOST_LOOKING_RGT:
	CALL PRINT_GHOST_RIGHT
	RET
GHOST_LOOKING_DWN:
	CALL PRINT_GHOST_DOWN
	RET
GHOST_LOOKING_LFT:
	CALL PRINT_GHOST_LEFT
	RET
PRINT_GHOST ENDP
;-----------------------------------------------------------------------------PRINT GHOST----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT EYE------------------------------------------------------------------------;
PRINT_EYE PROC		;NOVO
	CMP WHERE_IS_RED_EYE, BX
	JE IS_RED_EYE
	CMP WHERE_IS_PINK_EYE, BX
	JE IS_PINK_EYE
	CMP WHERE_IS_ORAN_EYE, BX
	JE IS_ORAN_EYE
	CMP WHERE_IS_CYAN_EYE, BX
	JE IS_CYAN_EYE

IS_RED_EYE:
	MOV WHICH_EYE, 0AH
	JMP WHICH_EYE_SWITCH

IS_PINK_EYE:
	MOV WHICH_EYE, 0CH
	JMP WHICH_EYE_SWITCH

IS_ORAN_EYE:
	MOV WHICH_EYE, 0BH
	JMP WHICH_EYE_SWITCH

IS_CYAN_EYE:
	MOV WHICH_EYE, 0DH
	JMP WHICH_EYE_SWITCH


WHICH_EYE_SWITCH:
	CMP WHICH_EYE, 0AH
	JE PRINT_RED_EYE_JMP
	CMP WHICH_EYE, 0CH
	JE PRINT_PINK_EYE_JMP
	CMP WHICH_EYE, 0BH
	JE PRINT_ORAN_EYE_JMP
	CMP WHICH_EYE, 0DH
	JE PRINT_CYAN_EYE_JMP
	
PRINT_RED_EYE_JMP:
	JMP PRINT_RED_EYE
	
PRINT_PINK_EYE_JMP:
	JMP PRINT_PINK_EYE
	
PRINT_ORAN_EYE_JMP:
	JMP PRINT_ORAN_EYE
	
PRINT_CYAN_EYE_JMP:
	JMP PRINT_CYAN_EYE
	
PRINT_RED_EYE:
	CMP RED_EYE_LOOKING_AT, 0
	JE EYE_LOOKING_UP
	CMP RED_EYE_LOOKING_AT, 1
	JE EYE_LOOKING_RGT
	CMP RED_EYE_LOOKING_AT, 2
	JE EYE_LOOKING_DWN
	CMP RED_EYE_LOOKING_AT, 3
	JE EYE_LOOKING_LFT
	
PRINT_PINK_EYE:
	CMP PINK_EYE_LOOKING_AT, 0
	JE EYE_LOOKING_UP
	CMP PINK_EYE_LOOKING_AT, 1
	JE EYE_LOOKING_RGT
	CMP PINK_EYE_LOOKING_AT, 2
	JE EYE_LOOKING_DWN
	CMP PINK_EYE_LOOKING_AT, 3
	JE EYE_LOOKING_LFT
	
PRINT_ORAN_EYE:
	CMP ORAN_EYE_LOOKING_AT, 0
	JE EYE_LOOKING_UP
	CMP ORAN_EYE_LOOKING_AT, 1
	JE EYE_LOOKING_RGT
	CMP ORAN_EYE_LOOKING_AT, 2
	JE EYE_LOOKING_DWN
	CMP ORAN_EYE_LOOKING_AT, 3
	JE EYE_LOOKING_LFT
	
	
PRINT_CYAN_EYE:
	CMP CYAN_EYE_LOOKING_AT, 0
	JE EYE_LOOKING_UP
	CMP CYAN_EYE_LOOKING_AT, 1
	JE EYE_LOOKING_RGT
	CMP CYAN_EYE_LOOKING_AT, 2
	JE EYE_LOOKING_DWN
	CMP CYAN_EYE_LOOKING_AT, 3
	JE EYE_LOOKING_LFT
	
EYE_LOOKING_UP:
	CALL PRINT_EYE_UP
	RET
EYE_LOOKING_RGT:
	CALL PRINT_EYE_RIGHT
	RET
EYE_LOOKING_DWN:
	CALL PRINT_EYE_DOWN
	RET
EYE_LOOKING_LFT:
	CALL PRINT_EYE_LEFT
	RET
PRINT_EYE ENDP
;-----------------------------------------------------------------------------PRINT EYE------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT EYE LEFT-------------------------------------------------------------------;
PRINT_EYE_LEFT PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
LEFT_EYE_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_LEFT[BX], 3
	JE LEFT_EYE_PIX_PRINT
	CMP FANTASMA_LEFT[BX], 2
	JE LEFT_EYE_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_LEFT_EYE_EOL
	
LEFT_EYE_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_LEFT_EYE_EOL
	
LEFT_EYE_PIX_PRINT:
	MOV AL, 35H
	MOV AH, 0CH
	INT 10H

CHECK_LEFT_EYE_EOL:
	CMP CX, LIMPACX
	JE 	LEFT_EYE_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP LEFT_EYE_PIX_PRINT_CHECK

LEFT_EYE_NXL:
	CMP DX, LIMPACY
	JE	LEFT_EYE_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP LEFT_EYE_PIX_PRINT_CHECK
LEFT_EYE_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_EYE_LEFT ENDP
;-----------------------------------------------------------------------------PRINT EYE LEFT-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT EYE RIGHT------------------------------------------------------------------;
PRINT_EYE_RIGHT PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
RIGHT_EYE_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_RIGHT[BX], 3
	JE RIGHT_EYE_PIX_PRINT
	CMP FANTASMA_RIGHT[BX], 2
	JE RIGHT_EYE_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_RIGHT_EYE_EOL
	
RIGHT_EYE_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_RIGHT_EYE_EOL
	
RIGHT_EYE_PIX_PRINT:
	MOV AL, 35H
	MOV AH, 0CH
	INT 10H

CHECK_RIGHT_EYE_EOL:
	CMP CX, LIMPACX
	JE 	RIGHT_EYE_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP RIGHT_EYE_PIX_PRINT_CHECK

RIGHT_EYE_NXL:
	CMP DX, LIMPACY
	JE	RIGHT_EYE_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP RIGHT_EYE_PIX_PRINT_CHECK
RIGHT_EYE_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_EYE_RIGHT ENDP
;-----------------------------------------------------------------------------PRINT EYE RIGHT------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT EYE UP---------------------------------------------------------------------;
PRINT_EYE_UP PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
UP_EYE_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_UP[BX], 3
	JE UP_EYE_PIX_PRINT
	CMP FANTASMA_UP[BX], 2
	JE UP_EYE_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_UP_EYE_EOL
	
UP_EYE_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_UP_EYE_EOL
	
UP_EYE_PIX_PRINT:
	MOV AL, 35H
	MOV AH, 0CH
	INT 10H

CHECK_UP_EYE_EOL:
	CMP CX, LIMPACX
	JE 	UP_EYE_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP UP_EYE_PIX_PRINT_CHECK

UP_EYE_NXL:
	CMP DX, LIMPACY
	JE	UP_EYE_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP UP_EYE_PIX_PRINT_CHECK
UP_EYE_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_EYE_UP ENDP
;-----------------------------------------------------------------------------PRINT EYE UP---------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT EYE DOWN-------------------------------------------------------------------;
PRINT_EYE_DOWN PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
DOWN_EYE_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_DOWN[BX], 3
	JE DOWN_EYE_PIX_PRINT
	CMP FANTASMA_DOWN[BX], 2
	JE DOWN_EYE_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_DOWN_EYE_EOL
	
DOWN_EYE_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_DOWN_EYE_EOL
	
DOWN_EYE_PIX_PRINT:
	MOV AL, 35H
	MOV AH, 0CH
	INT 10H

CHECK_DOWN_EYE_EOL:
	CMP CX, LIMPACX
	JE 	DOWN_EYE_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP DOWN_EYE_PIX_PRINT_CHECK

DOWN_EYE_NXL:
	CMP DX, LIMPACY
	JE	DOWN_EYE_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP DOWN_EYE_PIX_PRINT_CHECK
DOWN_EYE_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_EYE_DOWN ENDP
;-----------------------------------------------------------------------------PRINT EYE DOWN-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT GHOST LEFT-----------------------------------------------------------------;
PRINT_GHOST_LEFT PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
LEFT_GHOST_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_LEFT[BX], 1
	JE LEFT_GHOST_PIX_PRINT
	CMP FANTASMA_LEFT[BX], 2
	JE LEFT_GHOST_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_LEFT_GHOST_EOL
	
LEFT_GHOST_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_LEFT_GHOST_EOL
	
LEFT_GHOST_PIX_PRINT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H

CHECK_LEFT_GHOST_EOL:
	CMP CX, LIMPACX
	JE 	LEFT_GHOST_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP LEFT_GHOST_PIX_PRINT_CHECK

LEFT_GHOST_NXL:
	CMP DX, LIMPACY
	JE	LEFT_GHOST_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP LEFT_GHOST_PIX_PRINT_CHECK
LEFT_GHOST_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_GHOST_LEFT ENDP
;-----------------------------------------------------------------------------PRINT GHOST LEFT-----------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT GHOST RIGHT----------------------------------------------------------------;
PRINT_GHOST_RIGHT PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
RIGHT_GHOST_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_RIGHT[BX], 1
	JE RIGHT_GHOST_PIX_PRINT
	CMP FANTASMA_RIGHT[BX], 2
	JE RIGHT_GHOST_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_RIGHT_GHOST_EOL
	
RIGHT_GHOST_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_RIGHT_GHOST_EOL
	
RIGHT_GHOST_PIX_PRINT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H

CHECK_RIGHT_GHOST_EOL:
	CMP CX, LIMPACX
	JE 	RIGHT_GHOST_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP RIGHT_GHOST_PIX_PRINT_CHECK

RIGHT_GHOST_NXL:
	CMP DX, LIMPACY
	JE	RIGHT_GHOST_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP RIGHT_GHOST_PIX_PRINT_CHECK
RIGHT_GHOST_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_GHOST_RIGHT ENDP
;-----------------------------------------------------------------------------PRINT GHOST RIGHT----------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT GHOST UP-------------------------------------------------------------------;
PRINT_GHOST_UP PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
UP_GHOST_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_UP[BX], 1
	JE UP_GHOST_PIX_PRINT
	CMP FANTASMA_UP[BX], 2
	JE UP_GHOST_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_UP_GHOST_EOL
	
UP_GHOST_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_UP_GHOST_EOL
	
UP_GHOST_PIX_PRINT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H

CHECK_UP_GHOST_EOL:
	CMP CX, LIMPACX
	JE 	UP_GHOST_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP UP_GHOST_PIX_PRINT_CHECK

UP_GHOST_NXL:
	CMP DX, LIMPACY
	JE	UP_GHOST_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP UP_GHOST_PIX_PRINT_CHECK
UP_GHOST_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_GHOST_UP ENDP
;-----------------------------------------------------------------------------PRINT GHOST UP-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT GHOST DOWN-----------------------------------------------------------------;
PRINT_GHOST_DOWN PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
DOWN_GHOST_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP FANTASMA_DOWN[BX], 1
	JE DOWN_GHOST_PIX_PRINT
	CMP FANTASMA_DOWN[BX], 2
	JE DOWN_GHOST_PIX_PRINT_WHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_DOWN_GHOST_EOL
	
DOWN_GHOST_PIX_PRINT_WHITE:
	MOV AL, 0FH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_DOWN_GHOST_EOL
	
DOWN_GHOST_PIX_PRINT:
	MOV AL, COR
	MOV AH, 0CH
	INT 10H

CHECK_DOWN_GHOST_EOL:
	CMP CX, LIMPACX
	JE 	DOWN_GHOST_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP DOWN_GHOST_PIX_PRINT_CHECK

DOWN_GHOST_NXL:
	CMP DX, LIMPACY
	JE	DOWN_GHOST_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP DOWN_GHOST_PIX_PRINT_CHECK
DOWN_GHOST_FIM:
	MOV BUFFERMAT,0
	RET

PRINT_GHOST_DOWN ENDP
;-----------------------------------------------------------------------------PRINT GHOST DOWN-----------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT SCARED GHOST---------------------------------------------------------------;
PRINT_SCARED_GHOST PROC
	MOV CX, COLUNA
	MOV LIMPACX, CX
	ADD LIMPACX, 26
	MOV DX, LINHA
	MOV LIMPACY, DX
	ADD LIMPACY, 26
	
SCARED_GHOST_PIX_PRINT_CHECK:
	MOV CX, COLUNA
	MOV DX, LINHA
	MOV BX, BUFFERMAT
	CMP SCARED_GHOST[BX], 1
	JE SCARED_GHOST_PIX_PRINT
	CMP SCARED_GHOST[BX], 2
	JE SCARED_GHOST_PIX_PRINTWHITE
	MOV AL, 0
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_SCARED_GHOST
	
SCARED_GHOST_PIX_PRINTWHITE:
	MOV AL, 5BH
	MOV AH, 0CH
	INT 10H
	JMP CHECK_EOL_SCARED_GHOST
	
SCARED_GHOST_PIX_PRINT:
	MOV AL, 09H
	MOV AH, 0CH
	INT 10H

CHECK_EOL_SCARED_GHOST:
	CMP CX, LIMPACX
	JE 	SCARED_GHOST_NXL
	INC COLUNA
	INC BUFFERMAT
	JMP SCARED_GHOST_PIX_PRINT_CHECK

SCARED_GHOST_NXL:
	CMP DX, LIMPACY
	JE	SCARED_GHOST_FIM
	SUB COLUNA, 26
	INC LINHA
	ADD BUFFERMAT, 2
	JMP SCARED_GHOST_PIX_PRINT_CHECK
SCARED_GHOST_FIM:
	MOV BUFFERMAT,0
	RET
PRINT_SCARED_GHOST ENDP
;-----------------------------------------------------------------------------PRINT SCARED GHOST---------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT PAC LIVES------------------------------------------------------------------;
PRINT_PAC_LIVES PROC
	MOV CX, COLUNA
	MOV VALOR_X_ALG, CX
	MOV LINHA, 260
	MOV QUADCOL_LIFE, 0
	MOV QUADLIN_LIFE, 0
	MOV MATRIZ_LIFE, 0
MAT_VERIFIC_PAC_LIVE:	
	MOV BX, MATRIZ_LIFE
	CMP [PAC_LIVE_MAT + BX], 1	
	JE PRINT_PIXEL_PAC_LIVE	
	CMP QUADCOL_LIFE, 10
	JE DESCE_PAC_LIVE	
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_PAC_LIVE	
PRINT_PIXEL_PAC_LIVE:	
	CMP QUADCOL_LIFE, 10
	JE DESCE_PAC_LIVE	
	MOV QUADSIZE, 3
	MOV COR, 0EH
CALL_PRINT_PIXEL_PAC_LIVE: 
	CALL PRINT_QUAD		
	INC QUADCOL_LIFE
	INC MATRIZ_LIFE
RESETA_INICIO_PAC_LIVE:	
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 260
	MOV AX, 4
	MUL QUADLIN_LIFE
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL_LIFE
	ADD COLUNA, AX
	JMP MAT_VERIFIC_PAC_LIVE	
DESCE_PAC_LIVE:	
	CMP QUADLIN_LIFE, 9
	JG CABO_PAC_LIVE	
	INC QUADLIN_LIFE
	MOV QUADCOL_LIFE, 0
	INC MATRIZ_LIFE
	JMP RESETA_INICIO_PAC_LIVE	
CABO_PAC_LIVE: 
	RET
PRINT_PAC_LIVES ENDP
;-----------------------------------------------------------------------------PRINT PAC LIVES------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------ERASE PAC LIVES------------------------------------------------------------------;
ERASE_PAC_LIVES PROC
	MOV LINHA, 260
	MOV COR, 0
	MOV QUADSIZE, 44
	CALL PRINT_QUAD
	RET
ERASE_PAC_LIVES ENDP
;-----------------------------------------------------------------------------ERASE PAC LIVES------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT DIFFICULTY SCREEN----------------------------------------------------------;
PRINT_DIFFICULTY PROC
	MOV AX,LINHAAUX
	MOV LINHA,AX
	MOV QUADSIZE, 4
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV COLUNA,606
	
	CMP COUNTING_MAP,0
	JNE ITS_NOT_THE_DIFFICULTY1
	MOV MATRIZ, 0
	JMP VERIFICA_MAT_DIFFICULTY
ITS_NOT_THE_DIFFICULTY1:
	CMP COUNTING_MAP,1
	JNE ITS_NOT_THE_DIFFICULTY2
	MOV MATRIZ, 175
	JMP VERIFICA_MAT_DIFFICULTY
ITS_NOT_THE_DIFFICULTY2:
	MOV MATRIZ, 350
	
	VERIFICA_MAT_DIFFICULTY:
	MOV BX, MATRIZ
	CMP [DIFFICULTY + BX], 1
	JE LETSPRINT_DIFFICULTY
	INC MATRIZ
	INC QUADCOL
	CMP QUADCOL, 34
	JE DESCE_DIFFICULTY
	JMP RESETA_INICIO_DIFFICULTY
LETSPRINT_DIFFICULTY:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 34
	JE DESCE_DIFFICULTY
RESETA_INICIO_DIFFICULTY:
	MOV COLUNA, 606
	MOV AX,LINHAAUX
	MOV LINHA, AX
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4	
	MUL QUADCOL
	ADD COLUNA, AX
	JMP VERIFICA_MAT_DIFFICULTY
DESCE_DIFFICULTY:
	INC QUADLIN
	CMP QUADLIN, 5
	JE CABO_DIFFICULTY
	MOV QUADCOL, 0
	INC MATRIZ
	JMP RESETA_INICIO_DIFFICULTY
CABO_DIFFICULTY:
	RET
PRINT_DIFFICULTY ENDP
;-----------------------------------------------------------------------------PRINT DIFFICULTY SCREEN----------------------------------------------------------;
;#####################################################################################################################################################################################;
;############################################################################---------PRINTS---------#################################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;###########################################################################---------SIDE MENU---------###############################################################################;
;#####################################################################################################################################################################################;
;-----------------------------------------------------------------------------PRINT GET_READY SIDE MENU-------------------------------------------------------------;
PRINT_GET_READY_SM PROC
	MOV CX, COLUNA
	MOV DX, LINHA
	PUSH CX
	PUSH DX
	MOV DX, QUADLIN
	MOV CX, QUADCOL
	MOV AX, MATRIZ
	PUSH DX
	PUSH CX
	PUSH AX
	
	MOV COLUNA,582
	MOV LINHA,420
	MOV QUADCOL_LIFE, 0
	MOV QUADLIN_LIFE, 0
	MOV MATRIZ_LIFE, 0
	MOV COR, 2AH
VERIFICA_MAT_SMGET_READY:
	MOV BX, MATRIZ_LIFE
	CMP [GET_READY_TXT + BX], 1
	JE LETSPRINT_SMGET_READY	
	CMP QUADCOL_LIFE, 31
	JE DESCE_SMGET_READY
	INC MATRIZ_LIFE
	INC QUADCOL_LIFE
	JMP RESETA_INICIO_MAPA_SMGET_READY
LETSPRINT_SMGET_READY:
	CMP QUADCOL_LIFE, 31
	JE DESCE_SMGET_READY
	MOV QUADSIZE, 5
	CALL PRINT_QUAD
	INC QUADCOL_LIFE
	INC MATRIZ_LIFE
RESETA_INICIO_MAPA_SMGET_READY:
	MOV COLUNA, 582
	MOV LINHA, 420
	MOV AX, 6
	MUL QUADLIN_LIFE
	ADD LINHA, AX
	MOV AX, 6	
	MUL QUADCOL_LIFE
	ADD COLUNA, AX
	JMP VERIFICA_MAT_SMGET_READY
DESCE_SMGET_READY:
	CMP QUADLIN_LIFE, 10
	JG CABO_SMGET_READY
	INC QUADLIN_LIFE
	MOV QUADCOL_LIFE, 0
	INC MATRIZ_LIFE
	JMP RESETA_INICIO_MAPA_SMGET_READY
CABO_SMGET_READY:
	POP AX
	POP CX
	POP DX
	MOV QUADLIN, DX
	MOV QUADCOL, CX
	MOV MATRIZ, AX
	POP DX
	POP CX
	MOV LINHA, DX
	MOV COLUNA, CX
	RET
PRINT_GET_READY_SM ENDP
;-----------------------------------------------------------------------------PRINT GET_READY SIDE MENU-------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------ERASE GET_READY SIDE MENU-------------------------------------------------------------;
ERASE_GET_READY_SM PROC
	MOV CX, COLUNA
	MOV DX, LINHA
	PUSH CX
	PUSH DX
	MOV DX, QUADLIN
	MOV CX, QUADCOL
	MOV AX, MATRIZ
	PUSH DX
	PUSH CX
	PUSH AX
	
	MOV COLUNA,582
	MOV LINHA,420
	MOV QUADCOL_LIFE, 0
	MOV QUADLIN_LIFE, 0
	MOV MATRIZ_LIFE, 0
	MOV COR, 0
ERASE_MAT_SMGET_READY:
	MOV BX, MATRIZ_LIFE
	CMP [GET_READY_TXT + BX], 1
	JE ERASE_SMGET_READY	
	CMP QUADCOL_LIFE, 31
	JE ERASE_DESCE_SMGET_READY
	INC MATRIZ_LIFE
	INC QUADCOL_LIFE
	JMP ERASE_INICIO_MAPA_SMGET_READY
ERASE_SMGET_READY:
	CMP QUADCOL_LIFE, 31
	JE ERASE_DESCE_SMGET_READY
	MOV QUADSIZE, 5
	CALL PRINT_QUAD
	INC QUADCOL_LIFE
	INC MATRIZ_LIFE
ERASE_INICIO_MAPA_SMGET_READY:
	MOV COLUNA, 582
	MOV LINHA, 420
	MOV AX, 6
	MUL QUADLIN_LIFE
	ADD LINHA, AX
	MOV AX, 6	
	MUL QUADCOL_LIFE
	ADD COLUNA, AX
	JMP ERASE_MAT_SMGET_READY
ERASE_DESCE_SMGET_READY:
	CMP QUADLIN_LIFE, 10
	JG ERASE_CABO_SMGET_READY
	INC QUADLIN_LIFE
	MOV QUADCOL_LIFE, 0
	INC MATRIZ_LIFE
	JMP ERASE_INICIO_MAPA_SMGET_READY
ERASE_CABO_SMGET_READY:
	POP AX
	POP CX
	POP DX
	MOV QUADLIN, DX
	MOV QUADCOL, CX
	MOV MATRIZ, AX
	POP DX
	POP CX
	MOV LINHA, DX
	MOV COLUNA, CX
	RET
ERASE_GET_READY_SM ENDP
;-----------------------------------------------------------------------------ERASE GET_READY SIDE MENU-------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT QUIT SIDE MENU-------------------------------------------------------------;
PRINT_QUIT_SM PROC
	MOV CX, COLUNA
	MOV DX, LINHA
	PUSH CX
	PUSH DX
	MOV DX, QUADLIN
	MOV CX, QUADCOL
	MOV AX, MATRIZ
	PUSH DX
	PUSH CX
	PUSH AX
	
	MOV COLUNA,582
	MOV LINHA,420
	MOV QUADCOL_LIFE, 0
	MOV QUADLIN_LIFE, 0
	MOV MATRIZ_LIFE, 0
	MOV COR, 2AH
VERIFICA_MAT_SMQUIT:
	MOV BX, MATRIZ_LIFE
	CMP [QUIT_GAME_TXT + BX], 1
	JE LETSPRINT_SMQUIT	
	CMP QUADCOL_LIFE, 29
	JE DESCE_SMQUIT
	INC MATRIZ_LIFE
	INC QUADCOL_LIFE
	JMP RESETA_INICIO_MAPA_SMQUIT
LETSPRINT_SMQUIT:
	CMP QUADCOL_LIFE, 29
	JE DESCE_SMQUIT
	MOV QUADSIZE, 5
	CALL PRINT_QUAD
	INC QUADCOL_LIFE
	INC MATRIZ_LIFE
RESETA_INICIO_MAPA_SMQUIT:
	MOV COLUNA, 582
	MOV LINHA, 420
	MOV AX, 6
	MUL QUADLIN_LIFE
	ADD LINHA, AX
	MOV AX, 6	
	MUL QUADCOL_LIFE
	ADD COLUNA, AX
	JMP VERIFICA_MAT_SMQUIT
DESCE_SMQUIT:
	CMP QUADLIN_LIFE, 11
	JG CABO_SMQUIT
	INC QUADLIN_LIFE
	MOV QUADCOL_LIFE, 0
	INC MATRIZ_LIFE
	JMP RESETA_INICIO_MAPA_SMQUIT
CABO_SMQUIT:
	POP AX
	POP CX
	POP DX
	MOV QUADLIN, DX
	MOV QUADCOL, CX
	MOV MATRIZ, AX
	POP DX
	POP CX
	MOV LINHA, DX
	MOV COLUNA, CX
	RET
PRINT_QUIT_SM ENDP
;-----------------------------------------------------------------------------PRINT QUIT SIDE MENU-------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------ERASE QUIT SIDE MENU-------------------------------------------------------------;
ERASE_QUIT_SM PROC
	MOV CX, COLUNA
	MOV DX, LINHA
	PUSH CX
	PUSH DX
	MOV DX, QUADLIN
	MOV CX, QUADCOL
	MOV AX, MATRIZ
	PUSH DX
	PUSH CX
	PUSH AX
	
	MOV COLUNA,582
	MOV LINHA,420
	MOV QUADCOL_LIFE, 0
	MOV QUADLIN_LIFE, 0
	MOV MATRIZ_LIFE, 0
	MOV COR, 0
ERASE_MAT_SMQUIT:
	MOV BX, MATRIZ_LIFE
	CMP [QUIT_GAME_TXT + BX], 1
	JE ERASE_SMQUIT	
	CMP QUADCOL_LIFE, 29
	JE ERASE_DESCE_SMQUIT
	INC MATRIZ_LIFE
	INC QUADCOL_LIFE
	JMP ERASE_INICIO_MAPA_SMQUIT
ERASE_SMQUIT:
	CMP QUADCOL_LIFE, 29
	JE ERASE_DESCE_SMQUIT
	MOV QUADSIZE, 5
	CALL PRINT_QUAD
	INC QUADCOL_LIFE
	INC MATRIZ_LIFE
ERASE_INICIO_MAPA_SMQUIT:
	MOV COLUNA, 582
	MOV LINHA, 420
	MOV AX, 6
	MUL QUADLIN_LIFE
	ADD LINHA, AX
	MOV AX, 6	
	MUL QUADCOL_LIFE
	ADD COLUNA, AX
	JMP ERASE_MAT_SMQUIT
ERASE_DESCE_SMQUIT:
	CMP QUADLIN_LIFE, 11
	JG ERASE_CABO_SMQUIT
	INC QUADLIN_LIFE
	MOV QUADCOL_LIFE, 0
	INC MATRIZ_LIFE
	JMP ERASE_INICIO_MAPA_SMQUIT
ERASE_CABO_SMQUIT:
	POP AX
	POP CX
	POP DX
	MOV QUADLIN, DX
	MOV QUADCOL, CX
	MOV MATRIZ, AX
	POP DX
	POP CX
	MOV LINHA, DX
	MOV COLUNA, CX
	RET
ERASE_QUIT_SM ENDP
;-----------------------------------------------------------------------------ERASE QUIT SIDE MENU-------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT SIDE MENU SCORE TEXT-------------------------------------------------------;
SIDEMENU_SCORE PROC
	MOV COLUNA,	582
	MOV LINHA, 40
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
	MOV COR, 0FH
VERIFICA_MAT_SMSCORE:
	MOV BX, MATRIZ
	CMP [SCORE_TXT + BX], 1
	JE LETSPRINT_SMSCORE	
	CMP QUADCOL, 29
	JE DESCE_SMSCORE
	INC MATRIZ
	INC QUADCOL
	JMP RESETA_INICIO_MAPA_SMSCORE
LETSPRINT_SMSCORE:
	CMP QUADCOL, 29
	JE DESCE_SMSCORE
	MOV QUADSIZE, 5
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_MAPA_SMSCORE:
	MOV COLUNA, 582
	MOV LINHA, 40
	MOV AX, 6
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 6	
	MUL QUADCOL
	ADD COLUNA, AX
	JMP VERIFICA_MAT_SMSCORE
DESCE_SMSCORE:
	CMP QUADLIN, 3
	JG CABO_SIDEMENUSCORE
	INC QUADLIN
	MOV QUADCOL, 0
	INC MATRIZ
	JMP RESETA_INICIO_MAPA_SMSCORE
CABO_SIDEMENUSCORE:
	RET
SIDEMENU_SCORE ENDP
;-----------------------------------------------------------------------------PRINT SIDE MENU SCORE TEXT-------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT SIDE MENU LIVES TEXT-------------------------------------------------------;
SIDEMENU_LIVES PROC
	MOV COLUNA,582
	MOV LINHA,205
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
	MOV COR, 0FH
VERIFICA_MAT_SMLIVES:
	MOV BX, MATRIZ
	CMP [LIVES_TXT + BX], 1
	JE LETSPRINT_SMLIVES	
	CMP QUADCOL, 29
	JE DESCE_SMLIVES
	INC MATRIZ
	INC QUADCOL
	JMP RESETA_INICIO_MAPA_SMLIVES
LETSPRINT_SMLIVES:
	CMP QUADCOL, 29
	JE DESCE_SMLIVES
	MOV QUADSIZE, 5
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_MAPA_SMLIVES:
	MOV COLUNA, 582
	MOV LINHA, 205
	MOV AX, 6
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 6	
	MUL QUADCOL
	ADD COLUNA, AX
	JMP VERIFICA_MAT_SMLIVES
DESCE_SMLIVES:
	CMP QUADLIN, 3
	JG CABO_SIDEMENULIVES
	INC QUADLIN
	MOV QUADCOL, 0
	INC MATRIZ
	JMP RESETA_INICIO_MAPA_SMLIVES
CABO_SIDEMENULIVES:
	RET
SIDEMENU_LIVES ENDP
;-----------------------------------------------------------------------------PRINT SIDE MENU LIVES TEXT-------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT SIDE MENU FRUIT TEXT-------------------------------------------------------;
SIDEMENU_FRUIT PROC
	MOV COLUNA, 780
	MOV LINHA, 150
	
	XOR AX, AX
	MOV AL, HOW_MANY_FRUITS
	MOV CX, 35
	MUL CX
	
	SUB COLUNA, AX
	
	CALL PRINT_FRUIT

	RET

SIDEMENU_FRUIT ENDP
;-----------------------------------------------------------------------------PRINT SIDE MENU FRUIT TEXT-------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT SIDE MENU LIVES COUNT------------------------------------------------------;
SIDEMENU_LIVESCOUNT PROC
	MOV CX, COLUNA
	MOV DX, LINHA
	PUSH CX
	PUSH DX
	MOV DX, QUADLIN
	MOV CX, QUADCOL
	MOV AX, MATRIZ
	PUSH DX
	PUSH CX
	PUSH AX
	CMP PAC_LIVES, 2
	JE TWO_LIVES
	CMP PAC_LIVES, 1
	JE ONE_LIVES
	MOV COLUNA, 580
	CALL ERASE_PAC_LIVES
	JMP FIM_PRINT_LIVES
	
TWO_LIVES:
	MOV COLUNA, 645
	CALL PRINT_PAC_LIVES
	
ONE_LIVES:
	CMP PAC_LIVES, 2
	JE PRINT_FIRST_LIVE
	MOV COLUNA, 645
	CALL ERASE_PAC_LIVES
	
PRINT_FIRST_LIVE:
	MOV COLUNA, 585
	CALL PRINT_PAC_LIVES

FIM_PRINT_LIVES:
	POP AX
	POP CX
	POP DX
	MOV QUADLIN, DX
	MOV QUADCOL, CX
	MOV MATRIZ, AX
	POP DX
	POP CX
	MOV LINHA, DX
	MOV COLUNA, CX
	MOV BX, SPAWN_PACMAN
	RET
SIDEMENU_LIVESCOUNT ENDP
;-----------------------------------------------------------------------------PRINT SIDE MENU LIVES COUNT------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------SIDE MENU SCORE COUNT------------------------------------------------------------;
SIDEMENU_SCORENUM PROC
	MOV AX, SCORE_NUM
	MOV CX,10
	XOR DX, DX
	DIV CX
	MOV LSB,DX
	XOR DX, DX
	DIV CX
	MOV SLSB,DX
	XOR DX, DX
	DIV CX
	MOV SMSB,DX
	XOR DX, DX
	DIV CX
	MOV MSB,DX
;----------------------------------------------------------------------------------PRIMEIRO DIGITO
    MOV COLUNA, 727
    MOV CX, COLUNA
    CMP LSB,0
    JE LSB0
    CMP LSB,1
    JE LSB1
    CMP LSB,2
    JE LSB2
    CMP LSB,3
    JE LSB3
    CMP LSB,4
    JE LSB4
    CMP LSB,5
    JE LSB5
    CMP LSB,6
    JE LSB6
    CMP LSB,7
    JE LSB7
    CMP LSB,8
    JE LSB8
    CMP LSB,9
    JE LSB9
LSB0:
    CALL PRINT_0ALG
	JMP SECONDNUMBER
LSB1:
    CALL PRINT_1ALG
    JMP SECONDNUMBER
LSB2:
    CALL PRINT_2ALG
	JMP SECONDNUMBER
LSB3:
    CALL PRINT_3ALG
	JMP SECONDNUMBER
LSB4:
    CALL PRINT_4ALG
	JMP SECONDNUMBER
LSB5:
    CALL PRINT_5ALG
	JMP SECONDNUMBER
LSB6:
    CALL PRINT_6ALG
	JMP SECONDNUMBER
LSB7:
    CALL PRINT_7ALG
	JMP SECONDNUMBER
LSB8:
    CALL PRINT_8ALG
	JMP SECONDNUMBER
LSB9:
    CALL PRINT_9ALG
;----------------------------------------------------------------------------------SEGUNDO DIGITO
SECONDNUMBER:
    MOV COLUNA,679
    MOV CX,COLUNA
    CMP SLSB,0
    JE SLSB0
    CMP SLSB,1
    JE SLSB1
    CMP SLSB,2
    JE SLSB2
    CMP SLSB,3
    JE SLSB3
    CMP SLSB,4
    JE SLSB4
    CMP SLSB,5
    JE SLSB5
    CMP SLSB,6		;AQUI KARAI
    JE SLSB6		;TAVA LSB
    CMP SLSB,7		;AKI TB TAVA LSB, 7
    JE SLSB7
    CMP SLSB,8
    JE SLSB8
    CMP SLSB,9
    JE SLSB9
SLSB0:
    CALL PRINT_0ALG
	JMP THIRDNUMBER
SLSB1:
    CALL PRINT_1ALG
    JMP THIRDNUMBER
SLSB2:
    CALL PRINT_2ALG
	JMP THIRDNUMBER
SLSB3:
    CALL PRINT_3ALG
	JMP THIRDNUMBER
SLSB4:
    CALL PRINT_4ALG
	JMP THIRDNUMBER
SLSB5:
    CALL PRINT_5ALG
	JMP THIRDNUMBER
SLSB6:
    CALL PRINT_6ALG
	JMP THIRDNUMBER
SLSB7:
    CALL PRINT_7ALG
	JMP THIRDNUMBER
SLSB8:
    CALL PRINT_8ALG
	JMP THIRDNUMBER
SLSB9:
    CALL PRINT_9ALG
;----------------------------------------------------------------------------------TERCEIRO DIGITO
THIRDNUMBER:
    MOV COLUNA,631
    MOV CX,COLUNA
    CMP SMSB,0
    JE SMSB0
    CMP SMSB,1
    JE SMSB1
    CMP SMSB,2
    JE SMSB2
    CMP SMSB,3
    JE SMSB3
    CMP SMSB,4
    JE SMSB4
    CMP SMSB,5
    JE SMSB5
    CMP SMSB,6
    JE SMSB6
    CMP SMSB,7
    JE SMSB7
    CMP SMSB,8
    JE SMSB8
    CMP SMSB,9
    JE SMSB9
SMSB0:
    CALL PRINT_0ALG
	JMP FOURTHNUMBER
SMSB1:
    CALL PRINT_1ALG
    JMP FOURTHNUMBER
SMSB2:
    CALL PRINT_2ALG
	JMP FOURTHNUMBER
SMSB3:
    CALL PRINT_3ALG
	JMP FOURTHNUMBER
SMSB4:
    CALL PRINT_4ALG
	JMP FOURTHNUMBER
SMSB5:
    CALL PRINT_5ALG
	JMP FOURTHNUMBER
SMSB6:
    CALL PRINT_6ALG
	JMP FOURTHNUMBER
SMSB7:
    CALL PRINT_7ALG
	JMP FOURTHNUMBER
SMSB8:
    CALL PRINT_8ALG
	JMP FOURTHNUMBER
SMSB9:
    CALL PRINT_9ALG
;----------------------------------------------------------------------------------QUARTO DIGITO
FOURTHNUMBER:
    MOV COLUNA,583
    MOV CX,COLUNA
    CMP MSB,0
    JE MSB0
    CMP MSB,1
    JE MSB1
    CMP MSB,2
    JE MSB2
    CMP MSB,3
    JE MSB3
    CMP MSB,4
    JE MSB4
    CMP MSB,5
    JE MSB5
    CMP MSB,6
    JE MSB6
    CMP MSB,7
    JE MSB7
    CMP MSB,8
    JE MSB8
    CMP MSB,9
    JE MSB9
MSB0:
    CALL PRINT_0ALG
	JMP	SCORE_GET_REG
MSB1:
    CALL PRINT_1ALG
	JMP	SCORE_GET_REG
MSB2:
    CALL PRINT_2ALG
	JMP	SCORE_GET_REG
MSB3:
    CALL PRINT_3ALG
	JMP	SCORE_GET_REG
MSB4:
    CALL PRINT_4ALG
	JMP	SCORE_GET_REG
MSB5:
    CALL PRINT_5ALG
	JMP	SCORE_GET_REG
MSB6:
    CALL PRINT_6ALG
	JMP	SCORE_GET_REG
MSB7:
    CALL PRINT_7ALG
	JMP	SCORE_GET_REG
MSB8:
    CALL PRINT_8ALG
	JMP	SCORE_GET_REG
MSB9:
    CALL PRINT_9ALG
SCORE_GET_REG:
	RET
SIDEMENU_SCORENUM ENDP
;-----------------------------------------------------------------------------SIDE MENU SCORE COUNT------------------------------------------------------------;
;#####################################################################################################################################################################################;
;###########################################################################---------SIDE MENU---------###############################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#############################################################################---------MENUS---------#################################################################################;
;#####################################################################################################################################################################################;
; ;-----------------------------------------------------------------------------TITLE SCREEN---------------------------------------------------------------------;
; TITLE_SCREEN PROC
	; MOV QUADSIZE_X, 79		;INICIO DOS PARAMETROS DO QUADRADO LIVES
	; MOV QUADSIZE_Y, 59
	; MOV COLUNA, 0
	; MOV LINHA, 0
	; MOV COR, 20H
	; MOV QUADSIZE, 9
	; CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO LIVES
	
	; MOV MATRIZ, 0
; TITLE_RESTART:
	; CALL TITLE_ANIM
	; CMP TITLE_ANIM_STOP_FLAG, 1
	; JE QUIT_TITLE_SCREEN
	; JMP	TITLE_RESTART

; QUIT_TITLE_SCREEN:
	; CALL LIMPA_TELA
	; RET

; TITLE_SCREEN ENDP
; ;-----------------------------------------------------------------------------TITLE SCREEN---------------------------------------------------------------------;
;#######################################################################################################################################################################################
; ;--------------------------------------------------------------------------TITLE SCREEN ANIM-------------------------------------------------------------------;
; TITLE_ANIM PROC
	; MOV LINHA, 250
	; MOV COLUNA, 200		;0
	; MOV QUADCOL, 0
	; MOV QUADLIN, 0
	; MOV QUADSIZE, 4		;9
	
; TITLE_ANIM_VERIFICATION:
	; MOV AH, 6H
	; MOV DL, 255
	; INT 21H	
	; JZ PRINT_TITLE_ANIM
	; MOV TITLE_ANIM_STOP_FLAG, 1
	; RET
; PRINT_TITLE_ANIM:
	; MOV BX, MATRIZ
	; CMP [M_TITLE_ANIM + BX], 0	;PRETO		00H
	; JE TITLE_ANIM_BLACK
	; CMP [M_TITLE_ANIM + BX], 1	;AZUL		20H
	; JE TITLE_ANIM_BLUE
	; CMP [M_TITLE_ANIM + BX], 2	;BRANCO		0FH
	; JE TITLE_ANIM_WHITE
	; ;--------PACMAN-----------/
	; CMP [M_TITLE_ANIM + BX], 3	;AMARELO	0EH
	; JE TITLE_ANIM_YELLOW
	; ;--------GHOSTS-----------/
	; CMP [M_TITLE_ANIM + BX], 4	;VERMELHO	28H
	; JE TITLE_ANIM_RED1
	; CMP [M_TITLE_ANIM + BX], 5	;LARANJA	2BH
	; JE TITLE_ANIM_ORANGE1
	; CMP [M_TITLE_ANIM + BX], 6	;ROSA		3CH
	; JE TITLE_ANIM_PINK1
	; CMP [M_TITLE_ANIM + BX], 7	;CIANO		0BH
	; JE TITLE_ANIM_CYAN1
	; ;--------SCARED GHOST-----/
	; CMP [M_TITLE_ANIM + BX], 8	;CIANO		0BH
	; JE TITLE_ANIM_SEYE1
	; CMP [M_TITLE_ANIM + BX], 9	;CIANO		0BH
	; JE TITLE_ANIM_SBODY1
	
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE1
	; JMP TITLE_ANIM_RESET_BASE1
	
; TITLE_ANIM_BLACK:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE1
	; MOV COR, 0H	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE1
	
; TITLE_ANIM_BLUE:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE1
	; MOV COR, 20H	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE1
	
; TITLE_ANIM_WHITE:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE1
	; MOV COR, 0FH	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE1
	
; TITLE_ANIM_YELLOW:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE1
	; MOV COR, 0EH	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE1
	
	; TITLE_ANIM_ORANGE1:
	; JMP TITLE_ANIM_ORANGE
	
; TITLE_ANIM_RED1:
	; JMP TITLE_ANIM_RED
	
; TITLE_ANIM_PINK1:
	; JMP	TITLE_ANIM_PINK
	
; TITLE_ANIM_CYAN1:
	; JMP TITLE_ANIM_CYAN
	
; TITLE_ANIM_SEYE1:
	; JMP TITLE_ANIM_SEYE
	
; TITLE_ANIM_SBODY1:
	; JMP TITLE_ANIM_SBODY

; TITLE_ANIM_DESCE1:
	; JMP TITLE_ANIM_DESCE
	
; TITLE_ANIM_RESET_BASE1:
	; JMP TITLE_ANIM_RESET_BASE
	
; TITLE_ANIM_RED:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE1
	; MOV COR, 28H	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE
	
	
; TITLE_ANIM_ORANGE:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE1
	; MOV COR, 2BH	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE
	
; TITLE_ANIM_PINK:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE
	; MOV COR, 3CH	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE
	
; TITLE_ANIM_CYAN:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE
	; MOV COR, 0BH	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE
	
; TITLE_ANIM_SEYE:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE
	; MOV COR, 5BH	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE
	
; TITLE_ANIM_SBODY:
	; CMP QUADCOL, 80
	; JE TITLE_ANIM_DESCE
	; MOV COR, 09H	
	; CALL PRINT_QUAD
	; JMP TITLE_ANIM_RESET_BASE
	
	
; TITLE_ANIM_RESET_BASE:
	; INC QUADCOL
	; INC MATRIZ
; TITLE_ANIM_RESET:
	; MOV COLUNA, 200			;0
	; MOV LINHA, 250
	; MOV AX, 5				;10
	; MUL QUADLIN
	; ADD LINHA, AX
	; MOV AX, 5				;10
	; MUL QUADCOL
	; ADD COLUNA, AX
	; JMP TITLE_ANIM_VERIFICATION
	
; TITLE_ANIM_DESCE:
	; CMP QUADLIN, 7
	; JG TITLE_ANIM_CABO
	; INC QUADLIN
	; MOV QUADCOL, 0
	; INC MATRIZ
	; JMP TITLE_ANIM_RESET
	
; TITLE_ANIM_CABO:
	; CMP MATRIZ, 19440
	; JL	TITLE_ANIM_RETURN 
	; MOV MATRIZ, 0
	; MOV DELAY_TIME, 30			;400
	; CALL DELAY
	; MOV TITLE_ANIM_COUNT, 0
	; RET
; TITLE_ANIM_RETURN:
	; INC MATRIZ
	; INC TITLE_ANIM_COUNT
	; CMP TITLE_ANIM_COUNT, 15
	; JL KEEP_PAC_RUNNING
	; CMP TITLE_ANIM_COUNT, 23
	; JG	KEEP_PAC_RUNNING
	; MOV DELAY_TIME, 5			;100
	; CALL DELAY
	; RET
	
; KEEP_PAC_RUNNING:
	; MOV DELAY_TIME, 2			;45
	; CALL DELAY
	; RET

; TITLE_ANIM ENDP
; ;--------------------------------------------------------------------------TITLE SCREEN ANIM-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------MENU SCREEN----------------------------------------------------------------------;
MENU_SCREEN PROC
    CALL LIMPA_TELA
	MOV QUIT_FLAG, 0
;---------------------------BORDA
	MOV QUADSIZE_X, 79		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 0
	MOV LINHA, 0
	MOV COR, 21H
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
	
;---------------------------TITULO MENU
	CALL MENU_TXT_PRINT
	
;---------------------------MAPS OPÇÃO
	CALL MAPS_TXT_PRINT
	
;---------------------------CONTROLS OPÇÃO
	MOV COR, 0FH
	MOV STARTX, 165
	MOV STARTY, 320
	MOV QUADSIZE_X, 10
	CALL CONTROLS_TXT_PRINT
	
;---------------------------CREDITS OPÇÃO
	MOV COR, 0FH
	MOV STARTX, 195
	MOV STARTY, 410
	MOV QUADSIZE_X, 10
	CALL CREDITS_TXT_PRINT
	
;---------------------------QUIT OPÇÃO
	CALL QUIT_TXT_PRINT
	
;---------------------------ESCOLHA DAS OPÇÕES
	CALL CHOOSE_MENU
	RET
	
MENU_SCREEN ENDP

;-----------------------------------------------------MENU
MENU_TXT_PRINT PROC
	MOV LINHA, 72
    MOV COLUNA, 122
    MOV QUADCOL, 0
    MOV QUADLIN, 0
    MOV MATRIZ, 0
    MOV QUADSIZE, 14
	
MENU_VERIFICATION:
	MOV BX, MATRIZ
	CMP [MENU_TXT + BX], 1	;YELLOW
	JE	PRINT_MENU_TXT
	CMP [MENU_TXT + BX], 2
	JE PRINT_MENU_TXT_ORAN
	JMP MENU_TXT_CMP_QUADCOL
	
	
PRINT_MENU_TXT:
	MOV COR, 0EH
	CALL PRINT_QUAD
	JMP MENU_TXT_CMP_QUADCOL
	
PRINT_MENU_TXT_ORAN:
	MOV COR, 2AH
	CALL PRINT_QUAD
	JMP MENU_TXT_CMP_QUADCOL
	
MENU_TXT_CMP_QUADCOL:
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 37
	JE DESCE_MENU_TXT
	
RESET_MENU_TXT_PIX:
	MOV COLUNA, 122
    MOV LINHA, 72
    MOV AX, 15
    MUL QUADLIN
    ADD LINHA, AX
    MOV AX, 15
    MUL QUADCOL
    ADD COLUNA, AX
    JMP MENU_VERIFICATION
	
DESCE_MENU_TXT:
	INC QUADLIN
	CMP QUADLIN, 5
	JE	FIM_MENU_TXT
	INC MATRIZ
	MOV QUADCOL, 0
	JMP RESET_MENU_TXT_PIX
	
FIM_MENU_TXT:
	MOV COR, 2AH
	
	
	MOV QUADSIZE_X, 58	
	MOV QUADSIZE_Y, 0
	MOV COLUNA, 102
	MOV LINHA, 45
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	
	
	MOV QUADSIZE_X, 58
	MOV QUADSIZE_Y, 0
	MOV COLUNA, 102
	MOV LINHA, 165
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	
	
	MOV QUADSIZE_X, 0		
	MOV QUADSIZE_Y, 10
	MOV COLUNA, 92
	MOV LINHA, 55
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	
	
	MOV QUADSIZE_X, 0		
	MOV QUADSIZE_Y, 10
	MOV COLUNA, 692
	MOV LINHA, 55
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	

	RET
MENU_TXT_PRINT ENDP

;-----------------------------------------------------MAPS
MAPS_TXT_PRINT PROC
	MOV LINHA, 230
    MOV COLUNA, 285
    MOV QUADCOL, 0
    MOV QUADLIN, 0
    MOV MATRIZ, 0
    MOV QUADSIZE, 9
	
	
MAPS_VERIFICATION:
	MOV BX, MATRIZ
	CMP [MAPS_TXT + BX], 1	;WHITE
	JE	PRINT_MAPS_TXT
	JMP MAPS_TXT_CMP_QUADCOL
	
	
PRINT_MAPS_TXT:
	MOV COR, 0FH
	CALL PRINT_QUAD
	
MAPS_TXT_CMP_QUADCOL:
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 23
	JE DESCE_MAPS_TXT
	
RESET_MAPS_TXT_PIX:
	MOV COLUNA, 285
    MOV LINHA, 230
    MOV AX, 10
    MUL QUADLIN
    ADD LINHA, AX
    MOV AX, 10
    MUL QUADCOL
    ADD COLUNA, AX
    JMP MAPS_VERIFICATION
	
DESCE_MAPS_TXT:
	INC QUADLIN
	CMP QUADLIN, 5
	JE	FIM_MAPS_TXT
	INC MATRIZ
	MOV QUADCOL, 0
	JMP RESET_MAPS_TXT_PIX
	
FIM_MAPS_TXT:
	RET
MAPS_TXT_PRINT ENDP

;-----------------------------------------------------CONTROLS
CONTROLS_TXT_PRINT PROC	;(PARAMETROS: QUADSIZE_X = QUADSIZE; STARTX = POS INICIAL X; STARTY = POS INICIAL Y)
	MOV AX, STARTY
	MOV LINHA, AX	;320
	MOV AX, STARTX
    MOV COLUNA, AX	;165
    MOV QUADCOL, 0
    MOV QUADLIN, 0
    MOV MATRIZ, 0
	MOV AX, QUADSIZE_X
    MOV QUADSIZE, AX	;9
	
	
CONTROLS_TXT_VERIFICATION:
	MOV BX, MATRIZ
	CMP [CONTROLS_TXT + BX], 1	;WHITE
	JE	PRINT_CONTROLS_TXT
	JMP CONTROLS_TXT_CMP_QUADCOL
	
	
PRINT_CONTROLS_TXT:
	CALL PRINT_QUAD
	
CONTROLS_TXT_CMP_QUADCOL:
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 47
	JE DESCE_CONTROLS_TXT
	
RESET_CONTROLS_TXT_PIX:
	MOV AX, STARTY
	MOV LINHA, AX	;320
	MOV AX, STARTX
    MOV COLUNA, AX	;165
    MOV AX, QUADSIZE_X
    MUL QUADLIN
    ADD LINHA, AX
    MOV AX, QUADSIZE_X
    MUL QUADCOL
    ADD COLUNA, AX
    JMP CONTROLS_TXT_VERIFICATION
	
DESCE_CONTROLS_TXT:
	INC QUADLIN
	CMP QUADLIN, 5
	JE	FIM_CONTROLS_TXT
	INC MATRIZ
	MOV QUADCOL, 0
	JMP RESET_CONTROLS_TXT_PIX
	
FIM_CONTROLS_TXT:
	RET
CONTROLS_TXT_PRINT ENDP

;-----------------------------------------------------CREDITS
CREDITS_TXT_PRINT PROC	;(PARAMETROS: QUADSIZE_X = QUADSIZE; STARTX = POS INICIAL X; STARTY = POS INICIAL Y)
	MOV AX, STARTY	;410
	MOV LINHA, AX
	MOV AX, STARTX	;195
    MOV COLUNA, AX
    MOV QUADCOL, 0
    MOV QUADLIN, 0
    MOV MATRIZ, 0
	MOV AX, QUADSIZE_X	;10
	SUB AX, 1
    MOV QUADSIZE, AX
	
	
CREDITS_TXT_VERIFICATION:
	MOV BX, MATRIZ
	CMP [CREDITS_TXT + BX], 1	;WHITE
	JE	PRINT_CREDITS_TXT
	JMP CREDITS_TXT_CMP_QUADCOL
	
	
PRINT_CREDITS_TXT:
	CALL PRINT_QUAD
	
CREDITS_TXT_CMP_QUADCOL:
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 41
	JE DESCE_CREDITS_TXT
	
RESET_CREDITS_TXT_PIX:
	MOV AX, STARTX
	MOV COLUNA, AX
	MOV AX, STARTY
    MOV LINHA, AX
    MOV AX, QUADSIZE_X
    MUL QUADLIN
    ADD LINHA, AX
    MOV AX, QUADSIZE_X
    MUL QUADCOL
    ADD COLUNA, AX
    JMP CREDITS_TXT_VERIFICATION
	
DESCE_CREDITS_TXT:
	INC QUADLIN
	CMP QUADLIN, 5
	JE	FIM_CREDITS_TXT
	INC MATRIZ
	MOV QUADCOL, 0
	JMP RESET_CREDITS_TXT_PIX
	
FIM_CREDITS_TXT:
	RET
CREDITS_TXT_PRINT ENDP

;-----------------------------------------------------YOULOSE
YOULOSE_TXT_PRINT PROC	;(PARAMETROS: QUADSIZE_X = QUADSIZE; STARTX = POS INICIAL X; STARTY = POS INICIAL Y)
	MOV LINHA, 300
    MOV COLUNA,161
    MOV QUADCOL, 0
    MOV QUADLIN, 0
    MOV MATRIZ, 0
    MOV QUADSIZE,4
	
	CALL LIMPA_BUFFER
	
YOULOSE_TXT_VERIFICATION:
	MOV BX, MATRIZ
	CMP [YOULOSE_TXT + BX], 1	;WHITE
	JE	PRINT_YOULOSE_TXT
	CMP [YOULOSE_TXT + BX], 2	;WHITE
	JE	PRINT_YOULOSE_TXT2
	CMP [YOULOSE_TXT + BX], 3	;WHITE
	JE	PRINT_YOULOSE_TXT3
	JMP YOULOSE_TXT_CMP_QUADCOL
	
PRINT_YOULOSE_TXT3:
	MOV COR,18H
	CALL PRINT_QUAD
	JMP YOULOSE_TXT_CMP_QUADCOL
	
PRINT_YOULOSE_TXT2:
	MOV COR,0FH
	CALL PRINT_QUAD
	JMP YOULOSE_TXT_CMP_QUADCOL
	
PRINT_YOULOSE_TXT:
	MOV COR,04H
	CALL PRINT_QUAD
	
YOULOSE_TXT_CMP_QUADCOL:
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 45
	JE DESCE_YOULOSE_TXT
	
RESET_YOULOSE_TXT_PIX:
	MOV COLUNA, 161
    MOV LINHA, 300
    MOV AX, 5
    MUL QUADLIN
    ADD LINHA, AX
    MOV AX, 5
    MUL QUADCOL
    ADD COLUNA, AX
    JMP YOULOSE_TXT_VERIFICATION
	
DESCE_YOULOSE_TXT:
	INC QUADLIN
	CMP QUADLIN, 10
	JE	FIM_PRINT_RETURN
	INC MATRIZ
	MOV QUADCOL, 0
	JMP RESET_YOULOSE_TXT_PIX

FIM_PRINT_RETURN:	
	;---------------------------RETURN
	MOV AH,2H
	MOV BH,0
	MOV DH, 29	;LINHA
	MOV DL, 72	;COLUNA
	INT 10H
	
	LEA DX, MSG_RETURN
	MOV AH, 9H
	INT 21H
FIM_YOULOSE_TXT:
	MOV AH, 6H
	MOV DL, 255
	INT 21H	
	JZ FIM_YOULOSE_TXT
	RET
YOULOSE_TXT_PRINT ENDP

;-----------------------------------------------------YOUWIN
YOUWIN_TXT_PRINT PROC	;(PARAMETROS: QUADSIZE_X = QUADSIZE; STARTX = POS INICIAL X; STARTY = POS INICIAL Y)
	MOV LINHA, 50
    MOV COLUNA,220
    MOV QUADCOL, 0
    MOV QUADLIN, 0
    MOV MATRIZ, 0
    MOV QUADSIZE,9
	
	
YOUWIN_TXT_VERIFICATION:
	MOV BX, MATRIZ
	CMP [YOUWIN_TXT + BX], 1	;WHITE
	JE	PRINT_YOUWIN_TXT
	JMP YOUWIN_TXT_CMP_QUADCOL
	
	
PRINT_YOUWIN_TXT:
	CALL PRINT_QUAD
	
YOUWIN_TXT_CMP_QUADCOL:
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 36
	JE DESCE_YOUWIN_TXT
	
RESET_YOUWIN_TXT_PIX:
	MOV COLUNA, 220
    MOV LINHA, 50
    MOV AX, 10
    MUL QUADLIN
    ADD LINHA, AX
    MOV AX, 10
    MUL QUADCOL
    ADD COLUNA, AX
    JMP YOUWIN_TXT_VERIFICATION
	
DESCE_YOUWIN_TXT:
	INC QUADLIN
	CMP QUADLIN, 7
	JE	FIM_YOUWIN_TXT
	INC MATRIZ
	MOV QUADCOL, 0
	JMP RESET_YOUWIN_TXT_PIX
	
FIM_YOUWIN_TXT:
	RET
YOUWIN_TXT_PRINT ENDP

;-----------------------------------------------------QUIT 
QUIT_TXT_PRINT PROC
	MOV LINHA, 500
    MOV COLUNA, 285
    MOV QUADCOL, 0
    MOV QUADLIN, 0
    MOV MATRIZ, 0
    MOV QUADSIZE, 9
	
	
QUIT_TXT_VERIFICATION:
	MOV BX, MATRIZ
	CMP [QUIT_TXT + BX], 1	;WHITE
	JE	PRINT_QUIT_TXT
	JMP QUIT_TXT_CMP_QUADCOL
	
	
PRINT_QUIT_TXT:
	MOV COR, 0FH
	CALL PRINT_QUAD
	
QUIT_TXT_CMP_QUADCOL:
	INC QUADCOL
	INC MATRIZ
	CMP QUADCOL, 23
	JE DESCE_QUIT_TXT
	
RESET_QUIT_TXT_PIX:
	MOV COLUNA, 285
    MOV LINHA, 500
    MOV AX, 10
    MUL QUADLIN
    ADD LINHA, AX
    MOV AX, 10
    MUL QUADCOL
    ADD COLUNA, AX
    JMP QUIT_TXT_VERIFICATION
	
DESCE_QUIT_TXT:
	INC QUADLIN
	CMP QUADLIN, 5
	JE	FIM_QUIT_TXT
	INC MATRIZ
	MOV QUADCOL, 0
	JMP RESET_QUIT_TXT_PIX
	
FIM_QUIT_TXT:
	RET
QUIT_TXT_PRINT ENDP
;-----------------------------------------------------------------------------MENU SCREEN----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------CHOOSE MENU----------------------------------------------------------------------;
CHOOSE_MENU PROC
	MOV FLAG_MENU_CONTROL,0
	MOV MENU_CONTROL,0
	MOV VARLINHA,230
	MOV LINHA, 230
	MOV COLUNA, 100
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
	MOV QUADSIZE, 9
	MOV AL,0
	
CHOOSE_MENU_VERIFICATION:
	MOV BX, MATRIZ
	CMP [SELECTION + BX], 1
	JE CHOOSE_MENU_YELLOW
	CMP QUADCOL, 60
	JE CHOOSE_MENU_DESCE
	JMP CHOOSE_MENU_RESET_BASE
	
CHOOSE_MENU_YELLOW:
	CMP FLAG_MENU_CONTROL,1
	JNZ CHOOSE_MENU_YELLOW_REAL
	MOV COR, 0H
	JMP CHOOSE_MENU_YELLOW_BLACK
CHOOSE_MENU_YELLOW_REAL:
	MOV COR, 0EH
CHOOSE_MENU_YELLOW_BLACK:
	CMP QUADCOL, 60
	JE CHOOSE_MENU_DESCE
	CALL PRINT_QUAD
CHOOSE_MENU_RESET_BASE:
	INC QUADCOL
	INC MATRIZ
CHOOSE_MENU_RESET:

	CMP FLAG_MENU_CONTROL,1
	JNZ CHOOSE_MENU_RESET_AGAIN
	MOV COLUNA, 100
	MOV AX,VARLINHAAUX
	MOV LINHA, AX ;312-220=92
	MOV AX, 10
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 10
	MUL QUADCOL
	ADD COLUNA, AX
	JMP CHOOSE_MENU_VERIFICATION
	
CHOOSE_MENU_RESET_AGAIN:
	MOV COLUNA, 100
	MOV AX,VARLINHA
	MOV LINHA, AX ;312-220=92
	MOV AX, 10
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 10
	MUL QUADCOL
	ADD COLUNA, AX
	JMP CHOOSE_MENU_VERIFICATION
	
CHOOSE_MENU_DESCE:
	CMP QUADLIN, 3
	JG CHOOSE_MENU_CABO
	INC QUADLIN
	MOV QUADCOL, 0
	INC MATRIZ
	JMP CHOOSE_MENU_RESET
	
CHOOSE_MENU_CABO:
	CMP FLAG_MENU_CONTROL,1
	JNZ CHOOSE_MENU_CABO_CONTINUE
	DEC FLAG_MENU_CONTROL
	JMP CHOOSE_MENU_VERIFICATION
CHOOSE_MENU_CABO_CONTINUE:
	
	MOV AH, 6H
	MOV DL, 255
	INT 21H
	JZ	CHOOSE_MENU_RESTART
	CMP AL,77H;CIMA - w
	JE CHOOSE_MENU_CIMA
	CMP AL,73H;BAIXO - s
	JE CHOOSE_MENU_BAIXO
	CMP AL,0DH
	JNZ CHOOSE_MENU_RESTART
	CALL LIMPA_TELA
	RET
CHOOSE_MENU_CIMA:
	CMP MENU_CONTROL,0
	JE CHOOSE_MENU_RESTART
	MOV FLAG_MENU_CONTROL,1
	DEC MENU_CONTROL
	MOV AX,VARLINHA
	SUB VARLINHA,90
	MOV VARLINHAAUX,AX
	JMP CHOOSE_MENU_RESTART
CHOOSE_MENU_BAIXO:
	CMP MENU_CONTROL,3
	JE CHOOSE_MENU_RESTART
	MOV FLAG_MENU_CONTROL,1
	INC MENU_CONTROL
	MOV AX,VARLINHA
	ADD VARLINHA,90
	MOV VARLINHAAUX,AX
CHOOSE_MENU_RESTART:
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
	JMP CHOOSE_MENU_VERIFICATION
CHOOSE_MENU	ENDP
;-----------------------------------------------------------------------------CHOOSE MENU----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------CONTROLS SCREEN------------------------------------------------------------------;
CONTROLS_SCREEN PROC
	
	CALL LIMPA_TELA

;---------------------------BORDA
	MOV QUADSIZE_X, 79		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 0
	MOV LINHA, 0
	MOV COR, 21H
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
	
;---------------------------TITULO CONTROLS
	MOV COR, 0EH
	MOV STARTX, 165
	MOV STARTY, 95
	MOV QUADSIZE_X, 10
	CALL CONTROLS_TXT_PRINT
	
	MOV TEXT_X, 33
	MOV TEXT_Y, 15
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------TIPOS DA TABELA
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_CONTROLS_LIST
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------W BUTTON
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_W_CONTROLE
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------S BUTTON
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_S_CONTROLE
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------A BUTTON
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_A_CONTROLE
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------D BUTTON
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_D_CONTROLE
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------ESC BUTTON
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_ESC_CONTROLE
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 3
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA
	MOV AH, 9H
	INT 21H
;---------------------------RETURN
	MOV AH,2H
	MOV BH,0
	MOV DH, 29	;LINHA
	MOV DL, 37	;COLUNA
	INT 10H
	
	LEA DX, MSG_RETURN
	MOV AH, 9H
	INT 21H

;---------------------------WAIT CARACTER
CONTROLS_LOOP_CARACTER:
	MOV AH, 6H
	MOV DL, 255
	INT 21H
	JZ	CONTROLS_LOOP_CARACTER
	CALL LIMPA_TELA
	RET
	
CONTROLS_SCREEN ENDP
;-----------------------------------------------------------------------------CONTROLS SCREEN------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------CREDITS SCREEN-------------------------------------------------------------------;
CREDITS_SCREEN PROC
	CALL LIMPA_TELA

;---------------------------BORDA
	MOV QUADSIZE_X, 79		
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 0
	MOV LINHA, 0
	MOV COR, 21H
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	
	
;---------------------------TITULO CONTROLS
	MOV COR, 0EH
	MOV STARTX, 195
	MOV STARTY, 25
	MOV QUADSIZE_X, 10
	CALL CREDITS_TXT_PRINT
	
	CALL RANKING_CREDITS	
	RET
	
CREDITS_SCREEN ENDP
;-----------------------------------------------------------------------------CREDITS SCREEN-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------YOUWIN SCREEN-------------------------------------------------------------------;
YOUWIN_SCREEN PROC
	CALL LIMPA_TELA

;---------------------------BORDA AZUL
	MOV QUADSIZE_X, 79		
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 0
	MOV LINHA, 0
	MOV COR, 21H
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	
	
;---------------------------TITULO CONTROLS
	MOV COR, 0EH
	MOV STARTX, 195
	MOV STARTY, 95
	MOV QUADSIZE_X, 10
	CALL YOUWIN_TXT_PRINT

;---------------------------WAIT CARACTER	
	CALL RANK
	CALL LIMPA_TELA
	RET
	
YOUWIN_SCREEN ENDP
;-----------------------------------------------------------------------------YOUWIN SCREEN-------------------------------------------------------------------;
;#####################################################################################################################################################################################;
;#############################################################################---------MENUS---------#################################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#########################################################################---------PRINT NUMEROS---------#############################################################################;
;#####################################################################################################################################################################################;
;-----------------------------------------------------------------------------SCORE NUMS-----------------------------------------------------------------------;
PRINT_0ALG PROC ;----------------------------------------------------------------------------------PRINT 0
	MOV CX, COLUNA
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_0ALG:
	MOV BX, MATRIZ
	CMP [NUM0 + BX], 1
	JE PRINT_PIXEL_0ALG
	CMP QUADCOL, 7
	JE DESCE_0ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_0ALG
PRINT_PIXEL_0ALG:
	CMP QUADCOL, 7
	JE DESCE_0ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_0ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_0ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_0ALG
DESCE_0ALG:
	CMP QUADLIN, 8
	JG CABO_0ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_0ALG
CABO_0ALG:
	RET
PRINT_0ALG ENDP

PRINT_1ALG PROC;----------------------------------------------------------------------------------PRINT 1
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_1ALG:
	MOV BX, MATRIZ
	CMP [NUM1 + BX], 1
	JE PRINT_PIXEL_1ALG
	CMP QUADCOL, 7
	JE DESCE_1ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_1ALG
PRINT_PIXEL_1ALG:
	CMP QUADCOL, 7
	JE DESCE_1ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_1ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_1ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_1ALG
DESCE_1ALG:
	CMP QUADLIN, 8
	JG CABO_1ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_1ALG
CABO_1ALG:
	RET
PRINT_1ALG ENDP

PRINT_2ALG PROC;----------------------------------------------------------------------------------PRINT 2
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_2ALG:
	MOV BX, MATRIZ
	CMP [NUM2 + BX], 1
	JE PRINT_PIXEL_2ALG
	CMP QUADCOL, 7
	JE DESCE_2ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_2ALG
PRINT_PIXEL_2ALG:
	CMP QUADCOL, 7
	JE DESCE_2ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_2ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_2ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_2ALG
DESCE_2ALG:
	CMP QUADLIN, 8
	JG CABO_2ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_2ALG
CABO_2ALG:
	RET
PRINT_2ALG ENDP

PRINT_3ALG PROC;----------------------------------------------------------------------------------PRINT 3
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_3ALG:
	MOV BX, MATRIZ
	CMP [NUM3 + BX], 1
	JE PRINT_PIXEL_3ALG
	CMP QUADCOL, 7
	JE DESCE_3ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_3ALG
PRINT_PIXEL_3ALG:
	CMP QUADCOL, 7
	JE DESCE_3ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_3ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_3ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_3ALG
DESCE_3ALG:
	CMP QUADLIN, 8
	JG CABO_3ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_3ALG
CABO_3ALG:
	RET
PRINT_3ALG ENDP

PRINT_4ALG PROC;----------------------------------------------------------------------------------PRINT 4
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_4ALG:
	MOV BX, MATRIZ
	CMP [NUM4 + BX], 1
	JE PRINT_PIXEL_4ALG
	CMP QUADCOL, 7
	JE DESCE_4ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_4ALG
PRINT_PIXEL_4ALG:
	CMP QUADCOL, 7
	JE DESCE_4ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_4ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_4ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_4ALG
DESCE_4ALG:
	CMP QUADLIN, 8
	JG CABO_4ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_4ALG
CABO_4ALG:
	RET
PRINT_4ALG ENDP

PRINT_5ALG PROC;----------------------------------------------------------------------------------PRINT 5
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_5ALG:
	MOV BX, MATRIZ
	CMP [NUM5 + BX], 1
	JE PRINT_PIXEL_5ALG
	CMP QUADCOL, 7
	JE DESCE_5ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_5ALG
PRINT_PIXEL_5ALG:
	CMP QUADCOL, 7
	JE DESCE_5ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_5ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_5ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_5ALG
DESCE_5ALG:
	CMP QUADLIN, 8
	JG CABO_5ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_5ALG
CABO_5ALG:
	RET
PRINT_5ALG ENDP

PRINT_6ALG PROC;----------------------------------------------------------------------------------PRINT 6
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_6ALG:
	MOV BX, MATRIZ
	CMP [NUM6 + BX], 1
	JE PRINT_PIXEL_6ALG
	CMP QUADCOL, 7
	JE DESCE_6ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_6ALG
PRINT_PIXEL_6ALG:
	CMP QUADCOL, 7
	JE DESCE_6ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_6ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_6ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_6ALG
DESCE_6ALG:
	CMP QUADLIN, 8
	JG CABO_6ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_6ALG
CABO_6ALG:
	RET
PRINT_6ALG ENDP

PRINT_7ALG PROC;----------------------------------------------------------------------------------PRINT 7
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_7ALG:
	MOV BX, MATRIZ
	CMP [NUM7 + BX], 1
	JE PRINT_PIXEL_7ALG
	CMP QUADCOL, 7
	JE DESCE_7ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_7ALG
PRINT_PIXEL_7ALG:
	CMP QUADCOL, 7
	JE DESCE_7ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_7ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_7ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_7ALG
DESCE_7ALG:
	CMP QUADLIN, 8
	JG CABO_7ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_7ALG
CABO_7ALG:
	RET
PRINT_7ALG ENDP

PRINT_8ALG PROC;----------------------------------------------------------------------------------PRINT 8
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_8ALG:
	MOV BX, MATRIZ
	CMP [NUM8 + BX], 1
	JE PRINT_PIXEL_8ALG
	CMP QUADCOL, 7
	JE DESCE_8ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_8ALG
PRINT_PIXEL_8ALG:
	CMP QUADCOL, 7
	JE DESCE_8ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_8ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_8ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_8ALG
DESCE_8ALG:
	CMP QUADLIN, 8
	JG CABO_8ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_8ALG
CABO_8ALG:
	RET
PRINT_8ALG ENDP

PRINT_9ALG PROC;----------------------------------------------------------------------------------PRINT 9
	MOV VALOR_X_ALG, CX
	MOV LINHA, 91
	MOV QUADCOL, 0
	MOV QUADLIN, 0
	MOV MATRIZ, 0
MAT_VERIFIC_9ALG:
	MOV BX, MATRIZ
	CMP [NUM9 + BX], 1
	JE PRINT_PIXEL_9ALG
	CMP QUADCOL, 7
	JE DESCE_9ALG
	MOV COR, 0
	MOV QUADSIZE, 3
	JMP CALL_PRINT_PIXEL_9ALG
PRINT_PIXEL_9ALG:
	CMP QUADCOL, 7
	JE DESCE_9ALG
	MOV QUADSIZE, 3
	MOV COR, 0FH
CALL_PRINT_PIXEL_9ALG:
	CALL PRINT_QUAD
	INC QUADCOL
	INC MATRIZ
RESETA_INICIO_9ALG:
	MOV AX, VALOR_X_ALG
	MOV COLUNA, AX
	MOV LINHA, 91
	MOV AX, 4
	MUL QUADLIN
	ADD LINHA, AX
	MOV AX, 4
	MUL QUADCOL
	ADD COLUNA, AX
	JMP MAT_VERIFIC_9ALG
DESCE_9ALG:
	CMP QUADLIN, 8
	JG CABO_9ALG
	INC QUADLIN
	MOV QUADCOL, 0
	JMP RESETA_INICIO_9ALG
CABO_9ALG:
	RET
PRINT_9ALG ENDP
;-----------------------------------------------------------------------------SCORE NUMS-----------------------------------------------------------------------;
;#####################################################################################################################################################################################;
;#########################################################################---------PRINT NUMEROS---------#############################################################################;
;#####################################################################################################################################################################################;

;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;

;#####################################################################################################################################################################################;
;#########################################################################--------------RANK-------------#############################################################################;
;#####################################################################################################################################################################################;
;-----------------------------------------------------------------------------RANK-----------------------------------------------------------------------------;
RANK PROC
	
	MOV QUADSIZE_X, 70		;Quadrado lilás
	MOV QUADSIZE_Y, 35
	MOV COLUNA, 255
	MOV LINHA, 160
	MOV COR, 23H
	MOV QUADSIZE, 3
	CALL PRINT_WIRE_QUAD	;PRINTOU
	
	MOV QUADSIZE_X, 70		;Traço horizontal lilás
	MOV QUADSIZE_Y, 15
	MOV COLUNA, 255
	MOV LINHA, 160
	MOV COR, 23H
	MOV QUADSIZE, 3
	CALL PRINT_WIRE_QUAD	;PRINTOU
	
	MOV AH,2H
	MOV BH,0
	MOV DH,11
	MOV DL,42
	INT 10H
	
	LEA DX,MSG_INS_NAME
	MOV AH,9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH,12
	MOV DL,41
	INT 10H
	
	LEA DX,MSG_MAX_CARAC
	MOV AH,9H
	INT 21H	
	
	MOV AH,2H
	MOV BH,0
	MOV DH,16
	MOV DL,47
	INT 10H
	
	XOR CX,CX
	MOV DL,'-'
	MOV CX,6
	MOV AH,2H
PRINT_MINUS:	
	INT 21H
	LOOP PRINT_MINUS

;-------------------------------CREDITS
	MOV TEXT_X, 34
	MOV TEXT_Y, 23
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------TIPOS TABELA
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_CREDITS_LIST
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------NOME 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_CREDITS_NAME1
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------NOME 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_CREDITS_NAME2
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------NOME 3
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_CREDITS_NAME3
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 3
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA
	MOV AH, 9H
	INT 21H
;-------------------------------CREDITS
	
	MOV AH,2H
	MOV BH,0
	MOV DH,15
	MOV DL,47
	INT 10H
	
GO_TO_REAL_RANK:
	MOV AH, 0AH
	MOV DX, OFFSET NOME
	INT 21H
	
	MOV SI, OFFSET NOME + 1
	MOV CL, [SI]
	MOV CH, 0
	INC CX
	ADD SI, CX
	MOV AL, '$'
	MOV [SI], AL
	
	CALL LIMPA_TELA
	
	CMP WHICH_MAP,0
	JNE RANK_MEDIUM
	XOR BX,BX
	JMP START_WRITING_FILE
RANK_MEDIUM:
	CMP WHICH_MAP,1
	JNE RANK_HARD
	XOR BX,BX
	ADD BX,10
	JMP START_WRITING_FILE
RANK_HARD:	
	CMP WHICH_MAP,2
	XOR BX,BX
	ADD BX,20
START_WRITING_FILE:
	MOV WHICH_RANK,BX
	;----------FILES-------------------------------------------;
	MOV AX,3D02H	;AH - comando de abertura de arquivo, AL - modo de acesso (write/read - 2)
	
	CMP WHICH_RANK,0
	JNE OPEN_ANOTHER_FILE1
	MOV DX, OFFSET FILENAME_EASY
	JMP CONTINUE_OPENING_FILE_RANK
OPEN_ANOTHER_FILE1:
	CMP WHICH_RANK,10
	JNE OPEN_ANOTHER_FILE2
	MOV DX, OFFSET FILENAME_MEDI
	JMP CONTINUE_OPENING_FILE_RANK
OPEN_ANOTHER_FILE2:
	MOV DX, OFFSET FILENAME_HARD
CONTINUE_OPENING_FILE_RANK:

	INT 21H
	JNC CONTINUA_ABERTURA_FILE
	
	;CRIA NOVO ARQUIVO------------------------------------------;
	
	MOV AH,3CH
	MOV CX,0
	
	CMP WHICH_RANK,0
	JNE CREATE_ANOTHER_FILE1
	MOV DX, OFFSET FILENAME_EASY
	JMP CONTINUE_CREATING_FILE_RANK
CREATE_ANOTHER_FILE1:
	CMP WHICH_RANK,10
	JNE CREATE_ANOTHER_FILE2
	MOV DX, OFFSET FILENAME_MEDI
	JMP CONTINUE_CREATING_FILE_RANK
CREATE_ANOTHER_FILE2:
	MOV DX, OFFSET FILENAME_HARD
CONTINUE_CREATING_FILE_RANK:	
	
	INT 21H
	
CONTINUA_ABERTURA_FILE:
	MOV HANDLE,AX
	
	MOV BX, HANDLE
	MOV AX,4202H 	;AH - comando para seek no file, AL - inicio no fim do arquivo
	XOR CX, CX
	XOR DX, DX
	INT 21H
	
	MOV BX, HANDLE
	MOV DX, OFFSET NOME + 2
	MOV CX, 7
	MOV AX, 4000H;AH - write to file
	INT 21H
	
	MOV AX, 4000H;AH - write to file
	MOV DX, OFFSET BARRA
	MOV CX,1
	MOV BX, HANDLE
	INT 21H
	
	CALL SAI_DEC
	MOV AX, 4000H ;AH - write to file
	MOV DX, OFFSET SCORE_ALG
	MOV CX, 4
	MOV BX, HANDLE
	INT 21H
	
	MOV BX,HANDLE
	MOV AH,3EH ;fecha o arquivo
	INT 21H
	
	;--------END FILES------------------------------------------;	
	CALL RANKING_SCREEN

	RET
RANK ENDP
;-----------------------------------------------------------------------------RANK-----------------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------RANKING SCREEN-------------------------------------------------------------------;
RANKING_SCREEN PROC
	
	CALL LIMPA_TELA
	
;---------------------------POS TABELA1
	MOV TEXT_X, 30
	MOV TEXT_Y, 03
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------TIPOS DA TABELA
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_YOURSCORE_LIST
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------BLANK LINE
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_BLANK_YOUR_LIST
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,7
	INT 10H
	
	LEA DX,SCORE_ALG
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,27
	INT 10H
	
	MOV DX,OFFSET NOME+2
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 3
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR
	MOV AH, 9H
	INT 21H
	
;---------------------------POS TABELA1
	MOV TEXT_X, 24
	MOV TEXT_Y, 15
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS TABELA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_SCORES_LIST
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS PRIMEIRO
	CALL TOP3
	CALL PRINTF_RANK_POS
;---------------------------RETURN
	MOV AH,2H
	MOV BH,0
	MOV DH, 29	;LINHA
	MOV DL, 37	;COLUNA
	INT 10H
	
	LEA DX, MSG_RETURN
	MOV AH, 9H
	INT 21H

;---------------------------WAIT CARACTER
	MOV COR, 20H
RANKING_LOOP_CARACTER:
;---------------------------BORDA DA JANELA
	MOV QUADSIZE_X, 79		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 59
	MOV COLUNA, 0
	MOV LINHA, 0
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
;---------------------------BARRA LATERAL ESQUERDA RANK
	MOV QUADSIZE_X, 18		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 0
	MOV COLUNA, 0
	MOV LINHA, 166
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE	
;---------------------------BARRA LATERAL DIREITA RANK
	MOV QUADSIZE_X, 17		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 0
	MOV COLUNA, 610
	MOV LINHA, 166
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE	
;---------------------------BORDA DO SCORE ATUAL
	MOV QUADSIZE_X, 34		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 9
	MOV COLUNA, 220
	MOV LINHA, 40
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE
;---------------------------BORDA DO RANK GERAL
	MOV QUADSIZE_X, 45		;INICIO DOS PARAMETROS DO QUADRADO GRANDE
	MOV QUADSIZE_Y, 15
	MOV COLUNA, 170
	MOV LINHA, 231
	MOV QUADSIZE, 9
	CALL PRINT_WIRE_QUAD	;PRINTOU O QUADRADO GRANDE

;---------------------------TIPO RANK
	MOV TEXT_X, 24
	MOV TEXT_Y, 10
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	CMP WHICH_RANK, 0
	JNE NOT_THIS_RANK1
	LEA DX, MSG_RANK_EASY
	JMP PRINT_THIS_RANK
RANKING_LOOP_CARACTER_JMP:
	JMP RANKING_LOOP_CARACTER
NOT_THIS_RANK1:
	CMP WHICH_RANK, 10
	JNE NOT_THIS_RANK2
	LEA DX, MSG_RANK_MEDIUM
	JMP PRINT_THIS_RANK
NOT_THIS_RANK2:
	LEA DX, MSG_RANK_HARD	
PRINT_THIS_RANK:
	MOV AH, 9H
	INT 21H
	
	CMP COR, 40H
	JNZ CONTINUE_TEST_RECEIVE_CARAC
	SUB COR, 20H
CONTINUE_TEST_RECEIVE_CARAC:
	INC COR
	MOV AH, 6H
	MOV DL, 255
	INT 21H
	JZ	RANKING_LOOP_CARACTER_JMP
	CALL LIMPA_TELA
	RET
	
RANKING_SCREEN ENDP
;-----------------------------------------------------------------------------RANKING SCREEN-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------SEARCH TOP3----------------------------------------------------------------------;
TOP3 PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	
;------------------ZERA TOP 3-----------------------------;
	XOR BX,BX
	XOR CX,CX
	MOV CX,6
NEUTRAL_NAME1:
	MOV NOMES_TOP3[BX], '-'
	INC BX
	LOOP NEUTRAL_NAME1
	
	XOR BX,BX
	MOV CX,6
NEUTRAL_NAME2:
	MOV NOMES_TOP3[7+BX], '-'
	INC BX
	LOOP NEUTRAL_NAME2	
	
	XOR BX,BX
	MOV CX,6
NEUTRAL_NAME3:
	MOV NOMES_TOP3[14+BX], '-'
	INC BX
	LOOP NEUTRAL_NAME3
	
	XOR BX,BX
;------------------ZERA TOP 3-----------------------------;

	MOV VAULT_NUM1,0
	MOV VAULT_NUM2,0
	MOV VAULT_NUM3,0
	MOV BX, WHICH_RANK
	;----------FILES-------------------------------------------;
	MOV AX,3D00H	;AH - comando de abertura de arquivo, AL - modo de acesso (write/read - 2)
	
	CMP WHICH_RANK,0
	JNE OPEN_AGAIN_ANOTHER_FILE1
	MOV DX, OFFSET FILENAME_EASY
	JMP CONTINUE_OPENING_ANOTHER_FILE_RANK
OPEN_AGAIN_ANOTHER_FILE1:
	CMP WHICH_RANK,10
	JNE OPEN_AGAIN_ANOTHER_FILE2
	MOV DX, OFFSET FILENAME_MEDI
	JMP CONTINUE_OPENING_ANOTHER_FILE_RANK
OPEN_AGAIN_ANOTHER_FILE2:
	MOV DX, OFFSET FILENAME_HARD
CONTINUE_OPENING_ANOTHER_FILE_RANK:

	INT 21H
	JNC DON_CREATE_FILE
	
	MOV AH,3CH
	MOV CX,0
	INT 21H	
DON_CREATE_FILE:
	MOV HANDLE,AX
	

READ_ANOTHER_ONE:
	
	MOV BX, HANDLE
	MOV DX, OFFSET NOME + 2
	MOV CX, 7
	MOV AX, 3F00H;AH - read from a file
	INT 21H
	CMP AX,0
	JE END_FILE_JMP
	
	MOV AX, 3F00H;AH - read from a file
	MOV DX, OFFSET BARRA
	MOV CX,1
	MOV BX, HANDLE
	INT 21H
	
	MOV BX, HANDLE
	MOV DX, OFFSET SCORE_TEMP1
	MOV CX, 4
	MOV AX, 3F00H;AH - read from a file
	INT 21H
	
	SUB SCORE_TEMP1[3],30H
	SUB SCORE_TEMP1[2],30H
	SUB SCORE_TEMP1[1],30H
	SUB SCORE_TEMP1[0],30H
	
	MOV AX,1
	XOR CX,CX
	MOV CL, SCORE_TEMP1[3]
	MUL CX
	MOV BX,AX
	
	MOV AX,10
	XOR CX,CX
	MOV CL, SCORE_TEMP1[2]
	MUL CX
	ADD BX,AX
	
	MOV AX,100
	XOR CX,CX
	MOV CL, SCORE_TEMP1[1]
	MUL CX
	ADD BX,AX
	
	MOV AX,1000
	XOR CX,CX
	MOV CL, SCORE_TEMP1[0]
	MUL CX
	ADD BX,AX
	JMP CONTINUE_COUNTING_NUMBERS
	
END_FILE_JMP:
	JMP END_FILE_TOP3
READ_ANOTHER_ONE_JMP:
	JMP READ_ANOTHER_ONE
	
CONTINUE_COUNTING_NUMBERS:
	MOV VAULT_NUM_AUX, BX
	
	MOV BX,VAULT_NUM1
	CMP VAULT_NUM_AUX,BX
	JNG TRY_SECOND_PLACE
	CALL CHANGE_RANK_12
	XOR DX,DX
	MOV DX,VAULT_NUM_AUX
	MOV VAULT_NUM1, DX
	CALL COPY_TO_RANK1
	
	JMP READ_ANOTHER_ONE_JMP
	
TRY_SECOND_PLACE:
	MOV BX,VAULT_NUM2
	CMP VAULT_NUM_AUX,BX
	JNG TRY_THIRD_PLACE
	CALL CHANGE_RANK_23
	XOR DX,DX
	MOV DX,VAULT_NUM_AUX
	MOV VAULT_NUM2, DX
	CALL COPY_TO_RANK2
	JMP READ_ANOTHER_ONE_JMP
	
TRY_THIRD_PLACE:
	MOV BX,VAULT_NUM3
	CMP VAULT_NUM_AUX,BX
	JNG READ_ANOTHER_ONE_JMP
	XOR DX,DX
	MOV DX,VAULT_NUM_AUX
	MOV VAULT_NUM3, DX
	CALL COPY_TO_RANK3
	JMP READ_ANOTHER_ONE_JMP
	
END_FILE_TOP3:
	MOV BX,HANDLE
	MOV AH,3EH ;fecha o arquivo
	INT 21H
	
	;--------END FILES------------------------------------------;		
	
	CALL SAI_DEC_FIRST
	CALL SAI_DEC_SECO
	CALL SAI_DEC_THI
	
	POP SI
	POP DX
	POP CX
	POP BX
	POP AX
	
	RET
TOP3 ENDP
;-----------------------------------------------------------------------------SEARCH TOP3----------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------COPY TO RANK 1-------------------------------------------------------------------;
COPY_TO_RANK1 PROC
	PUSH BX
	PUSH AX
	XOR AX,AX
	XOR BX,BX
REPEAT_COPY_LETTERS_1:
	MOV AL, NOME[2 + BX]
	CMP AL, '$'
	JE FINISH_COPY_LETTERS_1
	MOV NOMES_TOP3[BX], AL
	INC BX
	JMP REPEAT_COPY_LETTERS_1
FINISH_COPY_LETTERS_1:
	MOV NOMES_TOP3[BX], AL
	
	POP AX
	POP BX
	RET
COPY_TO_RANK1 ENDP
;-----------------------------------------------------------------------------COPY TO RANK 1-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------COPY TO RANK 2-------------------------------------------------------------------;
COPY_TO_RANK2 PROC
	PUSH BX
	PUSH AX
	XOR AX,AX
	XOR BX,BX
REPEAT_COPY_LETTERS_2:
	MOV AL, NOME[2 + BX]
	CMP AL, '$'
	JE FINISH_COPY_LETTERS_2
	MOV NOMES_TOP3[7+BX], AL
	INC BX
	JMP REPEAT_COPY_LETTERS_2
FINISH_COPY_LETTERS_2:
	MOV NOMES_TOP3[7+BX], AL
	
	POP AX
	POP BX
	RET
COPY_TO_RANK2 ENDP
;-----------------------------------------------------------------------------COPY TO RANK 2-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------COPY TO RANK 3-------------------------------------------------------------------;
COPY_TO_RANK3 PROC
	PUSH BX
	PUSH AX
	XOR AX,AX
	XOR BX,BX
REPEAT_COPY_LETTERS_3:
	MOV AL, NOME[2 + BX]
	CMP AL, '$'
	JE FINISH_COPY_LETTERS_3
	MOV NOMES_TOP3[14+ BX], AL
	INC BX
	JMP REPEAT_COPY_LETTERS_3
FINISH_COPY_LETTERS_3:
	MOV NOMES_TOP3[14+BX], AL
	
	POP AX
	POP BX
	RET
COPY_TO_RANK3 ENDP
;-----------------------------------------------------------------------------COPY TO RANK 3-------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------RANK CHANGE 1-2------------------------------------------------------------------;
CHANGE_RANK_12 PROC
	CALL CHANGE_RANK_23
	
	PUSH BX
	PUSH AX
	XOR AX,AX
	XOR BX,BX
REPEAT_COPY_LETTERS_12:
	MOV AL, NOMES_TOP3[BX]
	CMP AL, '$'
	JE FINISH_COPY_LETTERS_12
	MOV NOMES_TOP3[7+BX], AL
	INC BX
	JMP REPEAT_COPY_LETTERS_12
FINISH_COPY_LETTERS_12:
	MOV NOMES_TOP3[7+BX], AL
	
	XOR BX,BX
	MOV BX,VAULT_NUM2
	XCHG VAULT_NUM1, BX
	MOV VAULT_NUM2, BX

	POP AX
	POP BX

	RET
CHANGE_RANK_12 ENDP
;-----------------------------------------------------------------------------RANK CHANGE 1-2------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------RANK CHANGE 2-3------------------------------------------------------------------;
CHANGE_RANK_23 PROC
	PUSH BX
	PUSH AX
	XOR AX,AX
	XOR BX,BX
REPEAT_COPY_LETTERS_23:
	MOV AL, NOMES_TOP3[7+BX]
	CMP AL, '$'
	JE FINISH_COPY_LETTERS_23
	MOV NOMES_TOP3[14+ BX], AL
	INC BX
	JMP REPEAT_COPY_LETTERS_23
FINISH_COPY_LETTERS_23:
	MOV NOMES_TOP3[14+BX], AL
	
	XOR BX,BX
	MOV BX,VAULT_NUM2
	MOV VAULT_NUM3,BX
	
	POP AX
	POP BX
	RET
CHANGE_RANK_23 ENDP
;-----------------------------------------------------------------------------RANK CHANGE 2-3------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------SAIDA DECIMAL--------------------------------------------------------------------;
SAI_DEC PROC
	MOV BX,10
	MOV AX,SCORE_NUM
	MOV SI,3
	
CONTA_DENOVO_AI_PFV:
	XOR DX,DX	
	DIV BX
	ADD DX, 30H
	MOV SCORE_ALG[SI], DL
	DEC SI
	CMP SI, 0
	JGE CONTA_DENOVO_AI_PFV	
	
	MOV SCORE_ALG[4],'$'
	RET
SAI_DEC ENDP
;-----------------------------------------------------------------------------SAIDA DECIMAL--------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------SAIDA DECIMAL PARA 1° COLOCADO---------------------------------------------------;
SAI_DEC_FIRST PROC
	MOV BX,10
	MOV AX,VAULT_NUM1
	MOV SI,3
	
CONTA_DENOVO_AI_PFV_1:
	XOR DX,DX	
	DIV BX
	ADD DX, 30H
	MOV SCORE_ALG_TOP3[SI], DL
	DEC SI
	CMP SI, 0
	JGE CONTA_DENOVO_AI_PFV_1	
	
	RET
SAI_DEC_FIRST ENDP
;-----------------------------------------------------------------------------SAIDA DECIMAL PARA 1° COLOCADO---------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------SAIDA DECIMAL PARA 2° COLOCADO---------------------------------------------------;
SAI_DEC_SECO PROC
	MOV BX,10
	MOV AX,VAULT_NUM2
	MOV SI,3
	
CONTA_DENOVO_AI_PFV_2:
	XOR DX,DX	
	DIV BX
	ADD DX, 30H
	MOV SCORE_ALG_TOP3[5+SI], DL
	DEC SI
	CMP SI, 0
	JGE CONTA_DENOVO_AI_PFV_2	

	RET
SAI_DEC_SECO ENDP
;-----------------------------------------------------------------------------SAIDA DECIMAL PARA 2° COLOCADO---------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------SAIDA DECIMAL PARA 3° COLOCADO---------------------------------------------------;
SAI_DEC_THI PROC
	MOV BX,10
	MOV AX,VAULT_NUM3
	MOV SI,3
	
CONTA_DENOVO_AI_PFV_3:
	XOR DX,DX	
	DIV BX
	ADD DX, 30H
	MOV SCORE_ALG_TOP3[10+SI], DL
	DEC SI
	CMP SI, 0
	JGE CONTA_DENOVO_AI_PFV_3	

	RET
SAI_DEC_THI ENDP
;-----------------------------------------------------------------------------SAIDA DECIMAL PARA 3° COLOCADO---------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------RANKING CREDITS------------------------------------------------------------------;
RANKING_CREDITS PROC
	
;---------------------------POS TABELAS
	MOV TEXT_X, 24
	MOV TEXT_Y, 06
;-------------------------------------------------RANK EASY
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_RANK_EASY
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS TABELA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_SCORES_LIST
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS PRIMEIRO
	MOV WHICH_RANK,0
	CALL TOP3
	CALL PRINTF_RANK_POS
;-------------------------------------------------RANK MEDIUM
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_RANK_MEDIUM
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS TABELA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_SCORES_LIST
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS PRIMEIRO
	MOV WHICH_RANK,10
	CALL TOP3
	CALL PRINTF_RANK_POS
;-------------------------------------------------RANK HARD
;---------------------------LINHA 1
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_RANK_HARD
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS TABELA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_SCORES_LIST
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 2
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS PRIMEIRO
	MOV WHICH_RANK,20
	CALL TOP3
	CALL PRINTF_RANK_POS
;---------------------------RETURN
	INC TEXT_Y
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, 37	;COLUNA
	INT 10H
	
	LEA DX, MSG_RETURN
	MOV AH, 9H
	INT 21H

CONTINUE_TEST_RECEIVE_CARAC_RANKING:
	;INC COR
	MOV AH, 6H
	MOV DL, 255
	INT 21H
	JZ	CONTINUE_TEST_RECEIVE_CARAC_RANKING
	
	CALL LIMPA_TELA
	
	RET
RANKING_CREDITS ENDP
;-----------------------------------------------------------------------------RANKING CREDITS------------------------------------------------------------------;
;#######################################################################################################################################################################################
;-----------------------------------------------------------------------------PRINT RANK POS-------------------------------------------------------------------;
PRINTF_RANK_POS PROC
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_FIRST_LIST
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,23
	INT 10H
	
	MOV DX,OFFSET SCORE_ALG_TOP3
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,40
	INT 10H
	
	MOV DX,OFFSET NOMES_TOP3
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 3
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS SEGUNDO
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_SECOND_LIST
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,23
	INT 10H
	
	MOV DX,OFFSET SCORE_ALG_TOP3+5
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,40
	INT 10H
	
	MOV DX,OFFSET NOMES_TOP3+7
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 4
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------POS TERCEIRO
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_THIRD_LIST
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,23
	INT 10H
	
	MOV DX,OFFSET SCORE_ALG_TOP3+10
	MOV AH, 9H
	INT 21H
	
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	ADD DL,40
	INT 10H
	
	MOV DX,OFFSET NOMES_TOP3+14
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;---------------------------LINHA 5
	MOV AH,2H
	MOV BH,0
	MOV DH, TEXT_Y	;LINHA
	MOV DL, TEXT_X	;COLUNA
	INT 10H
	
	LEA DX, MSG_LINHA_MAIOR_AINDA
	MOV AH, 9H
	INT 21H
	
	INC TEXT_Y
;-------------------------------------------------RANK EASY
	
	RET
PRINTF_RANK_POS ENDP
;-----------------------------------------------------------------------------PRINT RANK POS-------------------------------------------------------------------;
;#####################################################################################################################################################################################;
;#########################################################################--------------RANK-------------#############################################################################;
;#####################################################################################################################################################################################;
;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;
END